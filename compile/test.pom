/*
 * Constants
 */
const one = 1
const fifteen = $F
const SIX5535 = $FFFF
const Six5536 = $10000
const million = 1000000
const another_one = one

global zp = @$00
global two = @$02.w
global three = @$03.t
global high = @$12345
global mmm = @million.t
global zp0 = @zp.w

/*
 * Code block
 */
sub Start @$FF0000 { // C-style comment
	var zp1 = @$01
	var addr16 = @$02.w
	var addr24 = @$10E.w

	cld

	LOOP {
		nop
	}

	/////// DEBUG
	var inthemiddle = @$12345

 simple_equals:
	A = 1
	X = 2000
	Y = million
	A.w = X

 memory_equals:
	M@$123 = M@$124
	M@$123.w = M@$124.b
	M@$123.b = M@$124.t
	M@$123 = $12
	M@$123 = $1234
	M@$123 = $123456
	M@$123 = A
	M@$123 = A.w
	M@$123 = X
	M@$123 = X.t
	M@$123 = Y
	M@$123.t = Y

 a_equals:
	A = M@$124
	A.w = M@$124.b
	A.b = M@$124.t
	A = $12
	A = $1234
	A = $123456
	A = X
	A = X.t
	A = Y
	A.t = Y
	A.b = $1234
	A.w = $12345
	A.t = 8000000 + A
  
 M_op_equals:
	M@$12.b += $1234
	M@$123.w += M@$124.b
	M@$123.b += M@$124.t
	M@$123456.t += 8000000

 A_op_equals:
	A.w += M@$80
	A.w += 3
	A += X.t
	A.w += Y
	A.t -= million
	a.t &= 0xFF
	a.t |= 0x7777
	a ^= $AAAAAA

 more_tests:
	@two = 321
	A.w = X + Y
	A = X.w + Y
	A = X + Y.w
	A.t = X.w + Y.w
	A = @zp1 + 1
	A = @zp0 + @zp1
	@high = $54321

	/*if (a == 1) {
		nop
	}*/
	/////// END

	lda #$0
	lda $1
	lda ($2)
	tax
	sta $123456		; asm-style comment
	sta.w $1234		; 16-bit value / 16-bit address
	sta.w $100002	; 16-bit value / 24-bit address
	sta.t $200003	; 24-bit value / 24-bit address
	jmp Title
	nop
}

/*
 * More code
 */
sub Title {
	var zp1 = @$101

 foo:
	nop
	and one
 bar:
	ora #fifteen
	and #2000000
	eor fifteen,X
	cmp six5535,X
	jmp elsewhere
	nop
 elsewhere:
   cld
}

/*
 * Example data blocks
 */
data Bytes byte {
	$00, $01, $02, $03, $04, $05, $06, $07
	$08, $09, $0a, $0b, $0c, $0d, $0e, $0f
}

data Words word {
	$0000, $1001, $2002, $3003
	16, 8000, 16000
}
data TwentyFours u24 {
	$a00000, $b01001, $c02002, $d03003, $e04004, $f05005
	32000, 64000, 1000000
}
data Text @$FF0800 string {
	"one", "two", "three"
	"the quick brown fox"
}


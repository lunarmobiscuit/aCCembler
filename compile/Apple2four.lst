0000fe          ; GLOBAL @TXTPTR
0003ff          ; GLOBAL @TXTROW
0003fe          ; GLOBAL @TXTPOS
000200          ; GLOBAL @TXTBUFFER
000280          ; GLOBAL @TXTBUFFER2
0003fd          ; GLOBAL @DISPMODE

ff0000 ; SUB Start:
ff0000 4f 4c 00 02 ff                      jmp.a24 $ff0200       ; Reset

ff0005 ; DATA ROMVectors:
ff0005 07 07 ff
ff0008 79 07 ff
ff000b a4 07 ff
ff000e cd 07 ff
ff0011 a6 06 ff
ff0014 b7 06 ff
ff0017 65 06 ff
ff001a ea 06 ff
ff001d 8c 04 ff
ff0020 82 08 ff

; 477 BYTES of FILLER

ff0200 ; SUB Reset:
ff0200 d8                                  cld
ff0201 8d 83 c0                            sta $c083             ; LANGSET
ff0204 8d 83 c0                            sta $c083             ; LANGSET
ff0207 1f                                  r16
ff0208 fc                                  sws
ff0209 1f a2 ff fe                         ldx.w #$feff          ; TOP_OF_STACK
ff020d 1f 9a                               txs.w
ff020f ad 51 c0                            lda $c051             ; TXTSET
ff0212 ad 54 c0                            lda $c054             ; TXTPAGE1
ff0215 ad 58 c0                            lda $c058             ; SETAN0
ff0218 ad 5a c0                            lda $c05a             ; SETAN1
ff021b ad 5d c0                            lda $c05d             ; CLRAN2
ff021e ad 5f c0                            lda $c05f             ; CLRAN3
ff0221 ad ff cf                            lda $cfff             ; CLRROM
ff0224 2c 10 c0                            bit $c010             ; KBDSTRB
ff0227 a9 02                               lda #$2
ff0229 8d ff 03                            sta $03ff             ; TXTROW
ff022c 9c fe 03                            stz $03fe             ; TXTPOS
ff022f a2 00                               ldx #$0
ff0231 a9 01                               lda #$1               ; DISP_TEXT_2
ff0233 8d fd 03                            sta $03fd             ; DISPMODE
ff0236 4f 20 79 07 ff                      jsr.a24 $ff0779       ; ClearScreen
ff023b 9c fd 03                            stz $03fd             ; DISPMODE
ff023e a2 00                               ldx #$0
ff0240 4f 20 79 07 ff                      jsr.a24 $ff0779       ; ClearScreen
ff0245 4f 20 82 08 ff                      jsr.a24 $ff0882       ; AppleII4

ff024a ; SUB EchoKeys:
ff024a 4f 20 08 08 ff                      jsr.a24 $ff0808       ; ClearInputBuffers
ff024f                 LOOPff024f_start:
ff024f                                 ;; LOOP {
ff024f                 LOOPff024f_loop:
ff024f 4f 20 7e 04 ff                      jsr.a24 $ff047e       ; ScreenBase
ff0254 ad fe 03                            lda $03fe             ; TXTPOS
ff0257                                 ;; IF == {
ff0257 d0 0c                               bne +12               ; IFff0257_end [ff0265]
ff0259 a9 ba                               lda #$ba
ff025b 4f 20 a6 06 ff                      jsr.a24 $ff06a6       ; PrintChar
ff0260 4f 20 ca 06 ff                      jsr.a24 $ff06ca       ; PrintCursor
ff0265                 IFff0257_end:
ff0265                 LOOPff0265_start:
ff0265                                 ;; LOOP {
ff0265                 LOOPff0265_loop:
ff0265 2c 00 c0                            bit $c000             ; KBD
ff0268                                 ;; IF - {
ff0268 10 04                               bpl +4                ; IFff0268_end [ff026e]
ff026a                                 ;; BREAK
ff026a 4f 80 02 00                         bra.a24 +2            ; loopff0265_end [ff0270]
ff026e                 IFff0268_end:
ff026e 80 f5                               bra -11               ; LOOPff0265_loop [ff0265]
ff0270                 LOOPff0265_end:
ff0270 ad 00 c0                            lda $c000             ; KBD
ff0273 2c 10 c0                            bit $c010             ; KBDSTRB
ff0276                                 ;; IF == 141 {
ff0276 c9 8d                               cmp #$8d
ff0278 d0 1b                               bne +27               ; IFff0276_end [ff0295]
ff027a 4f 20 da 06 ff                      jsr.a24 $ff06da       ; ClearCursor
ff027f 4f 20 a4 07 ff                      jsr.a24 $ff07a4       ; NextLine
ff0284 4f 20 33 08 ff                      jsr.a24 $ff0833       ; CurrentToPrevInputBuffer
ff0289 4f 20 2a 03 ff                      jsr.a24 $ff032a       ; CommandLine
ff028e 4f 20 16 08 ff                      jsr.a24 $ff0816       ; ClearCurrentInputBuffer
ff0293                                 ;; CONTINUE
ff0293 80 ba                               bra -70               ; loopff024f_start [ff024f]
ff0295                 IFff0276_end:
ff0295                                 ;; IF == 136 {
ff0295 c9 88                               cmp #$88
ff0297 d0 23                               bne +35               ; IFff0295_end [ff02bc]
ff0299                                 ;; IF > 1 {
ff0299 c9 01                               cmp #$1
ff029b f0 1d                               beq +29               ; IFff0299_end [ff02ba]
ff029d 90 1b                               bcc +27               ; IFff0299_end [ff02ba]
ff029f 4f 20 da 06 ff                      jsr.a24 $ff06da       ; ClearCursor
ff02a4 a9 a0                               lda #$a0
ff02a6 ac fe 03                            ldy $03fe             ; TXTPOS
ff02a9 88                                  dey
ff02aa 91 fe                               sta ($fe),Y           ; TXTPTR
ff02ac 88                                  dey
ff02ad a9 00                               lda #$0
ff02af 99 00 02                            sta $0200,Y           ; TXTBUFFER
ff02b2 ce fe 03                            dec $03fe             ; TXTPOS
ff02b5 4f 20 ca 06 ff                      jsr.a24 $ff06ca       ; PrintCursor
ff02ba                 IFff0299_end:
ff02ba                                 ;; CONTINUE
ff02ba 80 93                               bra -109              ; loopff024f_start [ff024f]
ff02bc                 IFff0295_end:
ff02bc                                 ;; IF == 149 {
ff02bc c9 95                               cmp #$95
ff02be d0 0d                               bne +13               ; IFff02bc_end [ff02cd]
ff02c0                                 ;; IF > 1 {
ff02c0 c9 01                               cmp #$1
ff02c2 f0 07                               beq +7                ; IFff02c0_end [ff02cb]
ff02c4 90 05                               bcc +5                ; IFff02c0_end [ff02cb]
ff02c6 4f 20 18 04 ff                      jsr.a24 $ff0418       ; CompleteCommand
ff02cb                 IFff02c0_end:
ff02cb                                 ;; CONTINUE
ff02cb 80 82                               bra -126              ; loopff024f_start [ff024f]
ff02cd                 IFff02bc_end:
ff02cd                                 ;; IF == 139 {
ff02cd c9 8b                               cmp #$8b
ff02cf d0 13                               bne +19               ; IFff02cd_end [ff02e4]
ff02d1 4f 20 24 08 ff                      jsr.a24 $ff0824       ; PrevToCurrentInputBuffer
ff02d6 4f 20 42 08 ff                      jsr.a24 $ff0842       ; InputBufferToTextScreen
ff02db 4f 20 ca 06 ff                      jsr.a24 $ff06ca       ; PrintCursor
ff02e0                                 ;; CONTINUE
ff02e0 4f 80 6b ff                         bra.a24 -149          ; loopff024f_start [ff024f]
ff02e4                 IFff02cd_end:
ff02e4                                 ;; IF == 155 {
ff02e4 c9 9b                               cmp #$9b
ff02e6 d0 21                               bne +33               ; IFff02e4_end [ff0309]
ff02e8 ae ff 03                            ldx $03ff             ; TXTROW
ff02eb 4f 20 61 07 ff                      jsr.a24 $ff0761       ; ClearRow
ff02f0 4f 20 16 08 ff                      jsr.a24 $ff0816       ; ClearCurrentInputBuffer
ff02f5 a9 00                               lda #$0
ff02f7 8d fe 03                            sta $03fe             ; TXTPOS
ff02fa ad fd 03                            lda $03fd             ; DISPMODE
ff02fd                                 ;; IF != {
ff02fd f0 06                               beq +6                ; IFff02fd_end [ff0305]
ff02ff ad 54 c0                            lda $c054             ; TXTPAGE1
ff0302 9c fd 03                            stz $03fd             ; DISPMODE
ff0305                 IFff02fd_end:
ff0305                                 ;; CONTINUE
ff0305 4f 80 46 ff                         bra.a24 -186          ; loopff024f_start [ff024f]
ff0309                 IFff02e4_end:
ff0309                                 ;; IF > 159 {
ff0309 c9 9f                               cmp #$9f
ff030b f0 19                               beq +25               ; IFff0309_end [ff0326]
ff030d 90 17                               bcc +23               ; IFff0309_end [ff0326]
ff030f ac fe 03                            ldy $03fe             ; TXTPOS
ff0312 4f 20 a6 06 ff                      jsr.a24 $ff06a6       ; PrintChar
ff0317 c0 28                               cpy #$28
ff0319                                 ;; IF < {
ff0319 b0 0b                               bcs +11               ; IFff0319_end [ff0326]
ff031b 29 7f                               and #$7f
ff031d 88                                  dey
ff031e 99 00 02                            sta $0200,Y           ; TXTBUFFER
ff0321 4f 20 ca 06 ff                      jsr.a24 $ff06ca       ; PrintCursor
ff0326                 IFff0319_end:
ff0326                 IFff0309_end:
ff0326 4f 80 25 ff                         bra.a24 -219          ; LOOPff024f_loop [ff024f]
ff032a                 LOOPff024f_end:

ff032a ; SUB CommandLine:
000004          ; VAR @I
000005          ; VAR @I6
ff032a 1f a9 00 02                         lda.w #$200           ; TXTBUFFER
ff032e 2f 8d 01 d0                         sta.t $00d001
ff0332 a9 00                               lda #$0
ff0334 8d 00 d0                            sta $d000
ff0337 a0 03                               ldy #$3
ff0339 a2 00                               ldx #$0
ff033b                 LOOPff033b_start:
ff033b                                 ;; LOOP {
ff033b                 LOOPff033b_loop:
ff033b bd 00 02                            lda $0200,X           ; TXTBUFFER
ff033e                                 ;; IF == 0 {
ff033e c9 00                               cmp #$0
ff0340 d0 04                               bne +4                ; IFff033e_end [ff0346]
ff0342                                 ;; BREAK
ff0342 4f 80 40 00                         bra.a24 +64           ; loopff033b_end [ff0386]
ff0346                 IFff033e_end:
ff0346 c9 20                               cmp #$20
ff0348                                 ;; IF == {
ff0348 d0 31                               bne +49               ; IFff0348_end [ff037b]
ff034a                 LOOPff034a_start:
ff034a                                 ;; LOOP {
ff034a                 LOOPff034a_loop:
ff034a bd 00 02                            lda $0200,X           ; TXTBUFFER
ff034d                                 ;; IF == 0 {
ff034d c9 00                               cmp #$0
ff034f d0 04                               bne +4                ; IFff034d_end [ff0355]
ff0351                                 ;; BREAK
ff0351 4f 80 10 00                         bra.a24 +16           ; loopff034a_end [ff0365]
ff0355                 IFff034d_end:
ff0355 c9 20                               cmp #$20
ff0357                                 ;; IF == {
ff0357 d0 06                               bne +6                ; IFff0357_end [ff035f]
ff0359 a9 00                               lda #$0
ff035b 9d 00 02                            sta $0200,X           ; TXTBUFFER
ff035e e8                                  inx
ff035f                 IFff0357_end:
ff035f                                 ;; BREAK
ff035f 4f 80 02 00                         bra.a24 +2            ; loopff034a_end [ff0365]
ff0363 80 e5                               bra -27               ; LOOPff034a_loop [ff034a]
ff0365                 LOOPff034a_end:
ff0365 1f a9 00 02                         lda.w #$200           ; TXTBUFFER
ff0369 18                                  clc
ff036a 1f db                               adx.w
ff036c 2f 99 01 d0                         sta.t $00d001,Y
ff0370 c8                                  iny
ff0371 c8                                  iny
ff0372 c8                                  iny
ff0373 ee 00 d0                            inc $d000
ff0376 e8                                  inx
ff0377                                 ;; BREAK
ff0377 4f 80 0b 00                         bra.a24 +11           ; loopff033b_end [ff0386]
ff037b                 IFff0348_end:
ff037b e8                                  inx
ff037c e0 7f                               cpx #$7f
ff037e                                 ;; IF >= {
ff037e 90 04                               bcc +4                ; IFff037e_end [ff0384]
ff0380                                 ;; BREAK
ff0380 4f 80 02 00                         bra.a24 +2            ; loopff033b_end [ff0386]
ff0384                 IFff037e_end:
ff0384 80 b5                               bra -75               ; LOOPff033b_loop [ff033b]
ff0386                 LOOPff033b_end:
ff0386                 LOOPff0386_start:
ff0386                                 ;; LOOP {
ff0386                 LOOPff0386_loop:
ff0386 bd 00 02                            lda $0200,X           ; TXTBUFFER
ff0389                                 ;; IF == 0 {
ff0389 c9 00                               cmp #$0
ff038b d0 04                               bne +4                ; IFff0389_end [ff0391]
ff038d                                 ;; BREAK
ff038d 4f 80 41 00                         bra.a24 +65           ; loopff0386_end [ff03d2]
ff0391                 IFff0389_end:
ff0391 c9 2c                               cmp #$2c
ff0393                                 ;; IF == {
ff0393 d0 32                               bne +50               ; IFff0393_end [ff03c7]
ff0395 a9 00                               lda #$0
ff0397 9d 00 02                            sta $0200,X           ; TXTBUFFER
ff039a e8                                  inx
ff039b                 LOOPff039b_start:
ff039b                                 ;; LOOP {
ff039b                 LOOPff039b_loop:
ff039b bd 00 02                            lda $0200,X           ; TXTBUFFER
ff039e                                 ;; IF == 0 {
ff039e c9 00                               cmp #$0
ff03a0 d0 04                               bne +4                ; IFff039e_end [ff03a6]
ff03a2                                 ;; BREAK
ff03a2 4f 80 10 00                         bra.a24 +16           ; loopff039b_end [ff03b6]
ff03a6                 IFff039e_end:
ff03a6 c9 20                               cmp #$20
ff03a8                                 ;; IF == {
ff03a8 d0 06                               bne +6                ; IFff03a8_end [ff03b0]
ff03aa a9 00                               lda #$0
ff03ac 9d 00 02                            sta $0200,X           ; TXTBUFFER
ff03af e8                                  inx
ff03b0                 IFff03a8_end:
ff03b0                                 ;; BREAK
ff03b0 4f 80 02 00                         bra.a24 +2            ; loopff039b_end [ff03b6]
ff03b4 80 e5                               bra -27               ; LOOPff039b_loop [ff039b]
ff03b6                 LOOPff039b_end:
ff03b6 1f a9 00 02                         lda.w #$200           ; TXTBUFFER
ff03ba 18                                  clc
ff03bb 1f db                               adx.w
ff03bd 2f 99 01 d0                         sta.t $00d001,Y
ff03c1 c8                                  iny
ff03c2 c8                                  iny
ff03c3 c8                                  iny
ff03c4 ee 00 d0                            inc $d000
ff03c7                 IFff0393_end:
ff03c7 e8                                  inx
ff03c8 e0 7f                               cpx #$7f
ff03ca                                 ;; IF >= {
ff03ca 90 04                               bcc +4                ; IFff03ca_end [ff03d0]
ff03cc                                 ;; BREAK
ff03cc 4f 80 02 00                         bra.a24 +2            ; loopff0386_end [ff03d2]
ff03d0                 IFff03ca_end:
ff03d0 80 b4                               bra -76               ; LOOPff0386_loop [ff0386]
ff03d2                 LOOPff0386_end:
ff03d2 2f ad 01 d0                         lda.t $00d001
ff03d6 2f 8d 00 d7                         sta.t $00d700
ff03da                 FORff03da_start:
ff03da                                 ;; FOR @I = 0 TO 13 {
ff03da a2 00                               ldx #$0
ff03dc 86 04                               stx $04
ff03de                 FORff03da_loop:
ff03de a5 04                               lda $04               ; I
ff03e0                       ;; A <<= 2 
ff03e0 0a                                  asl
ff03e1 0a                                  asl
ff03e2 85 05                               sta $05               ; I6
ff03e4 a5 04                               lda $04               ; I
ff03e6                       ;; A <<= 1 
ff03e6 0a                                  asl
ff03e7 18                                  clc
ff03e8 65 05                               adc $05               ; I6
ff03ea 85 05                               sta $05               ; I6
ff03ec aa                                  tax
ff03ed 6f bd 85 81 ff                      lda.t.a24 $ff8185,X   ; CommandList
ff03f2 2f 8d 03 d7                         sta.t $00d703
ff03f6 4f 20 8c 04 ff                      jsr.a24 $ff048c       ; CompareText
ff03fb                                 ;; IF - {
ff03fb 10 11                               bpl +17               ; IFff03fb_end [ff040e]
ff03fd a6 05                               ldx $05               ; I6
ff03ff 6f bd 88 81 ff                      lda.t.a24 $ff8188,X   ; CommandList
ff0404 2f 85 00                            sta.t $00
ff0407 4f 5c 00 00 00                      jsr.a24 ($00)
ff040c 4f 60                               rts.a24
ff040e                 IFff03fb_end:
ff040e e6 04                               inc $04
ff0410 a6 04                               ldx $04
ff0412 e0 0e                               cpx #$e
ff0414 d0 c8                               bne -56               ; FORff03da_loop [ff03de]
ff0416                 FORff03da_end:
ff0416 4f 60                               rts.a24

ff0418 ; SUB CompleteCommand:
000004          ; VAR @I
000005          ; VAR @I6
ff0418 1f a9 00 02                         lda.w #$200           ; TXTBUFFER
ff041c 2f 8d 00 d7                         sta.t $00d700
ff0420                 FORff0420_start:
ff0420                                 ;; FOR @I = 0 TO 13 {
ff0420 a2 00                               ldx #$0
ff0422 86 04                               stx $04
ff0424                 FORff0420_loop:
ff0424 a5 04                               lda $04               ; I
ff0426                       ;; A <<= 2 
ff0426 0a                                  asl
ff0427 0a                                  asl
ff0428 85 05                               sta $05               ; I6
ff042a a5 04                               lda $04               ; I
ff042c                       ;; A <<= 1 
ff042c 0a                                  asl
ff042d 18                                  clc
ff042e 65 05                               adc $05               ; I6
ff0430 85 05                               sta $05               ; I6
ff0432 aa                                  tax
ff0433 6f bd 85 81 ff                      lda.t.a24 $ff8185,X   ; CommandList
ff0438 2f 8d 03 d7                         sta.t $00d703
ff043c 4f 20 bb 04 ff                      jsr.a24 $ff04bb       ; CompareStartOfText
ff0441                                 ;; IF - {
ff0441 10 31                               bpl +49               ; IFff0441_end [ff0474]
ff0443 a6 05                               ldx $05               ; I6
ff0445 6f bd 85 81 ff                      lda.t.a24 $ff8185,X   ; CommandList
ff044a 2f 8d 00 d7                         sta.t $00d700
ff044e 1f a9 00 02                         lda.w #$200           ; TXTBUFFER
ff0452 2f 8d 03 d7                         sta.t $00d703
ff0456 4f 20 e0 04 ff                      jsr.a24 $ff04e0       ; CopyString
ff045b 1f a5 fe                            lda.w $fe             ; TXTPTR
ff045e 1f 1a                               inc.w
ff0460 2f 8d 03 d7                         sta.t $00d703
ff0464 4f 20 f9 04 ff                      jsr.a24 $ff04f9       ; CopyStringHigh
ff0469 c8                                  iny
ff046a 8c fe 03                            sty $03fe             ; TXTPOS
ff046d 4f 20 ca 06 ff                      jsr.a24 $ff06ca       ; PrintCursor
ff0472 4f 60                               rts.a24
ff0474                 IFff0441_end:
ff0474 e6 04                               inc $04
ff0476 a6 04                               ldx $04
ff0478 e0 0e                               cpx #$e
ff047a d0 a8                               bne -88               ; FORff0420_loop [ff0424]
ff047c                 FORff0420_end:
ff047c 4f 60                               rts.a24

ff047e ; SUB ScreenBase:
ff047e                       ;; X = M@$3ff 
ff047e ae ff 03                            ldx $03ff
ff0481 2b                                  xsl
ff0482 5f bd 00 80 ff                      lda.w.a24 $ff8000,X   ; TextScreenBase
ff0487 1f 85 fe                            sta.w $fe             ; TXTPTR
ff048a 4f 60                               rts.a24

ff048c ; SUB CompareText:
00d700-00d702   ; VAR @STR_A
00d703-00d705   ; VAR @STR_B
ff048c                 FORff048c_start:
ff048c                                 ;; FOR Y = 0 TO 127 {
ff048c a0 00                               ldy #$0
ff048e                 FORff048c_loop:
ff048e 2f ae 00 d7                         ldx.t $00d700         ; STR_A
ff0492 4f ab                               lda.a24 XY
ff0494 2f ae 03 d7                         ldx.t $00d703         ; STR_B
ff0498 4f cb                               cmp.a24 XY
ff049a                                 ;; IF != {
ff049a f0 04                               beq +4                ; IFff049a_end [ff04a0]
ff049c a9 00                               lda #$0
ff049e 4f 60                               rts.a24
ff04a0                 IFff049a_end:
ff04a0                                 ;; IF == 0 {
ff04a0 c9 00                               cmp #$0
ff04a2 d0 0e                               bne +14               ; IFff04a0_end [ff04b2]
ff04a4 4f ab                               lda.a24 XY
ff04a6                                 ;; IF == 0 {
ff04a6 c9 00                               cmp #$0
ff04a8 d0 04                               bne +4                ; IFff04a6_end [ff04ae]
ff04aa a9 ff                               lda #$ff
ff04ac 4f 60                               rts.a24
ff04ae                 IFff04a6_end:
ff04ae a9 00                               lda #$0
ff04b0 4f 60                               rts.a24
ff04b2                 IFff04a0_end:
ff04b2 c8                                  iny
ff04b3 c0 80                               cpy #$80
ff04b5 d0 d7                               bne -41               ; FORff048c_loop [ff048e]
ff04b7                 FORff048c_end:
ff04b7 a9 00                               lda #$0
ff04b9 4f 60                               rts.a24

ff04bb ; SUB CompareStartOfText:
00d700-00d702   ; VAR @STR_A
00d703-00d705   ; VAR @STR_B
ff04bb                 FORff04bb_start:
ff04bb                                 ;; FOR Y = 0 TO 127 {
ff04bb a0 00                               ldy #$0
ff04bd                 FORff04bb_loop:
ff04bd 2f ae 00 d7                         ldx.t $00d700         ; STR_A
ff04c1 4f ab                               lda.a24 XY
ff04c3                                 ;; IF == 0 {
ff04c3 c9 00                               cmp #$0
ff04c5 d0 04                               bne +4                ; IFff04c3_end [ff04cb]
ff04c7 a9 ff                               lda #$ff
ff04c9 4f 60                               rts.a24
ff04cb                 IFff04c3_end:
ff04cb 2f ae 03 d7                         ldx.t $00d703         ; STR_B
ff04cf 4f cb                               cmp.a24 XY
ff04d1                                 ;; IF != {
ff04d1 f0 04                               beq +4                ; IFff04d1_end [ff04d7]
ff04d3 a9 00                               lda #$0
ff04d5 4f 60                               rts.a24
ff04d7                 IFff04d1_end:
ff04d7 c8                                  iny
ff04d8 c0 80                               cpy #$80
ff04da d0 e1                               bne -31               ; FORff04bb_loop [ff04bd]
ff04dc                 FORff04bb_end:
ff04dc a9 00                               lda #$0
ff04de 4f 60                               rts.a24

ff04e0 ; SUB CopyString:
00d700-00d702   ; VAR @STR_FROM
00d703-00d705   ; VAR @STR_TO
ff04e0                 FORff04e0_start:
ff04e0                                 ;; FOR Y = 0 TO 127 {
ff04e0 a0 00                               ldy #$0
ff04e2                 FORff04e0_loop:
ff04e2 2f ae 00 d7                         ldx.t $00d700         ; STR_FROM
ff04e6 4f ab                               lda.a24 XY
ff04e8                                 ;; IF == {
ff04e8 d0 02                               bne +2                ; IFff04e8_end [ff04ec]
ff04ea 4f 60                               rts.a24
ff04ec                 IFff04e8_end:
ff04ec 2f ae 03 d7                         ldx.t $00d703         ; STR_TO
ff04f0 4f bb                               sta.a24 XY
ff04f2 c8                                  iny
ff04f3 c0 80                               cpy #$80
ff04f5 d0 eb                               bne -21               ; FORff04e0_loop [ff04e2]
ff04f7                 FORff04e0_end:
ff04f7 4f 60                               rts.a24

ff04f9 ; SUB CopyStringHigh:
00d700-00d702   ; VAR @STR_FROM
00d703-00d705   ; VAR @STR_TO
ff04f9                 FORff04f9_start:
ff04f9                                 ;; FOR Y = 0 TO 127 {
ff04f9 a0 00                               ldy #$0
ff04fb                 FORff04f9_loop:
ff04fb 2f ae 00 d7                         ldx.t $00d700         ; STR_FROM
ff04ff 4f ab                               lda.a24 XY
ff0501                                 ;; IF == {
ff0501 d0 02                               bne +2                ; IFff0501_end [ff0505]
ff0503 4f 60                               rts.a24
ff0505                 IFff0501_end:
ff0505 09 80                               ora #$80
ff0507 2f ae 03 d7                         ldx.t $00d703         ; STR_TO
ff050b 4f bb                               sta.a24 XY
ff050d c8                                  iny
ff050e c0 80                               cpy #$80
ff0510 d0 e9                               bne -23               ; FORff04f9_loop [ff04fb]
ff0512                 FORff04f9_end:
ff0512 4f 60                               rts.a24

ff0514 ; SUB PrintHex24:
ff0514 2f 8d fc d7                         sta.t $00d7fc
ff0518 2f 1b                               sr8.t
ff051a 2f 1b                               sr8.t
ff051c 4f 20 4d 05 ff                      jsr.a24 $ff054d       ; PrintHexByte
ff0521 2f ad fc d7                         lda.t $00d7fc
ff0525 1f 1b                               sr8.w
ff0527 4f 20 4d 05 ff                      jsr.a24 $ff054d       ; PrintHexByte
ff052c 2f ad fc d7                         lda.t $00d7fc
ff0530 4f 20 4d 05 ff                      jsr.a24 $ff054d       ; PrintHexByte
ff0535 4f 60                               rts.a24

ff0537 ; SUB PrintHexWord:
ff0537 1f 8d fd d7                         sta.w $00d7fd
ff053b 1f 1b                               sr8.w
ff053d 4f 20 4d 05 ff                      jsr.a24 $ff054d       ; PrintHexByte
ff0542 1f ad fd d7                         lda.w $00d7fd
ff0546 4f 20 4d 05 ff                      jsr.a24 $ff054d       ; PrintHexByte
ff054b 4f 60                               rts.a24

ff054d ; SUB PrintHexByte:
ff054d 8d ff d7                            sta $d7ff
ff0550 4a                                  lsr
ff0551 4a                                  lsr
ff0552 4a                                  lsr
ff0553 4a                                  lsr
ff0554 4f 20 65 05 ff                      jsr.a24 $ff0565       ; PrintHexDigit
ff0559 ad ff d7                            lda $d7ff
ff055c 29 0f                               and #$f
ff055e 4f 20 65 05 ff                      jsr.a24 $ff0565       ; PrintHexDigit
ff0563 4f 60                               rts.a24

ff0565 ; SUB PrintHexDigit:
ff0565 c9 0a                               cmp #$a
ff0567                                 ;; IF < {
ff0567 b0 04                               bcs +4                ; IFff0567_else [ff056d]
ff0569 69 b0                               adc #$b0
ff056b 80 03                               bra +3                ; IFff0567_end [ff0570]
ff056d                 IFff0567_else:
ff056d                                 ;; ELSE
ff056d 18                                  clc
ff056e 69 b7                               adc #$b7
ff0570                 IFff0567_end:
ff0570 1f a6 fe                            ldx.w $fe             ; TXTPTR
ff0573 ac fe 03                            ldy $03fe             ; TXTPOS
ff0576 4f bb                               sta.a24 XY
ff0578 ee fe 03                            inc $03fe             ; TXTPOS
ff057b 4f 60                               rts.a24

ff057d ; SUB ParseNumber:
00d700-00d702   ; VAR @STR
ff057d 2f ae 00 d7                         ldx.t $00d700         ; STR
ff0581 a0 00                               ldy #$0
ff0583 4f ab                               lda.a24 XY
ff0585 c9 24                               cmp #$24
ff0587                                 ;; IF == {
ff0587 d0 07                               bne +7                ; IFff0587_else [ff0590]
ff0589 4f 4c 95 05 ff                      jmp.a24 $ff0595       ; ParseHexNumber
ff058e 80 05                               bra +5                ; IFff0587_end [ff0595]
ff0590                 IFff0587_else:
ff0590                                 ;; ELSE
ff0590 4f 4c 02 06 ff                      jmp.a24 $ff0602       ; ParseDecimalNumber
ff0595                 IFff0587_end:

ff0595 ; SUB ParseHexNumber:
000000-000002   ; VAR @VAL
ff0595 2f 64 00                            stz.t $00             ; VAL
ff0598 a0 01                               ldy #$1
ff059a                 LOOPff059a_start:
ff059a                                 ;; LOOP {
ff059a                 LOOPff059a_loop:
ff059a 4f ab                               lda.a24 XY
ff059c                                 ;; IF == {
ff059c d0 04                               bne +4                ; IFff059c_end [ff05a2]
ff059e                                 ;; BREAK
ff059e 4f 80 5b 00                         bra.a24 +91           ; loopff059a_end [ff05fd]
ff05a2                 IFff059c_end:
ff05a2 2f a5 00                            lda.t $00             ; VAL
ff05a5 2f 0a                               asl.t
ff05a7 2f 0a                               asl.t
ff05a9 2f 0a                               asl.t
ff05ab 2f 0a                               asl.t
ff05ad 2f 85 00                            sta.t $00             ; VAL
ff05b0 4f ab                               lda.a24 XY
ff05b2 c9 30                               cmp #$30
ff05b4                                 ;; IF >= {
ff05b4 90 41                               bcc +65               ; IFff05b4_end [ff05f7]
ff05b6 c9 39                               cmp #$39
ff05b8                                 ;; IF <= {
ff05b8 f0 02                               beq +2                ; IFff05b8_end_eq [ff05bc]
ff05ba b0 0d                               bcs +13               ; IFff05b8_end [ff05c9]
ff05bc                 IFff05b8_end_eq:
ff05bc 38                                  sec
ff05bd e9 30                               sbc #$30
ff05bf 18                                  clc
ff05c0 2f 65 00                            adc.t $00             ; VAL
ff05c3 2f 85 00                            sta.t $00             ; VAL
ff05c6 c8                                  iny
ff05c7                                 ;; CONTINUE
ff05c7 80 d1                               bra -47               ; loopff059a_start [ff059a]
ff05c9                 IFff05b8_end:
ff05c9 c9 41                               cmp #$41
ff05cb                                 ;; IF >= {
ff05cb 90 2a                               bcc +42               ; IFff05cb_end [ff05f7]
ff05cd c9 47                               cmp #$47
ff05cf                                 ;; IF <= {
ff05cf f0 02                               beq +2                ; IFff05cf_end_eq [ff05d3]
ff05d1 b0 0d                               bcs +13               ; IFff05cf_end [ff05e0]
ff05d3                 IFff05cf_end_eq:
ff05d3 38                                  sec
ff05d4 e9 37                               sbc #$37
ff05d6 18                                  clc
ff05d7 2f 65 00                            adc.t $00             ; VAL
ff05da 2f 85 00                            sta.t $00             ; VAL
ff05dd c8                                  iny
ff05de                                 ;; CONTINUE
ff05de 80 ba                               bra -70               ; loopff059a_start [ff059a]
ff05e0                 IFff05cf_end:
ff05e0 c9 61                               cmp #$61
ff05e2                                 ;; IF >= {
ff05e2 90 13                               bcc +19               ; IFff05e2_end [ff05f7]
ff05e4 c9 67                               cmp #$67
ff05e6                                 ;; IF <= {
ff05e6 f0 02                               beq +2                ; IFff05e6_end_eq [ff05ea]
ff05e8 b0 0d                               bcs +13               ; IFff05e6_end [ff05f7]
ff05ea                 IFff05e6_end_eq:
ff05ea 38                                  sec
ff05eb e9 57                               sbc #$57
ff05ed 18                                  clc
ff05ee 2f 65 00                            adc.t $00             ; VAL
ff05f1 2f 85 00                            sta.t $00             ; VAL
ff05f4 c8                                  iny
ff05f5                                 ;; CONTINUE
ff05f5 80 a3                               bra -93               ; loopff059a_start [ff059a]
ff05f7                 IFff05e6_end:
ff05f7                 IFff05e2_end:
ff05f7                 IFff05cb_end:
ff05f7                 IFff05b4_end:
ff05f7                                 ;; BREAK
ff05f7 4f 80 02 00                         bra.a24 +2            ; loopff059a_end [ff05fd]
ff05fb 80 9d                               bra -99               ; LOOPff059a_loop [ff059a]
ff05fd                 LOOPff059a_end:
ff05fd 2f a5 00                            lda.t $00             ; VAL
ff0600 4f 60                               rts.a24

ff0602 ; SUB ParseDecimalNumber:
000000-000002   ; VAR @VAL
000003-000005   ; VAR @STR
ff0602 2f 64 00                            stz.t $00             ; VAL
ff0605 2f 86 03                            stx.t $03             ; STR
ff0608 a0 00                               ldy #$0
ff060a                 LOOPff060a_start:
ff060a                                 ;; LOOP {
ff060a                 LOOPff060a_loop:
ff060a 4f ab                               lda.a24 XY
ff060c                                 ;; IF == {
ff060c d0 04                               bne +4                ; IFff060c_end [ff0612]
ff060e                                 ;; BREAK
ff060e 4f 80 2d 00                         bra.a24 +45           ; loopff060a_end [ff063f]
ff0612                 IFff060c_end:
ff0612 2f a5 00                            lda.t $00             ; VAL
ff0615 4f 20 44 06 ff                      jsr.a24 $ff0644       ; Times10
ff061a 2f 85 00                            sta.t $00             ; VAL
ff061d 2f a6 03                            ldx.t $03             ; STR
ff0620 4f ab                               lda.a24 XY
ff0622 c9 30                               cmp #$30
ff0624                                 ;; IF >= {
ff0624 90 17                               bcc +23               ; IFff0624_end [ff063d]
ff0626 c9 39                               cmp #$39
ff0628                                 ;; IF <= {
ff0628 f0 02                               beq +2                ; IFff0628_end_eq [ff062c]
ff062a b0 0d                               bcs +13               ; IFff0628_end [ff0639]
ff062c                 IFff0628_end_eq:
ff062c 38                                  sec
ff062d e9 30                               sbc #$30
ff062f 18                                  clc
ff0630 2f 65 00                            adc.t $00             ; VAL
ff0633 2f 85 00                            sta.t $00             ; VAL
ff0636 c8                                  iny
ff0637                                 ;; CONTINUE
ff0637 80 d1                               bra -47               ; loopff060a_start [ff060a]
ff0639                 IFff0628_end:
ff0639                                 ;; BREAK
ff0639 4f 80 02 00                         bra.a24 +2            ; loopff060a_end [ff063f]
ff063d                 IFff0624_end:
ff063d 80 cb                               bra -53               ; LOOPff060a_loop [ff060a]
ff063f                 LOOPff060a_end:
ff063f 2f a5 00                            lda.t $00             ; VAL
ff0642 4f 60                               rts.a24

ff0644 ; SUB Times10:
ff0644 2f 0a                               asl.t
ff0646 2f aa                               tax.t
ff0648 2f 0a                               asl.t
ff064a 2f 0a                               asl.t
ff064c 18                                  clc
ff064d 2f db                               adx.t
ff064f 4f 60                               rts.a24

ff0651 ; SUB Modulo:
00000c-00000e   ; VAR @MODULO
ff0651 2f 86 0c                            stx.t $0c             ; MODULO
ff0654 a0 00                               ldy #$0
ff0656                 LOOPff0656_start:
ff0656                                 ;; LOOP {
ff0656                 LOOPff0656_loop:
ff0656 38                                  sec
ff0657 2f e5 0c                            sbc.t $0c             ; MODULO
ff065a                                 ;; IF - {
ff065a 10 06                               bpl +6                ; IFff065a_end [ff0662]
ff065c 18                                  clc
ff065d 2f 65 0c                            adc.t $0c             ; MODULO
ff0660 4f 60                               rts.a24
ff0662                 IFff065a_end:
ff0662 c8                                  iny
ff0663 80 f1                               bra -15               ; LOOPff0656_loop [ff0656]
ff0665                 LOOPff0656_end:

ff0665 ; SUB PrintString:
00d700-00d702   ; VAR @STR
000000          ; VAR @IDX
ff0665                 FORff0665_start:
ff0665                                 ;; FOR @IDX = 0 TO 39 {
ff0665 a2 00                               ldx #$0
ff0667 86 00                               stx $00
ff0669                 FORff0665_loop:
ff0669 2f ae 00 d7                         ldx.t $00d700         ; STR
ff066d a4 00                               ldy $00               ; IDX
ff066f 4f ab                               lda.a24 XY
ff0671                                 ;; IF == {
ff0671 d0 02                               bne +2                ; IFff0671_end [ff0675]
ff0673 4f 60                               rts.a24
ff0675                 IFff0671_end:
ff0675 09 80                               ora #$80
ff0677 1f a6 fe                            ldx.w $fe             ; TXTPTR
ff067a ac fe 03                            ldy $03fe             ; TXTPOS
ff067d c0 28                               cpy #$28
ff067f                                 ;; IF < {
ff067f b0 05                               bcs +5                ; IFff067f_end [ff0686]
ff0681 4f bb                               sta.a24 XY
ff0683 ee fe 03                            inc $03fe             ; TXTPOS
ff0686                 IFff067f_end:
ff0686 e6 00                               inc $00
ff0688 a6 00                               ldx $00
ff068a e0 28                               cpx #$28
ff068c d0 db                               bne -37               ; FORff0665_loop [ff0669]
ff068e                 FORff0665_end:
ff068e 4f 60                               rts.a24

ff0690 ; SUB PrintError:
00d700          ; VAR @ERR_STR
ff0690 4f 20 a4 07 ff                      jsr.a24 $ff07a4       ; NextLine
ff0695 4f 20 65 06 ff                      jsr.a24 $ff0665       ; PrintString
ff069a 4f 20 a4 07 ff                      jsr.a24 $ff07a4       ; NextLine
ff069f 4f 20 a4 07 ff                      jsr.a24 $ff07a4       ; NextLine
ff06a4 4f 60                               rts.a24

ff06a6 ; SUB PrintChar:
ff06a6 1f a6 fe                            ldx.w $fe             ; TXTPTR
ff06a9 ac fe 03                            ldy $03fe             ; TXTPOS
ff06ac c0 28                               cpy #$28
ff06ae                                 ;; IF < {
ff06ae b0 05                               bcs +5                ; IFff06ae_end [ff06b5]
ff06b0 4f bb                               sta.a24 XY
ff06b2 ee fe 03                            inc $03fe             ; TXTPOS
ff06b5                 IFff06ae_end:
ff06b5 4f 60                               rts.a24

ff06b7 ; SUB PrintSpace:
ff06b7 a9 a0                               lda #$a0
ff06b9 1f a6 fe                            ldx.w $fe             ; TXTPTR
ff06bc ac fe 03                            ldy $03fe             ; TXTPOS
ff06bf c0 28                               cpy #$28
ff06c1                                 ;; IF < {
ff06c1 b0 05                               bcs +5                ; IFff06c1_end [ff06c8]
ff06c3 4f bb                               sta.a24 XY
ff06c5 ee fe 03                            inc $03fe             ; TXTPOS
ff06c8                 IFff06c1_end:
ff06c8 4f 60                               rts.a24

ff06ca ; SUB PrintCursor:
ff06ca 1f a6 fe                            ldx.w $fe             ; TXTPTR
ff06cd ac fe 03                            ldy $03fe             ; TXTPOS
ff06d0 c0 28                               cpy #$28
ff06d2                                 ;; IF < {
ff06d2 b0 04                               bcs +4                ; IFff06d2_end [ff06d8]
ff06d4 a9 df                               lda #$df
ff06d6 4f bb                               sta.a24 XY
ff06d8                 IFff06d2_end:
ff06d8 4f 60                               rts.a24

ff06da ; SUB ClearCursor:
ff06da ac fe 03                            ldy $03fe             ; TXTPOS
ff06dd c0 28                               cpy #$28
ff06df                                 ;; IF < {
ff06df b0 07                               bcs +7                ; IFff06df_end [ff06e8]
ff06e1 a9 a0                               lda #$a0
ff06e3 1f a6 fe                            ldx.w $fe             ; TXTPTR
ff06e6 4f bb                               sta.a24 XY
ff06e8                 IFff06df_end:
ff06e8 4f 60                               rts.a24

ff06ea ; SUB PlayBeep:
ff06ea                 FORff06ea_start:
ff06ea                                 ;; FOR X = 0 TO 8 {
ff06ea a2 00                               ldx #$0
ff06ec                 FORff06ea_loop:
ff06ec 4f bd 36 81 ff                      lda.a24 $ff8136,X     ; BeepTimes
ff06f1                 FORff06f1_start:
ff06f1                                 ;; FOR Y = 0 TO 16 {
ff06f1 a0 00                               ldy #$0
ff06f3                 FORff06f1_loop:
ff06f3 4f 20 07 07 ff                      jsr.a24 $ff0707       ; Wait
ff06f8 2c 30 c0                            bit $c030             ; SPKR
ff06fb c8                                  iny
ff06fc c0 11                               cpy #$11
ff06fe d0 f3                               bne -13               ; FORff06f1_loop [ff06f3]
ff0700                 FORff06f1_end:
ff0700 e8                                  inx
ff0701 e0 09                               cpx #$9
ff0703 d0 e7                               bne -25               ; FORff06ea_loop [ff06ec]
ff0705                 FORff06ea_end:
ff0705 4f 60                               rts.a24

ff0707 ; SUB Wait:
ff0707 2f da                               phx.t
ff0709 2f 48                               pha.t
ff070b                 FORff070b_start:
ff070b                                 ;; FOR X = 1 TO 3 {
ff070b a2 01                               ldx #$1
ff070d                 FORff070b_loop:
ff070d 2f 68                               pla.t
ff070f 2f 48                               pha.t
ff0711                 DOff0711_start:
ff0711                                 ;; DO {
ff0711                 DOff0711_loop:
ff0711 2f 3a                               dec.t
ff0713 2f c9 00 00 00                      cmp.t #$0
ff0718                                 ;; WHILE !=
ff0718 f0 02                               beq +2                ; DOff0711_end [ff071c]
ff071a 80 f5                               bra -11               ; DOff0711_loop [ff0711]
ff071c                 DOff0711_end:
ff071c e8                                  inx
ff071d e0 04                               cpx #$4
ff071f d0 ec                               bne -20               ; FORff070b_loop [ff070d]
ff0721                 FORff070b_end:
ff0721 2f 68                               pla.t
ff0723 2f fa                               plx.t
ff0725 4f 60                               rts.a24

ff0727 ; SUB PrintDebugValue:
ff0727 48                                  pha
ff0728 48                                  pha
ff0729                       ;; A >>= 4 
ff0729 4a                                  lsr
ff072a 4a                                  lsr
ff072b 4a                                  lsr
ff072c 4a                                  lsr
ff072d                                 ;; IF >= 10 {
ff072d c9 0a                               cmp #$a
ff072f 90 05                               bcc +5                ; IFff072d_else [ff0736]
ff0731                       ;; A += 183 
ff0731 18                                  clc
ff0732 69 b7                               adc #$b7
ff0734 80 03                               bra +3                ; IFff072d_end [ff0739]
ff0736                 IFff072d_else:
ff0736                                 ;; ELSE
ff0736                       ;; A += 176 
ff0736 18                                  clc
ff0737 69 b0                               adc #$b0
ff0739                 IFff072d_end:
ff0739 8d 26 04                            sta $0426
ff073c 68                                  pla
ff073d                       ;; A &= 15 
ff073d 29 0f                               and #$f
ff073f                                 ;; IF >= 10 {
ff073f c9 0a                               cmp #$a
ff0741 90 05                               bcc +5                ; IFff073f_else [ff0748]
ff0743                       ;; A += 183 
ff0743 18                                  clc
ff0744 69 b7                               adc #$b7
ff0746 80 03                               bra +3                ; IFff073f_end [ff074b]
ff0748                 IFff073f_else:
ff0748                                 ;; ELSE
ff0748                       ;; A += 176 
ff0748 18                                  clc
ff0749 69 b0                               adc #$b0
ff074b                 IFff073f_end:
ff074b 8d 27 04                            sta $0427
ff074e 68                                  pla
ff074f 4f 60                               rts.a24

ff0751 ; SUB PrintDebugChar:
ff0751 8d 27 04                            sta $0427
ff0754 a9 a0                               lda #$a0
ff0756 8d 26 04                            sta $0426
ff0759 4f 60                               rts.a24

ff075b ; SUB PrintDebug2Chars:
ff075b 1f 8d 26 04                         sta.w $000426
ff075f 4f 60                               rts.a24

ff0761 ; SUB ClearRow:
ff0761 2b                                  xsl
ff0762 5f bd 00 80 ff                      lda.w.a24 $ff8000,X   ; TextScreenBase
ff0767 1f 85 fe                            sta.w $fe             ; TXTPTR
ff076a 1f aa                               tax.w
ff076c a9 a0                               lda #$a0
ff076e a0 00                               ldy #$0
ff0770                 loop_clear_char:
ff0770 4f bb                               sta.a24 XY
ff0772 c8                                  iny
ff0773 c0 28                               cpy #$28
ff0775 d0 f9                               bne -7                ; loop_clear_char [ff0770]
ff0777 4f 60                               rts.a24

ff0779 ; SUB ClearScreen:
000000-000002   ; VAR @ROWPTR
ff0779 2b                                  xsl
ff077a                 DOff077a_start:
ff077a                                 ;; DO {
ff077a                 DOff077a_loop:
ff077a 6f bd 00 80 ff                      lda.t.a24 $ff8000,X   ; TextScreenBase
ff077f ac fd 03                            ldy $03fd             ; DISPMODE
ff0782 c0 01                               cpy #$1               ; DISP_TEXT_2
ff0784                                 ;; IF == {
ff0784 d0 06                               bne +6                ; IFff0784_end [ff078c]
ff0786 18                                  clc
ff0787 2f 69 00 04 00                      adc.t #$400
ff078c                 IFff0784_end:
ff078c 1f 85 00                            sta.w $00             ; ROWPTR
ff078f a9 a0                               lda #$a0
ff0791                 FORff0791_start:
ff0791                                 ;; FOR Y = 0 TO 39 {
ff0791 a0 00                               ldy #$0
ff0793                 FORff0791_loop:
ff0793 91 00                               sta ($00),Y           ; ROWPTR
ff0795 c8                                  iny
ff0796 c0 28                               cpy #$28
ff0798 d0 f9                               bne -7                ; FORff0791_loop [ff0793]
ff079a                 FORff0791_end:
ff079a e8                                  inx
ff079b e8                                  inx
ff079c e0 30                               cpx #$30
ff079e                                 ;; WHILE !=
ff079e f0 02                               beq +2                ; DOff077a_end [ff07a2]
ff07a0 80 d8                               bra -40               ; DOff077a_loop [ff077a]
ff07a2                 DOff077a_end:
ff07a2 4f 60                               rts.a24

ff07a4 ; SUB NextLine:
ff07a4 ad ff 03                            lda $03ff             ; TXTROW
ff07a7 c9 17                               cmp #$17
ff07a9                                 ;; IF < {
ff07a9 b0 0f                               bcs +15               ; IFff07a9_else [ff07ba]
ff07ab ee ff 03                            inc $03ff             ; TXTROW
ff07ae 4f 20 7e 04 ff                      jsr.a24 $ff047e       ; ScreenBase
ff07b3 a9 00                               lda #$0
ff07b5 8d fe 03                            sta $03fe             ; TXTPOS
ff07b8 80 11                               bra +17               ; IFff07a9_end [ff07cb]
ff07ba                 IFff07a9_else:
ff07ba                                 ;; ELSE
ff07ba a2 02                               ldx #$2
ff07bc 4f 20 cd 07 ff                      jsr.a24 $ff07cd       ; ScrollScreen
ff07c1 a9 17                               lda #$17
ff07c3 8d ff 03                            sta $03ff             ; TXTROW
ff07c6 a9 00                               lda #$0
ff07c8 8d fe 03                            sta $03fe             ; TXTPOS
ff07cb                 IFff07a9_end:
ff07cb 4f 60                               rts.a24

ff07cd ; SUB ScrollScreen:
ff07cd 2b                                  xsl
ff07ce                 loop_scroll_line:
ff07ce 5f bd 00 80 ff                      lda.w.a24 $ff8000,X   ; TextScreenBase
ff07d3 1f 85 fe                            sta.w $fe             ; TXTPTR
ff07d6 5f bd 02 80 ff                      lda.w.a24 $ff8002,X   ; TextScreenBase
ff07db 1f 85 00                            sta.w $00
ff07de a0 00                               ldy #$0
ff07e0                 loop_scroll_char:
ff07e0 b1 00                               lda ($00),Y
ff07e2 91 fe                               sta ($fe),Y           ; TXTPTR
ff07e4 c8                                  iny
ff07e5 c0 28                               cpy #$28
ff07e7 d0 f7                               bne -9                ; loop_scroll_char [ff07e0]
ff07e9 e8                                  inx
ff07ea e8                                  inx
ff07eb e0 2e                               cpx #$2e
ff07ed d0 df                               bne -33               ; loop_scroll_line [ff07ce]
ff07ef                 scroll_clear_last_line:
ff07ef 5f bd 00 80 ff                      lda.w.a24 $ff8000,X   ; TextScreenBase
ff07f4 1f 85 fe                            sta.w $fe             ; TXTPTR
ff07f7 1f a9 a0 a0                         lda.w #$a0a0
ff07fb a0 00                               ldy #$0
ff07fd                 loop_scroll_clear_line:
ff07fd 1f 91 fe                            sta.w ($fe),Y         ; TXTPTR
ff0800 c8                                  iny
ff0801 c8                                  iny
ff0802 c0 28                               cpy #$28
ff0804 d0 f7                               bne -9                ; loop_scroll_clear_line [ff07fd]
ff0806                 done_with_scroll:
ff0806 4f 60                               rts.a24

ff0808 ; SUB ClearInputBuffers:
ff0808 a9 00                               lda #$0
ff080a                 FORff080a_start:
ff080a                                 ;; FOR X = 0 TO 255 {
ff080a a2 00                               ldx #$0
ff080c                 FORff080a_loop:
ff080c 9d 00 02                            sta $0200,X           ; TXTBUFFER
ff080f e8                                  inx
ff0810 e0 00                               cpx #$100
ff0812 d0 f8                               bne -8                ; FORff080a_loop [ff080c]
ff0814                 FORff080a_end:
ff0814 4f 60                               rts.a24

ff0816 ; SUB ClearCurrentInputBuffer:
ff0816 a9 00                               lda #$0
ff0818                 FORff0818_start:
ff0818                                 ;; FOR X = 0 TO 127 {
ff0818 a2 00                               ldx #$0
ff081a                 FORff0818_loop:
ff081a 9d 00 02                            sta $0200,X           ; TXTBUFFER
ff081d e8                                  inx
ff081e e0 80                               cpx #$80
ff0820 d0 f8                               bne -8                ; FORff0818_loop [ff081a]
ff0822                 FORff0818_end:
ff0822 4f 60                               rts.a24

ff0824 ; SUB PrevToCurrentInputBuffer:
ff0824                 FORff0824_start:
ff0824                                 ;; FOR X = 0 TO 127 {
ff0824 a2 00                               ldx #$0
ff0826                 FORff0824_loop:
ff0826 bd 80 02                            lda $0280,X           ; TXTBUFFER2
ff0829 9d 00 02                            sta $0200,X           ; TXTBUFFER
ff082c e8                                  inx
ff082d e0 80                               cpx #$80
ff082f d0 f5                               bne -11               ; FORff0824_loop [ff0826]
ff0831                 FORff0824_end:
ff0831 4f 60                               rts.a24

ff0833 ; SUB CurrentToPrevInputBuffer:
ff0833                 FORff0833_start:
ff0833                                 ;; FOR X = 0 TO 127 {
ff0833 a2 00                               ldx #$0
ff0835                 FORff0833_loop:
ff0835 bd 00 02                            lda $0200,X           ; TXTBUFFER
ff0838 9d 80 02                            sta $0280,X           ; TXTBUFFER2
ff083b e8                                  inx
ff083c e0 80                               cpx #$80
ff083e d0 f5                               bne -11               ; FORff0833_loop [ff0835]
ff0840                 FORff0833_end:
ff0840 4f 60                               rts.a24

ff0842 ; SUB InputBufferToTextScreen:
ff0842 a0 01                               ldy #$1
ff0844                 FORff0844_start:
ff0844                                 ;; FOR X = 0 TO 39 {
ff0844 a2 00                               ldx #$0
ff0846                 FORff0844_loop:
ff0846 bd 00 02                            lda $0200,X           ; TXTBUFFER
ff0849                                 ;; IF == 0 {
ff0849 c9 00                               cmp #$0
ff084b d0 07                               bne +7                ; IFff0849_end [ff0854]
ff084d 8c fe 03                            sty $03fe             ; TXTPOS
ff0850                                 ;; BREAK
ff0850 4f 80 0a 00                         bra.a24 +10           ; forff0844_end [ff085e]
ff0854                 IFff0849_end:
ff0854 09 80                               ora #$80
ff0856 91 fe                               sta ($fe),Y           ; TXTPTR
ff0858 c8                                  iny
ff0859 e8                                  inx
ff085a e0 28                               cpx #$28
ff085c d0 e8                               bne -24               ; FORff0844_loop [ff0846]
ff085e                 FORff0844_end:
ff085e a9 a0                               lda #$a0
ff0860                 LOOPff0860_start:
ff0860                                 ;; LOOP {
ff0860                 LOOPff0860_loop:
ff0860 c0 28                               cpy #$28
ff0862                                 ;; IF == {
ff0862 d0 04                               bne +4                ; IFff0862_end [ff0868]
ff0864                                 ;; BREAK
ff0864 4f 80 05 00                         bra.a24 +5            ; loopff0860_end [ff086d]
ff0868                 IFff0862_end:
ff0868 91 fe                               sta ($fe),Y           ; TXTPTR
ff086a c8                                  iny
ff086b 80 f3                               bra -13               ; LOOPff0860_loop [ff0860]
ff086d                 LOOPff0860_end:
ff086d 4f 60                               rts.a24

ff086f ; SUB GetChar:
ff086f                 LOOPff086f_start:
ff086f                                 ;; LOOP {
ff086f                 LOOPff086f_loop:
ff086f 2c 00 c0                            bit $c000             ; KBD
ff0872                                 ;; IF - {
ff0872 10 04                               bpl +4                ; IFff0872_end [ff0878]
ff0874                                 ;; BREAK
ff0874 4f 80 02 00                         bra.a24 +2            ; loopff086f_end [ff087a]
ff0878                 IFff0872_end:
ff0878 80 f5                               bra -11               ; LOOPff086f_loop [ff086f]
ff087a                 LOOPff086f_end:
ff087a ad 00 c0                            lda $c000             ; KBD
ff087d 2c 10 c0                            bit $c010             ; KBDSTRB
ff0880 4f 60                               rts.a24

ff0882 ; SUB AppleII4:
ff0882                 FORff0882_start:
ff0882                                 ;; FOR X = 0 TO 39 {
ff0882 a2 00                               ldx #$0
ff0884                 FORff0882_loop:
ff0884 4f bd 30 80 ff                      lda.a24 $ff8030,X     ; Hello
ff0889 f0 0a                               beq +10               ; forff0882_end [ff0895]
ff088b 09 80                               ora #$80
ff088d 9d 00 04                            sta $0400,X
ff0890 e8                                  inx
ff0891 e0 28                               cpx #$28
ff0893 d0 ef                               bne -17               ; FORff0882_loop [ff0884]
ff0895                 FORff0882_end:
ff0895 4f 60                               rts.a24

ff0897 ; SUB Disk4Name:
ff0897 a9 00                               lda #$0               ; DISK4_VOLUME_NAME
ff0899 8d f0 c0                            sta $c0f0             ; DISK4_CMD
ff089c ad ff c0                            lda $c0ff             ; DISK4_GO
ff089f 85 00                               sta $00
ff08a1 ad 00 c7                            lda $c700             ; SLOT_7_ROM
ff08a4 1f a2 00 c8                         ldx.w #$c800          ; PR_RAM
ff08a8 4f 60                               rts.a24

ff08aa ; SUB Disk4CatalogStart:
ff08aa a9 01                               lda #$1               ; DISK4_CATALOG
ff08ac 8d f0 c0                            sta $c0f0             ; DISK4_CMD
ff08af ad ff c0                            lda $c0ff             ; DISK4_GO
ff08b2 4f 60                               rts.a24

ff08b4 ; SUB Disk4CatalogNext:
ff08b4 a9 02                               lda #$2               ; DISK4_CATALOG_NEXT
ff08b6 8d f0 c0                            sta $c0f0             ; DISK4_CMD
ff08b9 ad ff c0                            lda $c0ff             ; DISK4_GO
ff08bc 85 00                               sta $00
ff08be ad 00 c7                            lda $c700             ; SLOT_7_ROM
ff08c1 1f a2 06 c8                         ldx.w #$c806          ; PR_RAM
ff08c5 a5 00                               lda $00
ff08c7 4f 60                               rts.a24

ff08c9 ; SUB Disk4Open:
00d600          ; VAR @FILENAME
ff08c9 ad 00 c7                            lda $c700             ; SLOT_7_ROM
ff08cc 2f ae 00 d6                         ldx.t $00d600
ff08d0                 FORff08d0_start:
ff08d0                                 ;; FOR Y = 0 TO 16 {
ff08d0 a0 00                               ldy #$0
ff08d2                 FORff08d0_loop:
ff08d2 4f ab                               lda.a24 XY
ff08d4 99 00 c8                            sta $c800,Y           ; PR_RAM
ff08d7                                 ;; IF == {
ff08d7 d0 04                               bne +4                ; IFff08d7_end [ff08dd]
ff08d9                                 ;; BREAK
ff08d9 4f 80 05 00                         bra.a24 +5            ; forff08d0_end [ff08e2]
ff08dd                 IFff08d7_end:
ff08dd c8                                  iny
ff08de c0 11                               cpy #$11
ff08e0 d0 f0                               bne -16               ; FORff08d0_loop [ff08d2]
ff08e2                 FORff08d0_end:
ff08e2 a9 05                               lda #$5               ; DISK4_OPEN
ff08e4 8d f0 c0                            sta $c0f0             ; DISK4_CMD
ff08e7 ad ff c0                            lda $c0ff             ; DISK4_GO
ff08ea 85 00                               sta $00
ff08ec ae f7 c0                            ldx $c0f7             ; DISK4_RET0
ff08ef a5 00                               lda $00
ff08f1 4f 60                               rts.a24

ff08f3 ; SUB Disk4Close:
ff08f3 8d f1 c0                            sta $c0f1             ; DISK4_ARG0
ff08f6 a9 0a                               lda #$a               ; DISK4_CLOSE
ff08f8 8d f0 c0                            sta $c0f0             ; DISK4_CMD
ff08fb ad ff c0                            lda $c0ff             ; DISK4_GO
ff08fe 4f 60                               rts.a24

ff0900 ; SUB Disk4Read:
ff0900 a9 06                               lda #$6               ; DISK4_READ
ff0902 8d f0 c0                            sta $c0f0             ; DISK4_CMD
ff0905 ad ff c0                            lda $c0ff             ; DISK4_GO
ff0908                                 ;; IF != {
ff0908 f0 02                               beq +2                ; IFff0908_end [ff090c]
ff090a 4f 60                               rts.a24
ff090c                 IFff0908_end:
ff090c ad 00 c7                            lda $c700             ; SLOT_7_ROM
ff090f 4f 60                               rts.a24

ff0911 ; SUB Disk4PrintError:
ff0911                                 ;; IF == 3 {
ff0911 c9 03                               cmp #$3
ff0913 d0 07                               bne +7                ; IFff0911_else [ff091c]
ff0915 2f a9 06 81 ff                      lda.t #$ff8106        ; Disk4ErrorNotFoundStr
ff091a 80 05                               bra +5                ; IFff0911_end [ff0921]
ff091c                 IFff0911_else:
ff091c                                 ;; ELSE
ff091c 2f a9 f6 80 ff                      lda.t #$ff80f6        ; Disk4ErrorStr
ff0921                 IFff0911_end:
ff0921 2f 8d 00 d7                         sta.t $00d700
ff0925 4f 20 90 06 ff                      jsr.a24 $ff0690       ; PrintError
ff092a 4f 60                               rts.a24

ff092c ; SUB DoHelp:
00d000          ; VAR @ARGN
000004          ; VAR @I
000005          ; VAR @I6
000006          ; VAR @COL
ff092c 4f 20 a4 07 ff                      jsr.a24 $ff07a4       ; NextLine
ff0931 2f a9 3a 80 ff                      lda.t #$ff803a        ; CommandListStr
ff0936 2f 8d 00 d7                         sta.t $00d700
ff093a 4f 20 65 06 ff                      jsr.a24 $ff0665       ; PrintString
ff093f 4f 20 a4 07 ff                      jsr.a24 $ff07a4       ; NextLine
ff0944                       ;; M@$4 = 1 
ff0944 2f 85 00                            sta.t $00
ff0947 a9 01                               lda #$1
ff0949 85 04                               sta $04
ff094b 2f a5 00                            lda.t $00
ff094e                       ;; M@$6 = 0 
ff094e 2f 85 00                            sta.t $00
ff0951 a9 00                               lda #$0
ff0953 85 06                               sta $06
ff0955 2f a5 00                            lda.t $00
ff0958                 DOff0958_start:
ff0958                                 ;; DO {
ff0958                 DOff0958_loop:
ff0958 4f 20 b7 06 ff                      jsr.a24 $ff06b7       ; PrintSpace
ff095d a5 04                               lda $04               ; I
ff095f                       ;; A <<= 2 
ff095f 0a                                  asl
ff0960 0a                                  asl
ff0961 85 05                               sta $05               ; I6
ff0963 a5 04                               lda $04               ; I
ff0965                       ;; A <<= 1 
ff0965 0a                                  asl
ff0966 18                                  clc
ff0967 65 05                               adc $05               ; I6
ff0969 85 05                               sta $05               ; I6
ff096b aa                                  tax
ff096c 6f bd 85 81 ff                      lda.t.a24 $ff8185,X   ; CommandList
ff0971 2f 8d 00 d7                         sta.t $00d700
ff0975 4f 20 65 06 ff                      jsr.a24 $ff0665       ; PrintString
ff097a a5 06                               lda $06               ; COL
ff097c                                 ;; IF == {
ff097c d0 13                               bne +19               ; IFff097c_else [ff0991]
ff097e                       ;; M@$6 = 1 
ff097e 85 00                               sta $00
ff0980 a9 01                               lda #$1
ff0982 85 06                               sta $06
ff0984 a5 00                               lda $00
ff0986                       ;; M@$3fe = 12 
ff0986 85 00                               sta $00
ff0988 a9 0c                               lda #$c
ff098a 8d fe 03                            sta $03fe
ff098d a5 00                               lda $00
ff098f 80 26                               bra +38               ; IFff097c_end [ff09b7]
ff0991                 IFff097c_else:
ff0991                                 ;; ELSE
ff0991                                 ;; IF == 1 {
ff0991 c9 01                               cmp #$1
ff0993 d0 11                               bne +17               ; IFff0991_end [ff09a6]
ff0995                       ;; M@$6 = 2 
ff0995 85 00                               sta $00
ff0997 a9 02                               lda #$2
ff0999 85 06                               sta $06
ff099b a5 00                               lda $00
ff099d                       ;; M@$3fe = 24 
ff099d 85 00                               sta $00
ff099f a9 18                               lda #$18
ff09a1 8d fe 03                            sta $03fe
ff09a4 a5 00                               lda $00
ff09a6                 IFff0991_end:
ff09a6                                 ;; IF == 2 {
ff09a6 c9 02                               cmp #$2
ff09a8 d0 0d                               bne +13               ; IFff09a6_end [ff09b7]
ff09aa                       ;; M@$6 = 0 
ff09aa 85 00                               sta $00
ff09ac a9 00                               lda #$0
ff09ae 85 06                               sta $06
ff09b0 a5 00                               lda $00
ff09b2 4f 20 a4 07 ff                      jsr.a24 $ff07a4       ; NextLine
ff09b7                 IFff09a6_end:
ff09b7                 IFff097c_end:
ff09b7 e6 04                               inc $04               ; I
ff09b9 a5 04                               lda $04               ; I
ff09bb                                 ;; WHILE < 14
ff09bb c9 0e                               cmp #$e
ff09bd b0 02                               bcs +2                ; DOff0958_end [ff09c1]
ff09bf 80 97                               bra -105              ; DOff0958_loop [ff0958]
ff09c1                 DOff0958_end:
ff09c1 4f 20 a4 07 ff                      jsr.a24 $ff07a4       ; NextLine
ff09c6 4f 20 a4 07 ff                      jsr.a24 $ff07a4       ; NextLine
ff09cb 4f 60                               rts.a24

ff09cd ; SUB DoAscii:
00d000          ; VAR @ARGN
000004          ; VAR @I
000005          ; VAR @J
000003          ; VAR @C
ff09cd 4f 20 a4 07 ff                      jsr.a24 $ff07a4       ; NextLine
ff09d2 2f a9 44 80 ff                      lda.t #$ff8044        ; ASCIIHeaderStr
ff09d7 2f 8d 00 d7                         sta.t $00d700
ff09db 4f 20 65 06 ff                      jsr.a24 $ff0665       ; PrintString
ff09e0 4f 20 a4 07 ff                      jsr.a24 $ff07a4       ; NextLine
ff09e5 2f a9 57 80 ff                      lda.t #$ff8057        ; ASCIIDashesStr
ff09ea 2f 8d 00 d7                         sta.t $00d700
ff09ee 4f 20 65 06 ff                      jsr.a24 $ff0665       ; PrintString
ff09f3 4f 20 a4 07 ff                      jsr.a24 $ff07a4       ; NextLine
ff09f8                 FORff09f8_start:
ff09f8                                 ;; FOR @I = 0 TO 15 {
ff09f8 a2 00                               ldx #$0
ff09fa 86 04                               stx $04
ff09fc                 FORff09f8_loop:
ff09fc a5 04                               lda $04               ; I
ff09fe 4f 20 65 05 ff                      jsr.a24 $ff0565       ; PrintHexDigit
ff0a03 a9 ad                               lda #$ad
ff0a05 4f 20 a6 06 ff                      jsr.a24 $ff06a6       ; PrintChar
ff0a0a                 FORff0a0a_start:
ff0a0a                                 ;; FOR @J = 0 TO 15 {
ff0a0a a2 00                               ldx #$0
ff0a0c 86 05                               stx $05
ff0a0e                 FORff0a0a_loop:
ff0a0e a5 03                               lda $03               ; C
ff0a10 4f 20 a6 06 ff                      jsr.a24 $ff06a6       ; PrintChar
ff0a15 e6 03                               inc $03               ; C
ff0a17 e6 05                               inc $05
ff0a19 a6 05                               ldx $05
ff0a1b e0 10                               cpx #$10
ff0a1d d0 ef                               bne -17               ; FORff0a0a_loop [ff0a0e]
ff0a1f                 FORff0a0a_end:
ff0a1f 4f 20 a4 07 ff                      jsr.a24 $ff07a4       ; NextLine
ff0a24 e6 04                               inc $04
ff0a26 a6 04                               ldx $04
ff0a28 e0 10                               cpx #$10
ff0a2a d0 d0                               bne -48               ; FORff09f8_loop [ff09fc]
ff0a2c                 FORff09f8_end:
ff0a2c 2f a9 57 80 ff                      lda.t #$ff8057        ; ASCIIDashesStr
ff0a31 2f 8d 00 d7                         sta.t $00d700
ff0a35 4f 20 65 06 ff                      jsr.a24 $ff0665       ; PrintString
ff0a3a 4f 20 a4 07 ff                      jsr.a24 $ff07a4       ; NextLine
ff0a3f 4f 60                               rts.a24

ff0a41 ; SUB DoCatalog:
00d000          ; VAR @ARGN
ff0a41 4f 20 a4 07 ff                      jsr.a24 $ff07a4       ; NextLine
ff0a46 2f a9 6a 80 ff                      lda.t #$ff806a        ; CatalogHeaderStr
ff0a4b 2f 8d 00 d7                         sta.t $00d700
ff0a4f 4f 20 65 06 ff                      jsr.a24 $ff0665       ; PrintString
ff0a54 4f 20 97 08 ff                      jsr.a24 $ff0897       ; Disk4Name
ff0a59 2f 8e 00 d7                         stx.t $00d700
ff0a5d 4f 20 65 06 ff                      jsr.a24 $ff0665       ; PrintString
ff0a62 4f 20 a4 07 ff                      jsr.a24 $ff07a4       ; NextLine
ff0a67 4f 20 aa 08 ff                      jsr.a24 $ff08aa       ; Disk4CatalogStart
ff0a6c                                 ;; IF != {
ff0a6c f0 07                               beq +7                ; IFff0a6c_end [ff0a75]
ff0a6e 4f 20 11 09 ff                      jsr.a24 $ff0911       ; Disk4PrintError
ff0a73 4f 60                               rts.a24
ff0a75                 IFff0a6c_end:
ff0a75 4f 20 a4 07 ff                      jsr.a24 $ff07a4       ; NextLine
ff0a7a                 LOOPff0a7a_start:
ff0a7a                                 ;; LOOP {
ff0a7a                 LOOPff0a7a_loop:
ff0a7a 4f 20 b4 08 ff                      jsr.a24 $ff08b4       ; Disk4CatalogNext
ff0a7f                                 ;; IF != {
ff0a7f f0 04                               beq +4                ; IFff0a7f_end [ff0a85]
ff0a81                                 ;; BREAK
ff0a81 4f 80 4f 00                         bra.a24 +79           ; loopff0a7a_end [ff0ad4]
ff0a85                 IFff0a7f_end:
ff0a85 2f 8e 00 d7                         stx.t $00d700
ff0a89 a9 02                               lda #$2
ff0a8b 8d fe 03                            sta $03fe             ; TXTPOS
ff0a8e ad 00 c8                            lda $c800             ; DISK4_RAM
ff0a91 4f 20 a6 06 ff                      jsr.a24 $ff06a6       ; PrintChar
ff0a96 ad 01 c8                            lda $c801             ; DISK4_RAM
ff0a99 4f 20 a6 06 ff                      jsr.a24 $ff06a6       ; PrintChar
ff0a9e ad 02 c8                            lda $c802             ; DISK4_RAM
ff0aa1 4f 20 a6 06 ff                      jsr.a24 $ff06a6       ; PrintChar
ff0aa6 a9 06                               lda #$6
ff0aa8 8d fe 03                            sta $03fe             ; TXTPOS
ff0aab ad 03 c8                            lda $c803             ; DISK4_RAM
ff0aae 4f 20 a6 06 ff                      jsr.a24 $ff06a6       ; PrintChar
ff0ab3 ad 04 c8                            lda $c804             ; DISK4_RAM
ff0ab6 4f 20 a6 06 ff                      jsr.a24 $ff06a6       ; PrintChar
ff0abb ad 05 c8                            lda $c805             ; DISK4_RAM
ff0abe 4f 20 a6 06 ff                      jsr.a24 $ff06a6       ; PrintChar
ff0ac3 a9 0a                               lda #$a
ff0ac5 8d fe 03                            sta $03fe             ; TXTPOS
ff0ac8 4f 20 65 06 ff                      jsr.a24 $ff0665       ; PrintString
ff0acd 4f 20 a4 07 ff                      jsr.a24 $ff07a4       ; NextLine
ff0ad2 80 a6                               bra -90               ; LOOPff0a7a_loop [ff0a7a]
ff0ad4                 LOOPff0a7a_end:
ff0ad4 4f 20 a4 07 ff                      jsr.a24 $ff07a4       ; NextLine
ff0ad9 4f 60                               rts.a24

ff0adb ; SUB DoClear:
00d000          ; VAR @ARGN
ff0adb ad fd 03                            lda $03fd             ; DISPMODE
ff0ade                                 ;; IF == {
ff0ade d0 13                               bne +19               ; IFff0ade_end [ff0af3]
ff0ae0 a2 02                               ldx #$2
ff0ae2 4f 20 79 07 ff                      jsr.a24 $ff0779       ; ClearScreen
ff0ae7 a9 02                               lda #$2
ff0ae9 8d ff 03                            sta $03ff             ; TXTROW
ff0aec a9 00                               lda #$0
ff0aee 8d fe 03                            sta $03fe             ; TXTPOS
ff0af1 4f 60                               rts.a24
ff0af3                 IFff0ade_end:
ff0af3                                 ;; IF == 1 {
ff0af3 c9 01                               cmp #$1
ff0af5 d0 07                               bne +7                ; IFff0af3_end [ff0afe]
ff0af7 a2 00                               ldx #$0
ff0af9 4f 20 79 07 ff                      jsr.a24 $ff0779       ; ClearScreen
ff0afe                 IFff0af3_end:
ff0afe 4f 60                               rts.a24

ff0b00 ; SUB DoEcho:
00d000          ; VAR @ARGN
000200          ; VAR @INPUT
ff0b00 1f a9 00 02                         lda.w #$200           ; INPUT
ff0b04 2f 8d 00 d7                         sta.t $00d700
ff0b08 4f 20 65 06 ff                      jsr.a24 $ff0665       ; PrintString
ff0b0d 4f 20 a4 07 ff                      jsr.a24 $ff07a4       ; NextLine
ff0b12 4f 60                               rts.a24

ff0b14 ; SUB DoLoad:
00d000          ; VAR @ARGN
00d001          ; VAR @CMD
00d004          ; VAR @FILENAME
00d007          ; VAR @ADDRESS
000009          ; VAR @FN
000003-000005   ; VAR @R_IDX
000006-000007   ; VAR @ACTUAL
000008-000009   ; VAR @C_IDX
ff0b14 4f 20 a4 07 ff                      jsr.a24 $ff07a4       ; NextLine
ff0b19 ad 00 d0                            lda $d000             ; ARGN
ff0b1c                                 ;; IF < 1 {
ff0b1c c9 01                               cmp #$1
ff0b1e b0 10                               bcs +16               ; IFff0b1c_end [ff0b30]
ff0b20 2f a9 77 80 ff                      lda.t #$ff8077        ; NoFilenameErrStr
ff0b25 2f 8d 00 d7                         sta.t $00d700
ff0b29 4f 20 90 06 ff                      jsr.a24 $ff0690       ; PrintError
ff0b2e 4f 60                               rts.a24
ff0b30                 IFff0b1c_end:
ff0b30 ad 00 d0                            lda $d000             ; ARGN
ff0b33                                 ;; IF < 2 {
ff0b33 c9 02                               cmp #$2
ff0b35 b0 10                               bcs +16               ; IFff0b33_end [ff0b47]
ff0b37 2f a9 96 80 ff                      lda.t #$ff8096        ; NoAddressErrStr
ff0b3c 2f 8d 00 d7                         sta.t $00d700
ff0b40 4f 20 90 06 ff                      jsr.a24 $ff0690       ; PrintError
ff0b45 4f 60                               rts.a24
ff0b47                 IFff0b33_end:
ff0b47 2f ad 07 d0                         lda.t $00d007         ; ADDRESS
ff0b4b 2f 8d 00 d7                         sta.t $00d700
ff0b4f 4f 20 7d 05 ff                      jsr.a24 $ff057d       ; ParseNumber
ff0b54 2f 8d 07 d0                         sta.t $00d007         ; ADDRESS
ff0b58 2f ad 04 d0                         lda.t $00d004         ; FILENAME
ff0b5c                                 ;; IF == {
ff0b5c d0 0d                               bne +13               ; IFff0b5c_end [ff0b6b]
ff0b5e 2f a9                               lda.t #$ff8077        ; NoFilenameErrStr
ff0b60 2f 8d 00 d7                         sta.t $00d700
ff0b64 4f 20 90 06 ff                      jsr.a24 $ff0690       ; PrintError
ff0b69 4f 60                               rts.a24
ff0b6b                 IFff0b5c_end:
ff0b6b 2f 8d 00 d6                         sta.t $00d600
ff0b6f 4f 20 c9 08 ff                      jsr.a24 $ff08c9       ; Disk4Open
ff0b74                                 ;; IF != {
ff0b74 f0 07                               beq +7                ; IFff0b74_end [ff0b7d]
ff0b76 4f 20 11 09 ff                      jsr.a24 $ff0911       ; Disk4PrintError
ff0b7b 4f 60                               rts.a24
ff0b7d                 IFff0b74_end:
ff0b7d 86 09                               stx $09               ; FN
ff0b7f 2f 64 03                            stz.t $03             ; R_IDX
ff0b82                 LOOPff0b82_start:
ff0b82                                 ;; LOOP {
ff0b82                 LOOPff0b82_loop:
ff0b82 4f 20 00 09 ff                      jsr.a24 $ff0900       ; Disk4Read
ff0b87                                 ;; IF == 2 {
ff0b87 c9 02                               cmp #$2
ff0b89 d0 04                               bne +4                ; IFff0b87_end [ff0b8f]
ff0b8b                                 ;; BREAK
ff0b8b 4f 80 38 00                         bra.a24 +56           ; loopff0b82_end [ff0bc7]
ff0b8f                 IFff0b87_end:
ff0b8f 2f ad f7 c0                         lda.t $00c0f7         ; DISK4_RET0
ff0b93                                 ;; IF == {
ff0b93 d0 04                               bne +4                ; IFff0b93_end [ff0b99]
ff0b95                                 ;; BREAK
ff0b95 4f 80 2e 00                         bra.a24 +46           ; loopff0b82_end [ff0bc7]
ff0b99                 IFff0b93_end:
ff0b99 2f 85 06                            sta.t $06             ; ACTUAL
ff0b9c 1f 64 08                            stz.w $08             ; C_IDX
ff0b9f                 LOOPff0b9f_start:
ff0b9f                                 ;; LOOP {
ff0b9f                 LOOPff0b9f_loop:
ff0b9f 1f a2 00 c8                         ldx.w #$c800          ; DISK4_RAM
ff0ba3 1f a4 08                            ldy.w $08             ; C_IDX
ff0ba6 4f ab                               lda.a24 XY
ff0ba8 2f e6 08                            inc.t $08             ; C_IDX
ff0bab 2f ae 07 d0                         ldx.t $00d007         ; ADDRESS
ff0baf 2f a4 03                            ldy.t $03             ; R_IDX
ff0bb2 4f bb                               sta.a24 XY
ff0bb4 2f e6 03                            inc.t $03             ; R_IDX
ff0bb7 1f a4 08                            ldy.w $08             ; C_IDX
ff0bba 1f c4 06                            cpy.w $06             ; ACTUAL
ff0bbd                                 ;; IF == {
ff0bbd d0 04                               bne +4                ; IFff0bbd_end [ff0bc3]
ff0bbf                                 ;; BREAK
ff0bbf 4f 80 02 00                         bra.a24 +2            ; loopff0b9f_end [ff0bc5]
ff0bc3                 IFff0bbd_end:
ff0bc3 80 da                               bra -38               ; LOOPff0b9f_loop [ff0b9f]
ff0bc5                 LOOPff0b9f_end:
ff0bc5 80 bb                               bra -69               ; LOOPff0b82_loop [ff0b82]
ff0bc7                 LOOPff0b82_end:
ff0bc7 a5 09                               lda $09               ; FN
ff0bc9 4f 20 f3 08 ff                      jsr.a24 $ff08f3       ; Disk4Close
ff0bce 2f a9 d0 80 ff                      lda.t #$ff80d0        ; LoadedStr
ff0bd3 2f 8d 00 d7                         sta.t $00d700
ff0bd7 4f 20 65 06 ff                      jsr.a24 $ff0665       ; PrintString
ff0bdc 2f a5 06                            lda.t $06             ; ACTUAL
ff0bdf 4f 20 14 05 ff                      jsr.a24 $ff0514       ; PrintHex24
ff0be4 2f a9 d8 80 ff                      lda.t #$ff80d8        ; LoadedBytesToStr
ff0be9 2f 8d 00 d7                         sta.t $00d700
ff0bed 4f 20 65 06 ff                      jsr.a24 $ff0665       ; PrintString
ff0bf2 2f ad 07 d0                         lda.t $00d007         ; ADDRESS
ff0bf6 4f 20 14 05 ff                      jsr.a24 $ff0514       ; PrintHex24
ff0bfb 4f 20 a4 07 ff                      jsr.a24 $ff07a4       ; NextLine
ff0c00 4f 20 a4 07 ff                      jsr.a24 $ff07a4       ; NextLine
ff0c05 4f 60                               rts.a24

ff0c07 ; SUB DoView:
00d000          ; VAR @ARGN
00d001          ; VAR @CMD
00d004          ; VAR @FILENAME
00000b          ; VAR @FN
000003-000005   ; VAR @R_IDX
000006-000008   ; VAR @ACTUAL
000009          ; VAR @LINENUM
ff0c07 4f 20 a4 07 ff                      jsr.a24 $ff07a4       ; NextLine
ff0c0c ad 00 d0                            lda $d000             ; ARGN
ff0c0f                                 ;; IF < 1 {
ff0c0f c9 01                               cmp #$1
ff0c11 b0 10                               bcs +16               ; IFff0c0f_end [ff0c23]
ff0c13 2f a9 77 80 ff                      lda.t #$ff8077        ; NoFilenameErrStr
ff0c18 2f 8d 00 d7                         sta.t $00d700
ff0c1c 4f 20 90 06 ff                      jsr.a24 $ff0690       ; PrintError
ff0c21 4f 60                               rts.a24
ff0c23                 IFff0c0f_end:
ff0c23 2f ad 04 d0                         lda.t $00d004         ; FILENAME
ff0c27 2f 8d 00 d6                         sta.t $00d600
ff0c2b 4f 20 c9 08 ff                      jsr.a24 $ff08c9       ; Disk4Open
ff0c30                                 ;; IF != {
ff0c30 f0 07                               beq +7                ; IFff0c30_end [ff0c39]
ff0c32 4f 20 11 09 ff                      jsr.a24 $ff0911       ; Disk4PrintError
ff0c37 4f 60                               rts.a24
ff0c39                 IFff0c30_end:
ff0c39 86 0b                               stx $0b               ; FN
ff0c3b 64 09                               stz $09               ; LINENUM
ff0c3d                 LOOPff0c3d_start:
ff0c3d                                 ;; LOOP {
ff0c3d                 LOOPff0c3d_loop:
ff0c3d 4f 20 00 09 ff                      jsr.a24 $ff0900       ; Disk4Read
ff0c42                                 ;; IF == 2 {
ff0c42 c9 02                               cmp #$2
ff0c44 d0 04                               bne +4                ; IFff0c42_end [ff0c4a]
ff0c46                                 ;; BREAK
ff0c46 4f 80 58 00                         bra.a24 +88           ; loopff0c3d_end [ff0ca2]
ff0c4a                 IFff0c42_end:
ff0c4a 2f ad f7 c0                         lda.t $00c0f7         ; DISK4_RET0
ff0c4e                                 ;; IF == {
ff0c4e d0 04                               bne +4                ; IFff0c4e_end [ff0c54]
ff0c50                                 ;; BREAK
ff0c50 4f 80 4e 00                         bra.a24 +78           ; loopff0c3d_end [ff0ca2]
ff0c54                 IFff0c4e_end:
ff0c54 2f 85 06                            sta.t $06             ; ACTUAL
ff0c57 2f 64 03                            stz.t $03             ; R_IDX
ff0c5a                 LOOPff0c5a_start:
ff0c5a                                 ;; LOOP {
ff0c5a                 LOOPff0c5a_loop:
ff0c5a 1f a2 00 c8                         ldx.w #$c800          ; DISK4_RAM
ff0c5e 1f a4 03                            ldy.w $03             ; R_IDX
ff0c61 4f ab                               lda.a24 XY
ff0c63                                 ;; IF == 10 {
ff0c63 c9 0a                               cmp #$a
ff0c65 d0 0b                               bne +11               ; IFff0c63_end [ff0c72]
ff0c67 4f 20 bb 0c ff                      jsr.a24 $ff0cbb       ; View_Paginate
ff0c6c                                 ;; IF != {
ff0c6c f0 04                               beq +4                ; IFff0c6c_end [ff0c72]
ff0c6e                                 ;; BREAK
ff0c6e 4f 80 2e 00                         bra.a24 +46           ; loopff0c5a_end [ff0ca0]
ff0c72                 IFff0c6c_end:
ff0c72                 IFff0c63_end:
ff0c72                                 ;; IF >= 32 {
ff0c72 c9 20                               cmp #$20
ff0c74 90 19                               bcc +25               ; IFff0c72_end [ff0c8f]
ff0c76 ac fe 03                            ldy $03fe             ; TXTPOS
ff0c79 c0 28                               cpy #$28
ff0c7b                                 ;; IF >= {
ff0c7b 90 0b                               bcc +11               ; IFff0c7b_end [ff0c88]
ff0c7d 4f 20 bb 0c ff                      jsr.a24 $ff0cbb       ; View_Paginate
ff0c82                                 ;; IF != {
ff0c82 f0 02                               beq +2                ; IFff0c82_end [ff0c86]
ff0c84 80 1c                               bra +28               ; done [ff0ca2]
ff0c86                 IFff0c82_end:
ff0c86                                 ;; CONTINUE
ff0c86 80 d2                               bra -46               ; loopff0c5a_start [ff0c5a]
ff0c88                 IFff0c7b_end:
ff0c88 09 80                               ora #$80
ff0c8a 91 fe                               sta ($fe),Y           ; TXTPTR
ff0c8c ee fe 03                            inc $03fe             ; TXTPOS
ff0c8f                 IFff0c72_end:
ff0c8f 2f e6 03                            inc.t $03             ; R_IDX
ff0c92 2f a5 03                            lda.t $03             ; R_IDX
ff0c95 2f c5 06                            cmp.t $06             ; ACTUAL
ff0c98                                 ;; IF == {
ff0c98 d0 04                               bne +4                ; IFff0c98_end [ff0c9e]
ff0c9a                                 ;; BREAK
ff0c9a 4f 80 02 00                         bra.a24 +2            ; loopff0c5a_end [ff0ca0]
ff0c9e                 IFff0c98_end:
ff0c9e 80 ba                               bra -70               ; LOOPff0c5a_loop [ff0c5a]
ff0ca0                 LOOPff0c5a_end:
ff0ca0 80 9b                               bra -101              ; LOOPff0c3d_loop [ff0c3d]
ff0ca2                 LOOPff0c3d_end:
ff0ca2                 done:
ff0ca2 a5 0b                               lda $0b               ; FN
ff0ca4 4f 20 f3 08 ff                      jsr.a24 $ff08f3       ; Disk4Close
ff0ca9 a5 09                               lda $09               ; LINENUM
ff0cab                                 ;; IF == 21 {
ff0cab c9 15                               cmp #$15
ff0cad d0 05                               bne +5                ; IFff0cab_end [ff0cb4]
ff0caf 4f 20 6f 08 ff                      jsr.a24 $ff086f       ; GetChar
ff0cb4                 IFff0cab_end:
ff0cb4 4f 20 a4 07 ff                      jsr.a24 $ff07a4       ; NextLine
ff0cb9 4f 60                               rts.a24

ff0cbb ; SUB View_Paginate:
000009          ; VAR @LINENUM
00000a          ; VAR @STOP
ff0cbb e6 09                               inc $09               ; LINENUM
ff0cbd a5 09                               lda $09               ; LINENUM
ff0cbf                                 ;; IF == 22 {
ff0cbf c9 16                               cmp #$16
ff0cc1 d0 17                               bne +23               ; IFff0cbf_end [ff0cda]
ff0cc3 4f 20 6f 08 ff                      jsr.a24 $ff086f       ; GetChar
ff0cc8                                 ;; IF == 131 {
ff0cc8 c9 83                               cmp #$83
ff0cca d0 04                               bne +4                ; IFff0cc8_end [ff0cd0]
ff0ccc a9 01                               lda #$1
ff0cce 4f 60                               rts.a24
ff0cd0                 IFff0cc8_end:
ff0cd0                                 ;; IF == 155 {
ff0cd0 c9 9b                               cmp #$9b
ff0cd2 d0 04                               bne +4                ; IFff0cd0_end [ff0cd8]
ff0cd4 a9 01                               lda #$1
ff0cd6 4f 60                               rts.a24
ff0cd8                 IFff0cd0_end:
ff0cd8 64 09                               stz $09               ; LINENUM
ff0cda                 IFff0cbf_end:
ff0cda 4f 20 a4 07 ff                      jsr.a24 $ff07a4       ; NextLine
ff0cdf 9c fe 03                            stz $03fe             ; TXTPOS
ff0ce2 ac fe 03                            ldy $03fe             ; TXTPOS
ff0ce5 a9 00                               lda #$0
ff0ce7 4f 60                               rts.a24

ff0ce9 ; SUB DoPeek:
00d000          ; VAR @ARGN
00d001          ; VAR @CMD
00d004          ; VAR @START_ADDR
00d007          ; VAR @END_ADDR
000009          ; VAR @LINENUM
00000a          ; VAR @STOP
00000b-00000d   ; VAR @CUR_ADDR
ff0ce9 ad 00 d0                            lda $d000             ; ARGN
ff0cec                                 ;; IF < 1 {
ff0cec c9 01                               cmp #$1
ff0cee b0 10                               bcs +16               ; IFff0cec_end [ff0d00]
ff0cf0 2f a9 96 80 ff                      lda.t #$ff8096        ; NoAddressErrStr
ff0cf5 2f 8d 00 d7                         sta.t $00d700
ff0cf9 4f 20 90 06 ff                      jsr.a24 $ff0690       ; PrintError
ff0cfe 4f 60                               rts.a24
ff0d00                 IFff0cec_end:
ff0d00 2f ad 04 d0                         lda.t $00d004         ; START_ADDR
ff0d04 2f 8d 00 d7                         sta.t $00d700
ff0d08 4f 20 7d 05 ff                      jsr.a24 $ff057d       ; ParseNumber
ff0d0d 2f 29 f0 ff ff                      and.t #$fffff0
ff0d12 2f 8d 04 d0                         sta.t $00d004         ; START_ADDR
ff0d16 ad 00 d0                            lda $d000             ; ARGN
ff0d19                                 ;; IF >= 2 {
ff0d19 c9 02                               cmp #$2
ff0d1b 90 34                               bcc +52               ; IFff0d19_else [ff0d51]
ff0d1d 2f ae 07 d0                         ldx.t $00d007         ; END_ADDR
ff0d21 7b                                  lda X
ff0d22 c9 2b                               cmp #$2b
ff0d24                                 ;; IF == {
ff0d24 d0 1c                               bne +28               ; IFff0d24_else [ff0d42]
ff0d26 2f ad 07 d0                         lda.t $00d007         ; END_ADDR
ff0d2a 1a                                  inc
ff0d2b 2f 8d 00 d7                         sta.t $00d700
ff0d2f 4f 20 7d 05 ff                      jsr.a24 $ff057d       ; ParseNumber
ff0d34 2f aa                               tax.t
ff0d36 2f ad 04 d0                         lda.t $00d004         ; START_ADDR
ff0d3a 2f db                               adx.t
ff0d3c 2f 8d 07 d0                         sta.t $00d007         ; END_ADDR
ff0d40 80 0d                               bra +13               ; IFff0d24_end [ff0d4f]
ff0d42                 IFff0d24_else:
ff0d42                                 ;; ELSE
ff0d42 2f 8d 00 d7                         sta.t $00d700
ff0d46 4f 20 7d 05 ff                      jsr.a24 $ff057d       ; ParseNumber
ff0d4b 2f 8d 07 d0                         sta.t $00d007         ; END_ADDR
ff0d4f                 IFff0d24_end:
ff0d4f 80 0e                               bra +14               ; IFff0d19_end [ff0d5f]
ff0d51                 IFff0d19_else:
ff0d51                                 ;; ELSE
ff0d51 2f ad 04 d0                         lda.t $00d004         ; START_ADDR
ff0d55 18                                  clc
ff0d56 2f 69 40 00 00                      adc.t #$40
ff0d5b 2f 8d 07 d0                         sta.t $00d007         ; END_ADDR
ff0d5f                 IFff0d19_end:
ff0d5f 2f ad 04 d0                         lda.t $00d004         ; START_ADDR
ff0d63 4f 20 14 05 ff                      jsr.a24 $ff0514       ; PrintHex24
ff0d68 a9 ad                               lda #$ad
ff0d6a 4f 20 a6 06 ff                      jsr.a24 $ff06a6       ; PrintChar
ff0d6f 2f ad 07 d0                         lda.t $00d007         ; END_ADDR
ff0d73 4f 20 14 05 ff                      jsr.a24 $ff0514       ; PrintHex24
ff0d78 4f 20 a4 07 ff                      jsr.a24 $ff07a4       ; NextLine
ff0d7d a9 00                               lda #$0
ff0d7f 4f 60                               rts.a24
ff0d81 64 09                               stz $09               ; LINENUM
ff0d83 64 0a                               stz $0a               ; STOP
ff0d85 2f ad 04 d0                         lda.t $00d004         ; START_ADDR
ff0d89 2f 85 0b                            sta.t $0b             ; CUR_ADDR
ff0d8c                 LOOPff0d8c_start:
ff0d8c                                 ;; LOOP {
ff0d8c                 LOOPff0d8c_loop:
ff0d8c 4f 20 b6 0d ff                      jsr.a24 $ff0db6       ; Draw_Peek_Line
ff0d91 4f 20 0c 0e ff                      jsr.a24 $ff0e0c       ; Loop_Paginate
ff0d96                                 ;; IF != {
ff0d96 f0 04                               beq +4                ; IFff0d96_end [ff0d9c]
ff0d98                                 ;; BREAK
ff0d98 4f 80 18 00                         bra.a24 +24           ; loopff0d8c_end [ff0db4]
ff0d9c                 IFff0d96_end:
ff0d9c 2f a5 0b                            lda.t $0b             ; CUR_ADDR
ff0d9f 18                                  clc
ff0da0 2f 69 08 00 00                      adc.t #$8
ff0da5 2f 85 0b                            sta.t $0b             ; CUR_ADDR
ff0da8 2f cd 07 d0                         cmp.t $00d007         ; END_ADDR
ff0dac                                 ;; IF >= {
ff0dac 90 04                               bcc +4                ; IFff0dac_end [ff0db2]
ff0dae                                 ;; BREAK
ff0dae 4f 80 02 00                         bra.a24 +2            ; loopff0d8c_end [ff0db4]
ff0db2                 IFff0dac_end:
ff0db2 80 d8                               bra -40               ; LOOPff0d8c_loop [ff0d8c]
ff0db4                 LOOPff0d8c_end:
ff0db4 4f 60                               rts.a24

ff0db6 ; SUB Draw_Peek_Line:
00000b-00000d   ; VAR @ADDR
00000e          ; VAR @IDX
ff0db6 a9 a4                               lda #$a4
ff0db8 4f 20 a6 06 ff                      jsr.a24 $ff06a6       ; PrintChar
ff0dbd 2f a5 0b                            lda.t $0b             ; ADDR
ff0dc0 4f 20 14 05 ff                      jsr.a24 $ff0514       ; PrintHex24
ff0dc5 a9 ad                               lda #$ad
ff0dc7 4f 20 a6 06 ff                      jsr.a24 $ff06a6       ; PrintChar
ff0dcc                 FORff0dcc_start:
ff0dcc                                 ;; FOR @IDX = 0 TO 7 {
ff0dcc a2 00                               ldx #$0
ff0dce 86 0e                               stx $0e
ff0dd0                 FORff0dcc_loop:
ff0dd0 a4 0e                               ldy $0e               ; IDX
ff0dd2 b1 0b                               lda ($0b),Y           ; ADDR
ff0dd4 4f 20 4d 05 ff                      jsr.a24 $ff054d       ; PrintHexByte
ff0dd9 4f 20 b7 06 ff                      jsr.a24 $ff06b7       ; PrintSpace
ff0dde e6 0e                               inc $0e
ff0de0 a6 0e                               ldx $0e
ff0de2 e0 08                               cpx #$8
ff0de4 d0 ea                               bne -22               ; FORff0dcc_loop [ff0dd0]
ff0de6                 FORff0dcc_end:
ff0de6                 FORff0de6_start:
ff0de6                                 ;; FOR @IDX = 0 TO 7 {
ff0de6 a2 00                               ldx #$0
ff0de8 86 0e                               stx $0e
ff0dea                 FORff0de6_loop:
ff0dea a4 0e                               ldy $0e               ; IDX
ff0dec b1 0b                               lda ($0b),Y           ; ADDR
ff0dee                                 ;; IF < 128 {
ff0dee c9 80                               cmp #$80
ff0df0 b0 0b                               bcs +11               ; IFff0dee_end [ff0dfd]
ff0df2                                 ;; IF == 0 {
ff0df2 c9 00                               cmp #$0
ff0df4 d0 04                               bne +4                ; IFff0df2_else [ff0dfa]
ff0df6 a9 ae                               lda #$ae
ff0df8 80 03                               bra +3                ; IFff0df2_end [ff0dfd]
ff0dfa                 IFff0df2_else:
ff0dfa                                 ;; ELSE
ff0dfa 18                                  clc
ff0dfb 69 80                               adc #$80
ff0dfd                 IFff0df2_end:
ff0dfd                 IFff0dee_end:
ff0dfd 4f 20 a6 06 ff                      jsr.a24 $ff06a6       ; PrintChar
ff0e02 e6 0e                               inc $0e
ff0e04 a6 0e                               ldx $0e
ff0e06 e0 08                               cpx #$8
ff0e08 d0 e0                               bne -32               ; FORff0de6_loop [ff0dea]
ff0e0a                 FORff0de6_end:
ff0e0a 4f 60                               rts.a24

ff0e0c ; SUB Loop_Paginate:
000009          ; VAR @LINENUM
ff0e0c e6 09                               inc $09               ; LINENUM
ff0e0e a5 09                               lda $09               ; LINENUM
ff0e10                                 ;; IF == 22 {
ff0e10 c9 16                               cmp #$16
ff0e12 d0 17                               bne +23               ; IFff0e10_end [ff0e2b]
ff0e14 4f 20 6f 08 ff                      jsr.a24 $ff086f       ; GetChar
ff0e19                                 ;; IF == 131 {
ff0e19 c9 83                               cmp #$83
ff0e1b d0 04                               bne +4                ; IFff0e19_end [ff0e21]
ff0e1d a9 01                               lda #$1
ff0e1f 4f 60                               rts.a24
ff0e21                 IFff0e19_end:
ff0e21                                 ;; IF == 155 {
ff0e21 c9 9b                               cmp #$9b
ff0e23 d0 04                               bne +4                ; IFff0e21_end [ff0e29]
ff0e25 a9 01                               lda #$1
ff0e27 4f 60                               rts.a24
ff0e29                 IFff0e21_end:
ff0e29 64 09                               stz $09               ; LINENUM
ff0e2b                 IFff0e10_end:
ff0e2b 4f 20 a4 07 ff                      jsr.a24 $ff07a4       ; NextLine
ff0e30 9c fe 03                            stz $03fe             ; TXTPOS
ff0e33 a9 00                               lda #$0
ff0e35 4f 60                               rts.a24

ff0e37 ; SUB DoPoke:
00d000          ; VAR @ARGN
00d001          ; VAR @CMD
00d004          ; VAR @ADDRESS
00d007          ; VAR @VALUE
ff0e37 ad 00 d0                            lda $d000             ; ARGN
ff0e3a                                 ;; IF < 1 {
ff0e3a c9 01                               cmp #$1
ff0e3c b0 10                               bcs +16               ; IFff0e3a_end [ff0e4e]
ff0e3e 2f a9 96 80 ff                      lda.t #$ff8096        ; NoAddressErrStr
ff0e43 2f 8d 00 d7                         sta.t $00d700
ff0e47 4f 20 90 06 ff                      jsr.a24 $ff0690       ; PrintError
ff0e4c 4f 60                               rts.a24
ff0e4e                 IFff0e3a_end:
ff0e4e 2f ad 04 d0                         lda.t $00d004         ; ADDRESS
ff0e52 2f 8d 00 d7                         sta.t $00d700
ff0e56 4f 20 7d 05 ff                      jsr.a24 $ff057d       ; ParseNumber
ff0e5b 2f 8d 04 d0                         sta.t $00d004         ; ADDRESS
ff0e5f ad 00 d0                            lda $d000             ; ARGN
ff0e62                                 ;; IF < 2 {
ff0e62 c9 02                               cmp #$2
ff0e64 b0 10                               bcs +16               ; IFff0e62_end [ff0e76]
ff0e66 2f a9 b4 80 ff                      lda.t #$ff80b4        ; NoValueErrStr
ff0e6b 2f 8d 00 d7                         sta.t $00d700
ff0e6f 4f 20 90 06 ff                      jsr.a24 $ff0690       ; PrintError
ff0e74 4f 60                               rts.a24
ff0e76                 IFff0e62_end:
ff0e76 2f ad 07 d0                         lda.t $00d007         ; VALUE
ff0e7a 2f 8d 00 d7                         sta.t $00d700
ff0e7e 4f 20 7d 05 ff                      jsr.a24 $ff057d       ; ParseNumber
ff0e83 2f 8d 07 d0                         sta.t $00d007         ; VALUE
ff0e87 4f 20 a4 07 ff                      jsr.a24 $ff07a4       ; NextLine
ff0e8c 2f ad 07 d0                         lda.t $00d007         ; VALUE
ff0e90                                 ;; IF < 255 {
ff0e90 c9 ff                               cmp #$ff
ff0e92 b0 05                               bcs +5                ; IFff0e90_end [ff0e99]
ff0e94 8d 04 d0                            sta $d004             ; ADDRESS
ff0e97 80 10                               bra +16               ; skip [ff0ea9]
ff0e99                 IFff0e90_end:
ff0e99                                 ;; IF < 65535 {
ff0e99 1f c9 ff ff                         cmp.w #$ffff
ff0e9d b0 06                               bcs +6                ; IFff0e99_else [ff0ea5]
ff0e9f 1f 8d 04 d0                         sta.w $00d004         ; ADDRESS
ff0ea3 80 04                               bra +4                ; IFff0e99_end [ff0ea9]
ff0ea5                 IFff0e99_else:
ff0ea5                                 ;; ELSE
ff0ea5 2f 8d 04 d0                         sta.t $00d004         ; ADDRESS
ff0ea9                 IFff0e99_end:
ff0ea9                 skip:
ff0ea9 2f ad 04 d0                         lda.t $00d004         ; ADDRESS
ff0ead 2f 29 f0 ff ff                      and.t #$fffff0
ff0eb2 2f 8d 04 d0                         sta.t $00d004         ; ADDRESS
ff0eb6 4f 20 b6 0d ff                      jsr.a24 $ff0db6       ; Draw_Peek_Line
ff0ebb 4f 20 a4 07 ff                      jsr.a24 $ff07a4       ; NextLine
ff0ec0 4f 20 a4 07 ff                      jsr.a24 $ff07a4       ; NextLine
ff0ec5 4f 60                               rts.a24

ff0ec7 ; SUB DoReset:
00d000          ; VAR @ARGN
ff0ec7 ea                                  nop
ff0ec8 4f 4c 00 02 ff                      jmp.a24 $ff0200       ; Reset

ff0ecd ; SUB DoText:
00d000          ; VAR @ARGN
00d001          ; VAR @WHERE
ff0ecd 2f ad 00 d0                         lda.t $00d000         ; ARGN
ff0ed1                                 ;; IF < 1 {
ff0ed1 c9 01                               cmp #$1
ff0ed3 b0 08                               bcs +8                ; IFff0ed1_end [ff0edd]
ff0ed5 ad 54 c0                            lda $c054             ; TXTPAGE1
ff0ed8 9c fd 03                            stz $03fd             ; DISPMODE
ff0edb 4f 60                               rts.a24
ff0edd                 IFff0ed1_end:
ff0edd a0 00                               ldy #$0
ff0edf 4f b1 01                            lda.a24 ($01),Y       ; WHERE
ff0ee2 c9 38                               cmp #$38
ff0ee4                                 ;; IF == {
ff0ee4 d0 20                               bne +32               ; IFff0ee4_end [ff0f06]
ff0ee6 a0 01                               ldy #$1
ff0ee8 4f b1 01                            lda.a24 ($01),Y       ; WHERE
ff0eeb c9 30                               cmp #$30
ff0eed                                 ;; IF == {
ff0eed d0 07                               bne +7                ; IFff0eed_end [ff0ef6]
ff0eef a0 02                               ldy #$2
ff0ef1 4f b1 01                            lda.a24 ($01),Y       ; WHERE
ff0ef4                                 ;; IF == {
ff0ef4 d0 00                               bne +0                ; IFff0ef4_end [ff0ef6]
ff0ef6                 IFff0ef4_end:
ff0ef6                 IFff0eed_end:
ff0ef6 2f a9 e4 80 ff                      lda.t #$ff80e4        ; InvalidValue
ff0efb 2f 8d 00 d7                         sta.t $00d700
ff0eff 4f 20 90 06 ff                      jsr.a24 $ff0690       ; PrintError
ff0f04 4f 60                               rts.a24
ff0f06                 IFff0ee4_end:
ff0f06 c9 31                               cmp #$31
ff0f08                                 ;; IF == {
ff0f08 d0 0f                               bne +15               ; IFff0f08_end [ff0f19]
ff0f0a a0 01                               ldy #$1
ff0f0c 4f b1 01                            lda.a24 ($01),Y       ; WHERE
ff0f0f                                 ;; IF == {
ff0f0f d0 08                               bne +8                ; IFff0f0f_end [ff0f19]
ff0f11 ad 54 c0                            lda $c054             ; TXTPAGE1
ff0f14 9c fd 03                            stz $03fd             ; DISPMODE
ff0f17 4f 60                               rts.a24
ff0f19                 IFff0f0f_end:
ff0f19                 IFff0f08_end:
ff0f19 c9 32                               cmp #$32
ff0f1b                                 ;; IF == {
ff0f1b d0 11                               bne +17               ; IFff0f1b_end [ff0f2e]
ff0f1d a0 01                               ldy #$1
ff0f1f 4f b1 01                            lda.a24 ($01),Y       ; WHERE
ff0f22                                 ;; IF == {
ff0f22 d0 0a                               bne +10               ; IFff0f22_end [ff0f2e]
ff0f24 ad 55 c0                            lda $c055             ; TXTPAGE2
ff0f27 a9 01                               lda #$1               ; DISP_TEXT_2
ff0f29 8d fd 03                            sta $03fd             ; DISPMODE
ff0f2c 4f 60                               rts.a24
ff0f2e                 IFff0f22_end:
ff0f2e                 IFff0f1b_end:
ff0f2e 2f a9 e4 80 ff                      lda.t #$ff80e4        ; InvalidValue
ff0f33 2f 8d 00 d7                         sta.t $00d700
ff0f37 4f 20 90 06 ff                      jsr.a24 $ff0690       ; PrintError
ff0f3c 4f 60                               rts.a24

ff0f3e ; SUB Do2Plus:
00d000          ; VAR @ARGN
ff0f3e 8d 82 c0                            sta $c082             ; LANGCLR
ff0f41 fc                                  sws
ff0f42 a2 ff                               ldx #$ff
ff0f44 9a                                  txs
ff0f45 a9 00                               lda #$0
ff0f47 8d f4 03                            sta $03f4             ; PWREDUP
ff0f4a 6c fc ff                            jmp ($fffc)           ; RSTVECTOR

; 28851 BYTES of FILLER

ff8000 ; DATA TextScreenBase:
ff8000 00 04
ff8002 80 04
ff8004 00 05
ff8006 80 05
ff8008 00 06
ff800a 80 06
ff800c 00 07
ff800e 80 07
ff8010 28 04
ff8012 a8 04
ff8014 28 05
ff8016 a8 05
ff8018 28 06
ff801a a8 06
ff801c 28 07
ff801e a8 07
ff8020 50 04
ff8022 d0 04
ff8024 50 05
ff8026 d0 05
ff8028 50 06
ff802a d0 06
ff802c 50 07
ff802e d0 07

ff8030 ; DATA Hello:
ff8030 41 70 70 6c 65 20 5d 5b 34 00

ff803a ; DATA CommandListStr:
ff803a 43 4f 4d 4d 41 4e 44 53 3a 00

ff8044 ; DATA ASCIIHeaderStr:
ff8044 20 20 30 31 32 33 34 35 36 37 38 39 41 42 43 44 45 46 00

ff8057 ; DATA ASCIIDashesStr:
ff8057 20 20 2d 2d 2d 2d 2d 2d 2d 2d 2d 2d 2d 2d 2d 2d 2d 2d 00

ff806a ; DATA CatalogHeaderStr:
ff806a 43 41 54 41 4c 4f 47 20 66 6f 72 20 00

ff8077 ; DATA NoFilenameErrStr:
ff8077 2a 2a 2a 20 46 49 4c 45 4e 41 4d 45 20 6d 75 73 74 20 62 65 20 73 70 65 63 69 66 69 65 64 00

ff8096 ; DATA NoAddressErrStr:
ff8096 2a 2a 2a 20 41 44 44 52 45 53 53 20 6d 75 73 74 20 62 65 20 73 70 65 63 69 66 69 65 64 00

ff80b4 ; DATA NoValueErrStr:
ff80b4 2a 2a 2a 20 56 41 4c 55 45 20 6d 75 73 74 20 62 65 20 73 70 65 63 69 66 69 65 64 00

ff80d0 ; DATA LoadedStr:
ff80d0 4c 4f 41 44 45 44 20 00

ff80d8 ; DATA LoadedBytesToStr:
ff80d8 20 62 79 74 65 73 20 74 6f 20 24 00

ff80e4 ; DATA InvalidValue:
ff80e4 2a 2a 2a 20 49 4e 56 41 4c 49 44 20 56 41 4c 55 45 00

ff80f6 ; DATA Disk4ErrorStr:
ff80f6 2a 2a 2a 20 44 49 53 4b 34 20 45 52 52 4f 52 00

ff8106 ; DATA Disk4ErrorNotFoundStr:
ff8106 2a 2a 2a 20 44 49 53 4b 34 3a 20 46 49 4c 45 20 4e 4f 54 20 46 4f 55 4e 44 00

ff8120 ; DATA Disk4ErrorReadStr:
ff8120 2a 2a 2a 20 44 49 53 4b 34 3a 20 52 45 41 44 20 45 52 52 4f 52 00

ff8136 ; DATA BeepTimes:
ff8136 dc
ff8137 dc
ff8138 dc
ff8139 3c
ff813a 3c
ff813b 3c
ff813c 3c
ff813d 3c

ff813e ; DATA CMD_Help:
ff813e 3f 00

ff8140 ; DATA CMD_Ascii:
ff8140 61 73 63 69 69 00

ff8146 ; DATA CMD_Beep:
ff8146 62 65 65 70 00

ff814b ; DATA CMD_Catalog:
ff814b 63 61 74 61 6c 6f 67 00

ff8153 ; DATA CMD_Clear:
ff8153 63 6c 65 61 72 00

ff8159 ; DATA CMD_Echo:
ff8159 65 63 68 6f 00

ff815e ; DATA CMD_Load:
ff815e 6c 6f 61 64 00

ff8163 ; DATA CMD_Peek:
ff8163 70 65 65 6b 00

ff8168 ; DATA CMD_Poke:
ff8168 70 6f 6b 65 00

ff816d ; DATA CMD_Reset:
ff816d 72 65 73 65 74 00

ff8173 ; DATA CMD_Text:
ff8173 74 65 78 74 00

ff8178 ; DATA CMD_Wait:
ff8178 77 61 69 74 00

ff817d ; DATA CMD_View:
ff817d 76 69 65 77 00

ff8182 ; DATA CMD_2Plus:
ff8182 32 2b 00

ff8185 ; DATA CommandList:
ff8185 3e 81 ff
ff8188 2c 09 ff
ff818b 40 81 ff
ff818e cd 09 ff
ff8191 4b 81 ff
ff8194 41 0a ff
ff8197 46 81 ff
ff819a ea 06 ff
ff819d 53 81 ff
ff81a0 db 0a ff
ff81a3 59 81 ff
ff81a6 00 0b ff
ff81a9 5e 81 ff
ff81ac 14 0b ff
ff81af 63 81 ff
ff81b2 e9 0c ff
ff81b5 68 81 ff
ff81b8 37 0e ff
ff81bb 6d 81 ff
ff81be c7 0e ff
ff81c1 73 81 ff
ff81c4 cd 0e ff
ff81c7 7d 81 ff
ff81ca 07 0c ff
ff81cd 78 81 ff
ff81d0 07 07 ff
ff81d3 82 81 ff
ff81d6 3e 0f ff

; 32286 BYTES of FILLER

fffff7 ; DATA Vectors:
fffff7 00 00 00
fffffa 00 00 ff
fffffd 00 00 00

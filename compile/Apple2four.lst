0000fe          ; GLOBAL @TXTPTR
0003ff          ; GLOBAL @TXTROW
0003fe          ; GLOBAL @TXTPOS
0003fd          ; GLOBAL @TXTPAGE
000200          ; GLOBAL @TXTBUFFER
000280          ; GLOBAL @TXTBUFFER2
000000          ; GLOBAL @R0
000001          ; GLOBAL @R1
000002          ; GLOBAL @R2
000003          ; GLOBAL @R3
000004          ; GLOBAL @R4
000005          ; GLOBAL @R5
000006          ; GLOBAL @R6
000007          ; GLOBAL @R7
000008          ; GLOBAL @R8
000009          ; GLOBAL @R9
00000a          ; GLOBAL @R10
00000b          ; GLOBAL @R11
00000c          ; GLOBAL @R12
00000d          ; GLOBAL @R13
00000e          ; GLOBAL @R14
00000f          ; GLOBAL @R15
000020          ; GLOBAL @ARG0
000021          ; GLOBAL @ARG1
000022          ; GLOBAL @ARG2
000020-000021   ; GLOBAL @ARGW0
000022-000023   ; GLOBAL @ARGW1
000020-000022   ; GLOBAL @ARGT0
000023-000024   ; GLOBAL @ARGT1

ff0000 ; SUB Start:
ff0000 4f 4c 00 02 ff                      jmp.a24 $ff0200       ; Reset

ff0005 ; DATA ROMVectors:
ff0005 1f 05 ff
ff0008 8f 05 ff
ff000b bc 05 ff
ff000e e5 05 ff
ff0011 ca 04 ff
ff0014 d8 04 ff
ff0017 ac 04 ff
ff001a 02 05 ff
ff001d e1 03 ff
ff0020 9a 06 ff

; 477 BYTES of FILLER

ff0200 ; SUB Reset:
ff0200 d8                                  cld
ff0201 8d 83 c0                            sta $c083             ; LANGSET
ff0204 8d 83 c0                            sta $c083             ; LANGSET
ff0207 1f                                  r16
ff0208 fc                                  sws
ff0209 1f a2 ff fe                         ldx.w #$feff          ; TOP_OF_STACK
ff020d 1f 9a                               txs.w
ff020f ad 51 c0                            lda $c051             ; TXTSET
ff0212 ad 54 c0                            lda $c054             ; TXTPAGE1
ff0215 ad 58 c0                            lda $c058             ; SETAN0
ff0218 ad 5a c0                            lda $c05a             ; SETAN1
ff021b ad 5d c0                            lda $c05d             ; CLRAN2
ff021e ad 5f c0                            lda $c05f             ; CLRAN3
ff0221 ad ff cf                            lda $cfff             ; CLRROM
ff0224 2c 10 c0                            bit $c010             ; KBDSTRB
ff0227 a9 02                               lda #$2
ff0229 8d ff 03                            sta $03ff             ; TXTROW
ff022c 9c fe 03                            stz $03fe             ; TXTPOS
ff022f a2 00                               ldx #$0
ff0231 a9 01                               lda #$1
ff0233 8d fd 03                            sta $03fd             ; TXTPAGE
ff0236 4f 20 8f 05 ff                      jsr.a24 $ff058f       ; ClearScreen
ff023b a2 00                               ldx #$0
ff023d 9c fd 03                            stz $03fd             ; TXTPAGE
ff0240 4f 20 8f 05 ff                      jsr.a24 $ff058f       ; ClearScreen
ff0245 4f 20 9a 06 ff                      jsr.a24 $ff069a       ; AppleII4

ff024a ; SUB EchoKeys:
ff024a 4f 20 20 06 ff                      jsr.a24 $ff0620       ; ClearInputBuffers
ff024f                 LOOPff024f_start:
ff024f                                 ;; LOOP {
ff024f                 LOOPff024f_loop:
ff024f 4f 20 c3 03 ff                      jsr.a24 $ff03c3       ; ScreenBase
ff0254 ad fe 03                            lda $03fe             ; TXTPOS
ff0257                                 ;; IF == {
ff0257 d0 0c                               bne +12               ; IFff0257_end [ff0265]
ff0259 a9 ba                               lda #$ba
ff025b 4f 20 ca 04 ff                      jsr.a24 $ff04ca       ; PrintChar
ff0260 4f 20 e8 04 ff                      jsr.a24 $ff04e8       ; PrintCursor
ff0265                 IFff0257_end:
ff0265                 LOOPff0265_start:
ff0265                                 ;; LOOP {
ff0265                 LOOPff0265_loop:
ff0265 2c 00 c0                            bit $c000             ; KBD
ff0268                                 ;; IF - {
ff0268 10 04                               bpl +4                ; IFff0268_end [ff026e]
ff026a                                 ;; BREAK
ff026a 4f 80 02 00                         bra.a24 +2            ; loopff0265_end [ff0270]
ff026e                 IFff0268_end:
ff026e 80 f5                               bra -11               ; LOOPff0265_loop [ff0265]
ff0270                 LOOPff0265_end:
ff0270 ad 00 c0                            lda $c000             ; KBD
ff0273 2c 10 c0                            bit $c010             ; KBDSTRB
ff0276                                 ;; IF == 141 {
ff0276 c9 8d                               cmp #$8d
ff0278 d0 1a                               bne +26               ; IFff0276_end [ff0294]
ff027a a9 a0                               lda #$a0
ff027c 91 fe                               sta ($fe),Y           ; TXTPTR
ff027e 4f 20 bc 05 ff                      jsr.a24 $ff05bc       ; NextLine
ff0283 4f 20 4b 06 ff                      jsr.a24 $ff064b       ; CurrentToPrevInputBuffer
ff0288 4f 20 1e 03 ff                      jsr.a24 $ff031e       ; CommandLine
ff028d 4f 20 2e 06 ff                      jsr.a24 $ff062e       ; ClearCurrentInputBuffer
ff0292                                 ;; CONTINUE
ff0292 80 bb                               bra -69               ; loopff024f_start [ff024f]
ff0294                 IFff0276_end:
ff0294                                 ;; IF == 136 {
ff0294 c9 88                               cmp #$88
ff0296 d0 23                               bne +35               ; IFff0294_end [ff02bb]
ff0298                                 ;; IF > 1 {
ff0298 c9 01                               cmp #$1
ff029a f0 1d                               beq +29               ; IFff0298_end [ff02b9]
ff029c 90 1b                               bcc +27               ; IFff0298_end [ff02b9]
ff029e 4f 20 f5 04 ff                      jsr.a24 $ff04f5       ; ClearCursor
ff02a3 a9 a0                               lda #$a0
ff02a5 ac fe 03                            ldy $03fe             ; TXTPOS
ff02a8 88                                  dey
ff02a9 91 fe                               sta ($fe),Y           ; TXTPTR
ff02ab 88                                  dey
ff02ac a9 00                               lda #$0
ff02ae 99 00 02                            sta $0200,Y           ; TXTBUFFER
ff02b1 ce fe 03                            dec $03fe             ; TXTPOS
ff02b4 4f 20 e8 04 ff                      jsr.a24 $ff04e8       ; PrintCursor
ff02b9                 IFff0298_end:
ff02b9                                 ;; CONTINUE
ff02b9 80 94                               bra -108              ; loopff024f_start [ff024f]
ff02bb                 IFff0294_end:
ff02bb                                 ;; IF == 149 {
ff02bb c9 95                               cmp #$95
ff02bd d0 0d                               bne +13               ; IFff02bb_end [ff02cc]
ff02bf                                 ;; IF > 1 {
ff02bf c9 01                               cmp #$1
ff02c1 f0 07                               beq +7                ; IFff02bf_end [ff02ca]
ff02c3 90 05                               bcc +5                ; IFff02bf_end [ff02ca]
ff02c5 4f 20 62 03 ff                      jsr.a24 $ff0362       ; CompleteCommand
ff02ca                 IFff02bf_end:
ff02ca                                 ;; CONTINUE
ff02ca 80 83                               bra -125              ; loopff024f_start [ff024f]
ff02cc                 IFff02bb_end:
ff02cc                                 ;; IF == 139 {
ff02cc c9 8b                               cmp #$8b
ff02ce d0 13                               bne +19               ; IFff02cc_end [ff02e3]
ff02d0 4f 20 3c 06 ff                      jsr.a24 $ff063c       ; PrevToCurrentInputBuffer
ff02d5 4f 20 5a 06 ff                      jsr.a24 $ff065a       ; InputBufferToTextScreen
ff02da 4f 20 e8 04 ff                      jsr.a24 $ff04e8       ; PrintCursor
ff02df                                 ;; CONTINUE
ff02df 4f 80 6c ff                         bra.a24 -148          ; loopff024f_start [ff024f]
ff02e3                 IFff02cc_end:
ff02e3                                 ;; IF == 155 {
ff02e3 c9 9b                               cmp #$9b
ff02e5 d0 16                               bne +22               ; IFff02e3_end [ff02fd]
ff02e7 ae ff 03                            ldx $03ff             ; TXTROW
ff02ea 4f 20 79 05 ff                      jsr.a24 $ff0579       ; ClearRow
ff02ef 4f 20 2e 06 ff                      jsr.a24 $ff062e       ; ClearCurrentInputBuffer
ff02f4 a9 00                               lda #$0
ff02f6 8d fe 03                            sta $03fe             ; TXTPOS
ff02f9                                 ;; CONTINUE
ff02f9 4f 80 52 ff                         bra.a24 -174          ; loopff024f_start [ff024f]
ff02fd                 IFff02e3_end:
ff02fd                                 ;; IF > 159 {
ff02fd c9 9f                               cmp #$9f
ff02ff f0 19                               beq +25               ; IFff02fd_end [ff031a]
ff0301 90 17                               bcc +23               ; IFff02fd_end [ff031a]
ff0303 ac fe 03                            ldy $03fe             ; TXTPOS
ff0306 4f 20 ca 04 ff                      jsr.a24 $ff04ca       ; PrintChar
ff030b c0 28                               cpy #$28
ff030d                                 ;; IF < {
ff030d b0 0b                               bcs +11               ; IFff030d_end [ff031a]
ff030f 29 7f                               and #$7f
ff0311 88                                  dey
ff0312 99 00 02                            sta $0200,Y           ; TXTBUFFER
ff0315 4f 20 e8 04 ff                      jsr.a24 $ff04e8       ; PrintCursor
ff031a                 IFff030d_end:
ff031a                 IFff02fd_end:
ff031a 4f 80 31 ff                         bra.a24 -207          ; LOOPff024f_loop [ff024f]
ff031e                 LOOPff024f_end:

ff031e ; SUB CommandLine:
000004          ; VAR @I
000005          ; VAR @I6
ff031e 1f a9 00 02                         lda.w #$200           ; TXTBUFFER
ff0322 2f 85 20                            sta.t $20             ; ARGT0
ff0325                 FORff0325_start:
ff0325                                 ;; FOR @I = 0 TO 11 {
ff0325 a2 00                               ldx #$0
ff0327 86 04                               stx $04
ff0329                 FORff0325_loop:
ff0329 a5 04                               lda $04               ; I
ff032b                       ;; A <<= 2 
ff032b 0a                                  asl
ff032c 0a                                  asl
ff032d 85 05                               sta $05               ; I6
ff032f a5 04                               lda $04               ; I
ff0331                       ;; A <<= 1 
ff0331 0a                                  asl
ff0332 18                                  clc
ff0333 65 05                               adc $05               ; I6
ff0335 85 05                               sta $05               ; I6
ff0337 aa                                  tax
ff0338 6f bd f1 80 ff                      lda.t.a24 $ff80f1,X   ; CommandList
ff033d 2f 85 23                            sta.t $23             ; ARGT1
ff0340 4f 20 e1 03 ff                      jsr.a24 $ff03e1       ; CompareText
ff0345                                 ;; IF - {
ff0345 10 11                               bpl +17               ; IFff0345_end [ff0358]
ff0347 a6 05                               ldx $05               ; I6
ff0349 6f bd f4 80 ff                      lda.t.a24 $ff80f4,X   ; CommandList
ff034e 2f 85 23                            sta.t $23             ; ARGT1
ff0351 4f 5c 23 00 00                      jsr.a24 ($23)         ; ARGT1
ff0356 4f 60                               rts.a24
ff0358                 IFff0345_end:
ff0358 e6 04                               inc $04
ff035a a6 04                               ldx $04
ff035c e0 0c                               cpx #$c
ff035e d0 c9                               bne -55               ; FORff0325_loop [ff0329]
ff0360                 FORff0325_end:
ff0360 4f 60                               rts.a24

ff0362 ; SUB CompleteCommand:
000004          ; VAR @I
000005          ; VAR @I6
ff0362 1f a9 00 02                         lda.w #$200           ; TXTBUFFER
ff0366 2f 85 20                            sta.t $20             ; ARGT0
ff0369                 FORff0369_start:
ff0369                                 ;; FOR @I = 0 TO 11 {
ff0369 a2 00                               ldx #$0
ff036b 86 04                               stx $04
ff036d                 FORff0369_loop:
ff036d a5 04                               lda $04               ; I
ff036f                       ;; A <<= 2 
ff036f 0a                                  asl
ff0370 0a                                  asl
ff0371 85 05                               sta $05               ; I6
ff0373 a5 04                               lda $04               ; I
ff0375                       ;; A <<= 1 
ff0375 0a                                  asl
ff0376 18                                  clc
ff0377 65 05                               adc $05               ; I6
ff0379 85 05                               sta $05               ; I6
ff037b aa                                  tax
ff037c 6f bd f1 80 ff                      lda.t.a24 $ff80f1,X   ; CommandList
ff0381 2f 85 23                            sta.t $23             ; ARGT1
ff0384 4f 20 0b 04 ff                      jsr.a24 $ff040b       ; CompareStartOfText
ff0389                                 ;; IF - {
ff0389 10 2e                               bpl +46               ; IFff0389_end [ff03b9]
ff038b a6 05                               ldx $05               ; I6
ff038d 6f bd f1 80 ff                      lda.t.a24 $ff80f1,X   ; CommandList
ff0392 2f 85 20                            sta.t $20             ; ARGT0
ff0395 1f a9 00 02                         lda.w #$200           ; TXTBUFFER
ff0399 2f 85 23                            sta.t $23             ; ARGT1
ff039c 4f 20 2a 04 ff                      jsr.a24 $ff042a       ; CopyString
ff03a1 1f a5 fe                            lda.w $fe             ; TXTPTR
ff03a4 1f 1a                               inc.w
ff03a6 2f 85 23                            sta.t $23             ; ARGT1
ff03a9 4f 20 3d 04 ff                      jsr.a24 $ff043d       ; CopyStringHigh
ff03ae c8                                  iny
ff03af 8c fe 03                            sty $03fe             ; TXTPOS
ff03b2 4f 20 e8 04 ff                      jsr.a24 $ff04e8       ; PrintCursor
ff03b7 4f 60                               rts.a24
ff03b9                 IFff0389_end:
ff03b9 e6 04                               inc $04
ff03bb a6 04                               ldx $04
ff03bd e0 0c                               cpx #$c
ff03bf d0 ac                               bne -84               ; FORff0369_loop [ff036d]
ff03c1                 FORff0369_end:
ff03c1 4f 60                               rts.a24

ff03c3 ; SUB ScreenBase:
ff03c3                       ;; X = M@$3ff 
ff03c3 ae ff 03                            ldx $03ff
ff03c6 2b                                  xsl
ff03c7 ad fd 03                            lda $03fd             ; TXTPAGE
ff03ca                                 ;; IF == {
ff03ca d0 07                               bne +7                ; IFff03ca_else [ff03d3]
ff03cc 5f bd 00 80 ff                      lda.w.a24 $ff8000,X   ; TextScreenBase
ff03d1 80 09                               bra +9                ; IFff03ca_end [ff03dc]
ff03d3                 IFff03ca_else:
ff03d3                                 ;; ELSE
ff03d3 5f bd 00 80 ff                      lda.w.a24 $ff8000,X   ; TextScreenBase
ff03d8 1f 69 00 04                         adc.w #$400
ff03dc                 IFff03ca_end:
ff03dc 1f 85 fe                            sta.w $fe             ; TXTPTR
ff03df 4f 60                               rts.a24

ff03e1 ; SUB CompareText:
ff03e1                 FORff03e1_start:
ff03e1                                 ;; FOR Y = 0 TO 127 {
ff03e1 a0 00                               ldy #$0
ff03e3                 FORff03e1_loop:
ff03e3 4f b1 20                            lda.a24 ($20),Y       ; ARGT0
ff03e6 4f d1 23                            cmp.a24 ($23),Y       ; ARGT1
ff03e9                                 ;; IF != {
ff03e9 f0 04                               beq +4                ; IFff03e9_end [ff03ef]
ff03eb a9 00                               lda #$0
ff03ed 4f 60                               rts.a24
ff03ef                 IFff03e9_end:
ff03ef                                 ;; IF == 0 {
ff03ef c9 00                               cmp #$0
ff03f1 d0 0f                               bne +15               ; IFff03ef_end [ff0402]
ff03f3 4f b1 23                            lda.a24 ($23),Y       ; ARGT1
ff03f6                                 ;; IF == 0 {
ff03f6 c9 00                               cmp #$0
ff03f8 d0 04                               bne +4                ; IFff03f6_end [ff03fe]
ff03fa a9 ff                               lda #$ff
ff03fc 4f 60                               rts.a24
ff03fe                 IFff03f6_end:
ff03fe a9 00                               lda #$0
ff0400 4f 60                               rts.a24
ff0402                 IFff03ef_end:
ff0402 c8                                  iny
ff0403 c0 80                               cpy #$80
ff0405 d0 dc                               bne -36               ; FORff03e1_loop [ff03e3]
ff0407                 FORff03e1_end:
ff0407 a9 00                               lda #$0
ff0409 4f 60                               rts.a24

ff040b ; SUB CompareStartOfText:
ff040b                 FORff040b_start:
ff040b                                 ;; FOR Y = 0 TO 127 {
ff040b a0 00                               ldy #$0
ff040d                 FORff040b_loop:
ff040d 4f b1 20                            lda.a24 ($20),Y       ; ARGT0
ff0410                                 ;; IF == 0 {
ff0410 c9 00                               cmp #$0
ff0412 d0 04                               bne +4                ; IFff0410_end [ff0418]
ff0414 a9 ff                               lda #$ff
ff0416 4f 60                               rts.a24
ff0418                 IFff0410_end:
ff0418 4f d1 23                            cmp.a24 ($23),Y       ; ARGT1
ff041b                                 ;; IF != {
ff041b f0 04                               beq +4                ; IFff041b_end [ff0421]
ff041d a9 00                               lda #$0
ff041f 4f 60                               rts.a24
ff0421                 IFff041b_end:
ff0421 c8                                  iny
ff0422 c0 80                               cpy #$80
ff0424 d0 e7                               bne -25               ; FORff040b_loop [ff040d]
ff0426                 FORff040b_end:
ff0426 a9 00                               lda #$0
ff0428 4f 60                               rts.a24

ff042a ; SUB CopyString:
ff042a                 FORff042a_start:
ff042a                                 ;; FOR Y = 0 TO 127 {
ff042a a0 00                               ldy #$0
ff042c                 FORff042a_loop:
ff042c 4f b1 20                            lda.a24 ($20),Y       ; ARGT0
ff042f                                 ;; IF == {
ff042f d0 02                               bne +2                ; IFff042f_end [ff0433]
ff0431 4f 60                               rts.a24
ff0433                 IFff042f_end:
ff0433 4f 91 23                            sta.a24 ($23),Y       ; ARGT1
ff0436 c8                                  iny
ff0437 c0 80                               cpy #$80
ff0439 d0 f1                               bne -15               ; FORff042a_loop [ff042c]
ff043b                 FORff042a_end:
ff043b 4f 60                               rts.a24

ff043d ; SUB CopyStringHigh:
ff043d                 FORff043d_start:
ff043d                                 ;; FOR Y = 0 TO 127 {
ff043d a0 00                               ldy #$0
ff043f                 FORff043d_loop:
ff043f 4f b1 20                            lda.a24 ($20),Y       ; ARGT0
ff0442                                 ;; IF == {
ff0442 d0 02                               bne +2                ; IFff0442_end [ff0446]
ff0444 4f 60                               rts.a24
ff0446                 IFff0442_end:
ff0446 09 80                               ora #$80
ff0448 4f 91 23                            sta.a24 ($23),Y       ; ARGT1
ff044b c8                                  iny
ff044c c0 80                               cpy #$80
ff044e d0 ef                               bne -17               ; FORff043d_loop [ff043f]
ff0450                 FORff043d_end:
ff0450 4f 60                               rts.a24

ff0452 ; SUB PrintHex24:
ff0452 2f 48                               pha.t
ff0454 2f 48                               pha.t
ff0456 2f 1b                               sr8.t
ff0458 2f 1b                               sr8.t
ff045a 4f 20 83 04 ff                      jsr.a24 $ff0483       ; PrintHexByte
ff045f 2f 68                               pla.t
ff0461 1f 1b                               sr8.w
ff0463 4f 20 83 04 ff                      jsr.a24 $ff0483       ; PrintHexByte
ff0468 2f 68                               pla.t
ff046a 4f 20 83 04 ff                      jsr.a24 $ff0483       ; PrintHexByte
ff046f 4f 60                               rts.a24

ff0471 ; SUB PrintHexWord:
ff0471 1f 48                               pha.w
ff0473 1f 1b                               sr8.w
ff0475 4f 20 83 04 ff                      jsr.a24 $ff0483       ; PrintHexByte
ff047a 1f 68                               pla.w
ff047c 4f 20 83 04 ff                      jsr.a24 $ff0483       ; PrintHexByte
ff0481 4f 60                               rts.a24

ff0483 ; SUB PrintHexByte:
ff0483 48                                  pha
ff0484 4a                                  lsr
ff0485 4a                                  lsr
ff0486 4a                                  lsr
ff0487 4a                                  lsr
ff0488 4f 20 97 04 ff                      jsr.a24 $ff0497       ; PrintHexDigit
ff048d 68                                  pla
ff048e 29 0f                               and #$f
ff0490 4f 20 97 04 ff                      jsr.a24 $ff0497       ; PrintHexDigit
ff0495 4f 60                               rts.a24

ff0497 ; SUB PrintHexDigit:
ff0497 c9 0a                               cmp #$a
ff0499 90 05                               bcc +5                ; print_hex_digit_09 [ff04a0]
ff049b 18                                  clc
ff049c 69 b7                               adc #$b7
ff049e 80 02                               bra +2                ; print_hex_digit [ff04a2]
ff04a0                 print_hex_digit_09:
ff04a0 69 b0                               adc #$b0
ff04a2                 print_hex_digit:
ff04a2 ac fe 03                            ldy $03fe             ; TXTPOS
ff04a5 91 fe                               sta ($fe),Y           ; TXTPTR
ff04a7 ee fe 03                            inc $03fe             ; TXTPOS
ff04aa 4f 60                               rts.a24

ff04ac ; SUB PrintString:
ff04ac                 FORff04ac_start:
ff04ac                                 ;; FOR X = 0 TO 39 {
ff04ac a2 00                               ldx #$0
ff04ae                 FORff04ac_loop:
ff04ae 8a                                  txa
ff04af a8                                  tay
ff04b0 4f b1 20                            lda.a24 ($20),Y       ; ARGT0
ff04b3 f0 13                               beq +19               ; forff04ac_end [ff04c8]
ff04b5 09 80                               ora #$80
ff04b7 ac fe 03                            ldy $03fe             ; TXTPOS
ff04ba c0 28                               cpy #$28
ff04bc                                 ;; IF < {
ff04bc b0 05                               bcs +5                ; IFff04bc_end [ff04c3]
ff04be 91 fe                               sta ($fe),Y           ; TXTPTR
ff04c0 ee fe 03                            inc $03fe             ; TXTPOS
ff04c3                 IFff04bc_end:
ff04c3 e8                                  inx
ff04c4 e0 28                               cpx #$28
ff04c6 d0 e6                               bne -26               ; FORff04ac_loop [ff04ae]
ff04c8                 FORff04ac_end:
ff04c8 4f 60                               rts.a24

ff04ca ; SUB PrintChar:
ff04ca ac fe 03                            ldy $03fe             ; TXTPOS
ff04cd c0 28                               cpy #$28
ff04cf                                 ;; IF < {
ff04cf b0 05                               bcs +5                ; IFff04cf_end [ff04d6]
ff04d1 91 fe                               sta ($fe),Y           ; TXTPTR
ff04d3 ee fe 03                            inc $03fe             ; TXTPOS
ff04d6                 IFff04cf_end:
ff04d6 4f 60                               rts.a24

ff04d8 ; SUB PrintSpace:
ff04d8 a9 a0                               lda #$a0
ff04da ac fe 03                            ldy $03fe             ; TXTPOS
ff04dd c0 28                               cpy #$28
ff04df                                 ;; IF < {
ff04df b0 05                               bcs +5                ; IFff04df_end [ff04e6]
ff04e1 91 fe                               sta ($fe),Y           ; TXTPTR
ff04e3 ee fe 03                            inc $03fe             ; TXTPOS
ff04e6                 IFff04df_end:
ff04e6 4f 60                               rts.a24

ff04e8 ; SUB PrintCursor:
ff04e8 ac fe 03                            ldy $03fe             ; TXTPOS
ff04eb c0 28                               cpy #$28
ff04ed                                 ;; IF < {
ff04ed b0 04                               bcs +4                ; IFff04ed_end [ff04f3]
ff04ef a9 df                               lda #$df
ff04f1 91 fe                               sta ($fe),Y           ; TXTPTR
ff04f3                 IFff04ed_end:
ff04f3 4f 60                               rts.a24

ff04f5 ; SUB ClearCursor:
ff04f5 ac fe 03                            ldy $03fe             ; TXTPOS
ff04f8 c0 28                               cpy #$28
ff04fa                                 ;; IF < {
ff04fa b0 04                               bcs +4                ; IFff04fa_end [ff0500]
ff04fc a9 a0                               lda #$a0
ff04fe 91 fe                               sta ($fe),Y           ; TXTPTR
ff0500                 IFff04fa_end:
ff0500 4f 60                               rts.a24

ff0502 ; SUB PlayBeep:
ff0502                 FORff0502_start:
ff0502                                 ;; FOR X = 0 TO 8 {
ff0502 a2 00                               ldx #$0
ff0504                 FORff0502_loop:
ff0504 4f bd ab 80 ff                      lda.a24 $ff80ab,X     ; BeepTimes
ff0509                 FORff0509_start:
ff0509                                 ;; FOR Y = 0 TO 16 {
ff0509 a0 00                               ldy #$0
ff050b                 FORff0509_loop:
ff050b 4f 20 1f 05 ff                      jsr.a24 $ff051f       ; Wait
ff0510 2c 30 c0                            bit $c030             ; SPKR
ff0513 c8                                  iny
ff0514 c0 11                               cpy #$11
ff0516 d0 f3                               bne -13               ; FORff0509_loop [ff050b]
ff0518                 FORff0509_end:
ff0518 e8                                  inx
ff0519 e0 09                               cpx #$9
ff051b d0 e7                               bne -25               ; FORff0502_loop [ff0504]
ff051d                 FORff0502_end:
ff051d 4f 60                               rts.a24

ff051f ; SUB Wait:
ff051f 2f da                               phx.t
ff0521 2f 48                               pha.t
ff0523                 FORff0523_start:
ff0523                                 ;; FOR X = 1 TO 3 {
ff0523 a2 01                               ldx #$1
ff0525                 FORff0523_loop:
ff0525 2f 68                               pla.t
ff0527 2f 48                               pha.t
ff0529                 DOff0529_start:
ff0529                                 ;; DO {
ff0529                 DOff0529_loop:
ff0529 2f 3a                               dec.t
ff052b 2f c9 00 00 00                      cmp.t #$0
ff0530                                 ;; WHILE !=
ff0530 f0 02                               beq +2                ; DOff0529_end [ff0534]
ff0532 80 f5                               bra -11               ; DOff0529_loop [ff0529]
ff0534                 DOff0529_end:
ff0534 e8                                  inx
ff0535 e0 04                               cpx #$4
ff0537 d0 ec                               bne -20               ; FORff0523_loop [ff0525]
ff0539                 FORff0523_end:
ff0539 2f 68                               pla.t
ff053b 2f fa                               plx.t
ff053d 4f 60                               rts.a24

ff053f ; SUB PrintDebugValue:
ff053f 48                                  pha
ff0540 48                                  pha
ff0541                       ;; A >>= 4 
ff0541 4a                                  lsr
ff0542 4a                                  lsr
ff0543 4a                                  lsr
ff0544 4a                                  lsr
ff0545                                 ;; IF >= 10 {
ff0545 c9 0a                               cmp #$a
ff0547 90 05                               bcc +5                ; IFff0545_else [ff054e]
ff0549                       ;; A += 183 
ff0549 18                                  clc
ff054a 69 b7                               adc #$b7
ff054c 80 03                               bra +3                ; IFff0545_end [ff0551]
ff054e                 IFff0545_else:
ff054e                                 ;; ELSE
ff054e                       ;; A += 176 
ff054e 18                                  clc
ff054f 69 b0                               adc #$b0
ff0551                 IFff0545_end:
ff0551 8d 26 04                            sta $0426
ff0554 68                                  pla
ff0555                       ;; A &= 15 
ff0555 29 0f                               and #$f
ff0557                                 ;; IF >= 10 {
ff0557 c9 0a                               cmp #$a
ff0559 90 05                               bcc +5                ; IFff0557_else [ff0560]
ff055b                       ;; A += 183 
ff055b 18                                  clc
ff055c 69 b7                               adc #$b7
ff055e 80 03                               bra +3                ; IFff0557_end [ff0563]
ff0560                 IFff0557_else:
ff0560                                 ;; ELSE
ff0560                       ;; A += 176 
ff0560 18                                  clc
ff0561 69 b0                               adc #$b0
ff0563                 IFff0557_end:
ff0563 8d 27 04                            sta $0427
ff0566 68                                  pla
ff0567 4f 60                               rts.a24

ff0569 ; SUB PrintDebugChar:
ff0569 8d 27 04                            sta $0427
ff056c a9 a0                               lda #$a0
ff056e 8d 26 04                            sta $0426
ff0571 4f 60                               rts.a24

ff0573 ; SUB PrintDebug2Chars:
ff0573 1f 8d 26 04                         sta.w $000426
ff0577 4f 60                               rts.a24

ff0579 ; SUB ClearRow:
ff0579 2b                                  xsl
ff057a 5f bd 00 80 ff                      lda.w.a24 $ff8000,X   ; TextScreenBase
ff057f 1f 85 fe                            sta.w $fe             ; TXTPTR
ff0582 a9 a0                               lda #$a0
ff0584 a0 00                               ldy #$0
ff0586                 loop_clear_char:
ff0586 91 fe                               sta ($fe),Y           ; TXTPTR
ff0588 c8                                  iny
ff0589 c0 28                               cpy #$28
ff058b d0 f9                               bne -7                ; loop_clear_char [ff0586]
ff058d 4f 60                               rts.a24

ff058f ; SUB ClearScreen:
ff058f 18                                  clc
ff0590 2b                                  xsl
ff0591                 loop_clear_line:
ff0591 ad fd 03                            lda $03fd             ; TXTPAGE
ff0594                                 ;; IF == {
ff0594 d0 07                               bne +7                ; IFff0594_else [ff059d]
ff0596 5f bd 00 80 ff                      lda.w.a24 $ff8000,X   ; TextScreenBase
ff059b 80 09                               bra +9                ; IFff0594_end [ff05a6]
ff059d                 IFff0594_else:
ff059d                                 ;; ELSE
ff059d 5f bd 00 80 ff                      lda.w.a24 $ff8000,X   ; TextScreenBase
ff05a2 1f 69 00 04                         adc.w #$400
ff05a6                 IFff0594_end:
ff05a6 1f 85 fe                            sta.w $fe             ; TXTPTR
ff05a9 a9 a0                               lda #$a0
ff05ab a0 00                               ldy #$0
ff05ad                 loop_clear_char:
ff05ad 91 fe                               sta ($fe),Y           ; TXTPTR
ff05af c8                                  iny
ff05b0 c0 28                               cpy #$28
ff05b2 d0 f9                               bne -7                ; loop_clear_char [ff05ad]
ff05b4 e8                                  inx
ff05b5 e8                                  inx
ff05b6 e0 30                               cpx #$30
ff05b8 d0 d7                               bne -41               ; loop_clear_line [ff0591]
ff05ba 4f 60                               rts.a24

ff05bc ; SUB NextLine:
ff05bc ad ff 03                            lda $03ff             ; TXTROW
ff05bf c9 17                               cmp #$17
ff05c1                                 ;; IF < {
ff05c1 b0 0f                               bcs +15               ; IFff05c1_else [ff05d2]
ff05c3 ee ff 03                            inc $03ff             ; TXTROW
ff05c6 4f 20 c3 03 ff                      jsr.a24 $ff03c3       ; ScreenBase
ff05cb a9 00                               lda #$0
ff05cd 8d fe 03                            sta $03fe             ; TXTPOS
ff05d0 80 11                               bra +17               ; IFff05c1_end [ff05e3]
ff05d2                 IFff05c1_else:
ff05d2                                 ;; ELSE
ff05d2 a2 02                               ldx #$2
ff05d4 4f 20 e5 05 ff                      jsr.a24 $ff05e5       ; ScrollScreen
ff05d9 a9 17                               lda #$17
ff05db 8d ff 03                            sta $03ff             ; TXTROW
ff05de a9 00                               lda #$0
ff05e0 8d fe 03                            sta $03fe             ; TXTPOS
ff05e3                 IFff05c1_end:
ff05e3 4f 60                               rts.a24

ff05e5 ; SUB ScrollScreen:
ff05e5 2b                                  xsl
ff05e6                 loop_scroll_line:
ff05e6 5f bd 00 80 ff                      lda.w.a24 $ff8000,X   ; TextScreenBase
ff05eb 1f 85 fe                            sta.w $fe             ; TXTPTR
ff05ee 5f bd 02 80 ff                      lda.w.a24 $ff8002,X   ; TextScreenBase
ff05f3 1f 85 00                            sta.w $00
ff05f6 a0 00                               ldy #$0
ff05f8                 loop_scroll_char:
ff05f8 b1 00                               lda ($00),Y
ff05fa 91 fe                               sta ($fe),Y           ; TXTPTR
ff05fc c8                                  iny
ff05fd c0 28                               cpy #$28
ff05ff d0 f7                               bne -9                ; loop_scroll_char [ff05f8]
ff0601 e8                                  inx
ff0602 e8                                  inx
ff0603 e0 2e                               cpx #$2e
ff0605 d0 df                               bne -33               ; loop_scroll_line [ff05e6]
ff0607                 scroll_clear_last_line:
ff0607 5f bd 00 80 ff                      lda.w.a24 $ff8000,X   ; TextScreenBase
ff060c 1f 85 fe                            sta.w $fe             ; TXTPTR
ff060f 1f a9 a0 a0                         lda.w #$a0a0
ff0613 a0 00                               ldy #$0
ff0615                 loop_scroll_clear_line:
ff0615 1f 91 fe                            sta.w ($fe),Y         ; TXTPTR
ff0618 c8                                  iny
ff0619 c8                                  iny
ff061a c0 28                               cpy #$28
ff061c d0 f7                               bne -9                ; loop_scroll_clear_line [ff0615]
ff061e                 done_with_scroll:
ff061e 4f 60                               rts.a24

ff0620 ; SUB ClearInputBuffers:
ff0620 a9 00                               lda #$0
ff0622                 FORff0622_start:
ff0622                                 ;; FOR X = 0 TO 255 {
ff0622 a2 00                               ldx #$0
ff0624                 FORff0622_loop:
ff0624 9d 00 02                            sta $0200,X           ; TXTBUFFER
ff0627 e8                                  inx
ff0628 e0 00                               cpx #$100
ff062a d0 f8                               bne -8                ; FORff0622_loop [ff0624]
ff062c                 FORff0622_end:
ff062c 4f 60                               rts.a24

ff062e ; SUB ClearCurrentInputBuffer:
ff062e a9 00                               lda #$0
ff0630                 FORff0630_start:
ff0630                                 ;; FOR X = 0 TO 127 {
ff0630 a2 00                               ldx #$0
ff0632                 FORff0630_loop:
ff0632 9d 00 02                            sta $0200,X           ; TXTBUFFER
ff0635 e8                                  inx
ff0636 e0 80                               cpx #$80
ff0638 d0 f8                               bne -8                ; FORff0630_loop [ff0632]
ff063a                 FORff0630_end:
ff063a 4f 60                               rts.a24

ff063c ; SUB PrevToCurrentInputBuffer:
ff063c                 FORff063c_start:
ff063c                                 ;; FOR X = 0 TO 127 {
ff063c a2 00                               ldx #$0
ff063e                 FORff063c_loop:
ff063e bd 80 02                            lda $0280,X           ; TXTBUFFER2
ff0641 9d 00 02                            sta $0200,X           ; TXTBUFFER
ff0644 e8                                  inx
ff0645 e0 80                               cpx #$80
ff0647 d0 f5                               bne -11               ; FORff063c_loop [ff063e]
ff0649                 FORff063c_end:
ff0649 4f 60                               rts.a24

ff064b ; SUB CurrentToPrevInputBuffer:
ff064b                 FORff064b_start:
ff064b                                 ;; FOR X = 0 TO 127 {
ff064b a2 00                               ldx #$0
ff064d                 FORff064b_loop:
ff064d bd 00 02                            lda $0200,X           ; TXTBUFFER
ff0650 9d 80 02                            sta $0280,X           ; TXTBUFFER2
ff0653 e8                                  inx
ff0654 e0 80                               cpx #$80
ff0656 d0 f5                               bne -11               ; FORff064b_loop [ff064d]
ff0658                 FORff064b_end:
ff0658 4f 60                               rts.a24

ff065a ; SUB InputBufferToTextScreen:
ff065a a0 01                               ldy #$1
ff065c                 FORff065c_start:
ff065c                                 ;; FOR X = 0 TO 39 {
ff065c a2 00                               ldx #$0
ff065e                 FORff065c_loop:
ff065e bd 00 02                            lda $0200,X           ; TXTBUFFER
ff0661                                 ;; IF == 0 {
ff0661 c9 00                               cmp #$0
ff0663 d0 07                               bne +7                ; IFff0661_end [ff066c]
ff0665 8c fe 03                            sty $03fe             ; TXTPOS
ff0668                                 ;; BREAK
ff0668 4f 80 0a 00                         bra.a24 +10           ; forff065c_end [ff0676]
ff066c                 IFff0661_end:
ff066c 09 80                               ora #$80
ff066e 91 fe                               sta ($fe),Y           ; TXTPTR
ff0670 c8                                  iny
ff0671 e8                                  inx
ff0672 e0 28                               cpx #$28
ff0674 d0 e8                               bne -24               ; FORff065c_loop [ff065e]
ff0676                 FORff065c_end:
ff0676 a9 a0                               lda #$a0
ff0678                 LOOPff0678_start:
ff0678                                 ;; LOOP {
ff0678                 LOOPff0678_loop:
ff0678 c0 28                               cpy #$28
ff067a                                 ;; IF == {
ff067a d0 04                               bne +4                ; IFff067a_end [ff0680]
ff067c                                 ;; BREAK
ff067c 4f 80 05 00                         bra.a24 +5            ; loopff0678_end [ff0685]
ff0680                 IFff067a_end:
ff0680 91 fe                               sta ($fe),Y           ; TXTPTR
ff0682 c8                                  iny
ff0683 80 f3                               bra -13               ; LOOPff0678_loop [ff0678]
ff0685                 LOOPff0678_end:
ff0685 4f 60                               rts.a24

ff0687 ; SUB GetChar:
ff0687                 LOOPff0687_start:
ff0687                                 ;; LOOP {
ff0687                 LOOPff0687_loop:
ff0687 2c 00 c0                            bit $c000             ; KBD
ff068a                                 ;; IF - {
ff068a 10 04                               bpl +4                ; IFff068a_end [ff0690]
ff068c                                 ;; BREAK
ff068c 4f 80 02 00                         bra.a24 +2            ; loopff0687_end [ff0692]
ff0690                 IFff068a_end:
ff0690 80 f5                               bra -11               ; LOOPff0687_loop [ff0687]
ff0692                 LOOPff0687_end:
ff0692 ad 00 c0                            lda $c000             ; KBD
ff0695 2c 10 c0                            bit $c010             ; KBDSTRB
ff0698 4f 60                               rts.a24

ff069a ; SUB AppleII4:
ff069a                 FORff069a_start:
ff069a                                 ;; FOR X = 0 TO 39 {
ff069a a2 00                               ldx #$0
ff069c                 FORff069a_loop:
ff069c 4f bd 30 80 ff                      lda.a24 $ff8030,X     ; Hello
ff06a1 f0 0a                               beq +10               ; forff069a_end [ff06ad]
ff06a3 09 80                               ora #$80
ff06a5 9d 00 04                            sta $0400,X
ff06a8 e8                                  inx
ff06a9 e0 28                               cpx #$28
ff06ab d0 ef                               bne -17               ; FORff069a_loop [ff069c]
ff06ad                 FORff069a_end:
ff06ad 4f 60                               rts.a24

ff06af ; SUB DoHelp:
000004          ; VAR @I
000005          ; VAR @I6
000006          ; VAR @COL
ff06af 4f 20 bc 05 ff                      jsr.a24 $ff05bc       ; NextLine
ff06b4 2f a9 3a 80 ff                      lda.t #$ff803a        ; CommandListStr
ff06b9 2f 85 20                            sta.t $20             ; ARGT0
ff06bc 4f 20 ac 04 ff                      jsr.a24 $ff04ac       ; PrintString
ff06c1 4f 20 bc 05 ff                      jsr.a24 $ff05bc       ; NextLine
ff06c6                       ;; M@$4 = 1 
ff06c6 2f 85 00                            sta.t $00
ff06c9 a9 01                               lda #$1
ff06cb 85 04                               sta $04
ff06cd 2f a5 00                            lda.t $00
ff06d0                       ;; M@$6 = 0 
ff06d0 2f 85 00                            sta.t $00
ff06d3 a9 00                               lda #$0
ff06d5 85 06                               sta $06
ff06d7 2f a5 00                            lda.t $00
ff06da                 DOff06da_start:
ff06da                                 ;; DO {
ff06da                 DOff06da_loop:
ff06da 4f 20 d8 04 ff                      jsr.a24 $ff04d8       ; PrintSpace
ff06df a5 04                               lda $04               ; I
ff06e1                       ;; A <<= 2 
ff06e1 0a                                  asl
ff06e2 0a                                  asl
ff06e3 85 05                               sta $05               ; I6
ff06e5 a5 04                               lda $04               ; I
ff06e7                       ;; A <<= 1 
ff06e7 0a                                  asl
ff06e8 18                                  clc
ff06e9 65 05                               adc $05               ; I6
ff06eb 85 05                               sta $05               ; I6
ff06ed aa                                  tax
ff06ee 6f bd f1 80 ff                      lda.t.a24 $ff80f1,X   ; CommandList
ff06f3 2f 85 20                            sta.t $20             ; ARGT0
ff06f6 4f 20 ac 04 ff                      jsr.a24 $ff04ac       ; PrintString
ff06fb a5 06                               lda $06               ; COL
ff06fd                                 ;; IF == {
ff06fd d0 13                               bne +19               ; IFff06fd_else [ff0712]
ff06ff                       ;; M@$6 = 1 
ff06ff 85 00                               sta $00
ff0701 a9 01                               lda #$1
ff0703 85 06                               sta $06
ff0705 a5 00                               lda $00
ff0707                       ;; M@$3fe = 12 
ff0707 85 00                               sta $00
ff0709 a9 0c                               lda #$c
ff070b 8d fe 03                            sta $03fe
ff070e a5 00                               lda $00
ff0710 80 26                               bra +38               ; IFff06fd_end [ff0738]
ff0712                 IFff06fd_else:
ff0712                                 ;; ELSE
ff0712                                 ;; IF == 1 {
ff0712 c9 01                               cmp #$1
ff0714 d0 11                               bne +17               ; IFff0712_end [ff0727]
ff0716                       ;; M@$6 = 2 
ff0716 85 00                               sta $00
ff0718 a9 02                               lda #$2
ff071a 85 06                               sta $06
ff071c a5 00                               lda $00
ff071e                       ;; M@$3fe = 24 
ff071e 85 00                               sta $00
ff0720 a9 18                               lda #$18
ff0722 8d fe 03                            sta $03fe
ff0725 a5 00                               lda $00
ff0727                 IFff0712_end:
ff0727                                 ;; IF == 2 {
ff0727 c9 02                               cmp #$2
ff0729 d0 0d                               bne +13               ; IFff0727_end [ff0738]
ff072b                       ;; M@$6 = 0 
ff072b 85 00                               sta $00
ff072d a9 00                               lda #$0
ff072f 85 06                               sta $06
ff0731 a5 00                               lda $00
ff0733 4f 20 bc 05 ff                      jsr.a24 $ff05bc       ; NextLine
ff0738                 IFff0727_end:
ff0738                 IFff06fd_end:
ff0738                       ;; M@$4 += 1 
ff0738 85 00                               sta $00
ff073a 18                                  clc
ff073b a5 04                               lda $04
ff073d 69 01                               adc #$1
ff073f 85 04                               sta $04
ff0741 a5 00                               lda $00
ff0743 a5 04                               lda $04               ; I
ff0745                                 ;; WHILE <= 11
ff0745 c9 0b                               cmp #$b
ff0747 f0 02                               beq +2                ; DOff06da_end_eq [ff074b]
ff0749 b0 02                               bcs +2                ; DOff06da_end [ff074d]
ff074b                 DOff06da_end_eq:
ff074b 80 8d                               bra -115              ; DOff06da_loop [ff06da]
ff074d                 DOff06da_end:
ff074d 4f 20 bc 05 ff                      jsr.a24 $ff05bc       ; NextLine
ff0752 4f 20 bc 05 ff                      jsr.a24 $ff05bc       ; NextLine
ff0757 4f 60                               rts.a24

ff0759 ; SUB DoAscii:
000004          ; VAR @I
000005          ; VAR @J
000003          ; VAR @C
ff0759 4f 20 bc 05 ff                      jsr.a24 $ff05bc       ; NextLine
ff075e 2f a9 44 80 ff                      lda.t #$ff8044        ; ASCIIHeaderStr
ff0763 2f 85 20                            sta.t $20             ; ARGT0
ff0766 4f 20 ac 04 ff                      jsr.a24 $ff04ac       ; PrintString
ff076b 4f 20 bc 05 ff                      jsr.a24 $ff05bc       ; NextLine
ff0770 2f a9 57 80 ff                      lda.t #$ff8057        ; ASCIIDashesStr
ff0775 2f 85 20                            sta.t $20             ; ARGT0
ff0778 4f 20 ac 04 ff                      jsr.a24 $ff04ac       ; PrintString
ff077d 4f 20 bc 05 ff                      jsr.a24 $ff05bc       ; NextLine
ff0782                 FORff0782_start:
ff0782                                 ;; FOR @I = 0 TO 15 {
ff0782 a2 00                               ldx #$0
ff0784 86 04                               stx $04
ff0786                 FORff0782_loop:
ff0786 a5 04                               lda $04               ; I
ff0788 4f 20 97 04 ff                      jsr.a24 $ff0497       ; PrintHexDigit
ff078d a9 ad                               lda #$ad
ff078f 4f 20 ca 04 ff                      jsr.a24 $ff04ca       ; PrintChar
ff0794                 FORff0794_start:
ff0794                                 ;; FOR @J = 0 TO 15 {
ff0794 a2 00                               ldx #$0
ff0796 86 05                               stx $05
ff0798                 FORff0794_loop:
ff0798 a5 03                               lda $03               ; C
ff079a 4f 20 ca 04 ff                      jsr.a24 $ff04ca       ; PrintChar
ff079f e6 03                               inc $03               ; C
ff07a1 e6 05                               inc $05
ff07a3 a6 05                               ldx $05
ff07a5 e0 10                               cpx #$10
ff07a7 d0 ef                               bne -17               ; FORff0794_loop [ff0798]
ff07a9                 FORff0794_end:
ff07a9 4f 20 bc 05 ff                      jsr.a24 $ff05bc       ; NextLine
ff07ae e6 04                               inc $04
ff07b0 a6 04                               ldx $04
ff07b2 e0 10                               cpx #$10
ff07b4 d0 d0                               bne -48               ; FORff0782_loop [ff0786]
ff07b6                 FORff0782_end:
ff07b6 2f a9 57 80 ff                      lda.t #$ff8057        ; ASCIIDashesStr
ff07bb 2f 85 20                            sta.t $20             ; ARGT0
ff07be 4f 20 ac 04 ff                      jsr.a24 $ff04ac       ; PrintString
ff07c3 4f 20 bc 05 ff                      jsr.a24 $ff05bc       ; NextLine
ff07c8 4f 60                               rts.a24

ff07ca ; SUB DoCatalog:
ff07ca 4f 20 bc 05 ff                      jsr.a24 $ff05bc       ; NextLine
ff07cf 2f a9 6a 80 ff                      lda.t #$ff806a        ; CatalogHeaderStr
ff07d4 2f 85 20                            sta.t $20             ; ARGT0
ff07d7 4f 20 ac 04 ff                      jsr.a24 $ff04ac       ; PrintString
ff07dc 4f 20 7d 09 ff                      jsr.a24 $ff097d       ; Disk4Name
ff07e1 4f 20 ac 04 ff                      jsr.a24 $ff04ac       ; PrintString
ff07e6 4f 20 bc 05 ff                      jsr.a24 $ff05bc       ; NextLine
ff07eb 4f 20 95 09 ff                      jsr.a24 $ff0995       ; Disk4CatalogStart
ff07f0                                 ;; IF != {
ff07f0 f0 07                               beq +7                ; IFff07f0_end [ff07f9]
ff07f2 4f 20 b7 09 ff                      jsr.a24 $ff09b7       ; Disk4PrintError
ff07f7 4f 60                               rts.a24
ff07f9                 IFff07f0_end:
ff07f9 4f 20 bc 05 ff                      jsr.a24 $ff05bc       ; NextLine
ff07fe                 LOOPff07fe_start:
ff07fe                                 ;; LOOP {
ff07fe                 LOOPff07fe_loop:
ff07fe 4f 20 9f 09 ff                      jsr.a24 $ff099f       ; Disk4CatalogNext
ff0803                                 ;; IF != {
ff0803 f0 04                               beq +4                ; IFff0803_end [ff0809]
ff0805                                 ;; BREAK
ff0805 4f 80 4b 00                         bra.a24 +75           ; loopff07fe_end [ff0854]
ff0809                 IFff0803_end:
ff0809 a9 02                               lda #$2
ff080b 8d fe 03                            sta $03fe             ; TXTPOS
ff080e ad 00 c8                            lda $c800             ; DISK4_RAM
ff0811 4f 20 ca 04 ff                      jsr.a24 $ff04ca       ; PrintChar
ff0816 ad 01 c8                            lda $c801             ; DISK4_RAM
ff0819 4f 20 ca 04 ff                      jsr.a24 $ff04ca       ; PrintChar
ff081e ad 02 c8                            lda $c802             ; DISK4_RAM
ff0821 4f 20 ca 04 ff                      jsr.a24 $ff04ca       ; PrintChar
ff0826 a9 06                               lda #$6
ff0828 8d fe 03                            sta $03fe             ; TXTPOS
ff082b ad 03 c8                            lda $c803             ; DISK4_RAM
ff082e 4f 20 ca 04 ff                      jsr.a24 $ff04ca       ; PrintChar
ff0833 ad 04 c8                            lda $c804             ; DISK4_RAM
ff0836 4f 20 ca 04 ff                      jsr.a24 $ff04ca       ; PrintChar
ff083b ad 05 c8                            lda $c805             ; DISK4_RAM
ff083e 4f 20 ca 04 ff                      jsr.a24 $ff04ca       ; PrintChar
ff0843 a9 0a                               lda #$a
ff0845 8d fe 03                            sta $03fe             ; TXTPOS
ff0848 4f 20 ac 04 ff                      jsr.a24 $ff04ac       ; PrintString
ff084d 4f 20 bc 05 ff                      jsr.a24 $ff05bc       ; NextLine
ff0852 80 aa                               bra -86               ; LOOPff07fe_loop [ff07fe]
ff0854                 LOOPff07fe_end:
ff0854 4f 20 bc 05 ff                      jsr.a24 $ff05bc       ; NextLine
ff0859 4f 60                               rts.a24

ff085b ; SUB DoClear:
ff085b a2 02                               ldx #$2
ff085d 4f 20 8f 05 ff                      jsr.a24 $ff058f       ; ClearScreen
ff0862 a9 02                               lda #$2
ff0864 8d ff 03                            sta $03ff             ; TXTROW
ff0867 a9 00                               lda #$0
ff0869 8d fe 03                            sta $03fe             ; TXTPOS
ff086c 4f 60                               rts.a24

ff086e ; SUB DoEcho:
ff086e 1f a9 00 02                         lda.w #$200
ff0872 2f 85 20                            sta.t $20             ; ARGT0
ff0875 4f 20 ac 04 ff                      jsr.a24 $ff04ac       ; PrintString
ff087a a9 01                               lda #$1
ff087c 8d fd 03                            sta $03fd             ; TXTPAGE
ff087f 9c fe 03                            stz $03fe             ; TXTPOS
ff0882 a2 00                               ldx #$0
ff0884 4f 20 c3 03 ff                      jsr.a24 $ff03c3       ; ScreenBase
ff0889 4f 20 ac 04 ff                      jsr.a24 $ff04ac       ; PrintString
ff088e 9c fd 03                            stz $03fd             ; TXTPAGE
ff0891 ae ff 03                            ldx $03ff             ; TXTROW
ff0894 4f 20 c3 03 ff                      jsr.a24 $ff03c3       ; ScreenBase
ff0899 4f 20 bc 05 ff                      jsr.a24 $ff05bc       ; NextLine
ff089e 4f 60                               rts.a24

ff08a0 ; SUB DoMemory:
ff08a0 4f 20 bc 05 ff                      jsr.a24 $ff05bc       ; NextLine
ff08a5 a9 00                               lda #$0
ff08a7 4f 20 83 04 ff                      jsr.a24 $ff0483       ; PrintHexByte
ff08ac a9 ad                               lda #$ad
ff08ae 4f 20 ca 04 ff                      jsr.a24 $ff04ca       ; PrintChar
ff08b3 4f 20 d8 04 ff                      jsr.a24 $ff04d8       ; PrintSpace
ff08b8 a2 00                               ldx #$0
ff08ba                 loop_memory:
ff08ba b5 00                               lda $00,X
ff08bc 4f 20 83 04 ff                      jsr.a24 $ff0483       ; PrintHexByte
ff08c1 4f 20 d8 04 ff                      jsr.a24 $ff04d8       ; PrintSpace
ff08c6 e8                                  inx
ff08c7 e0 08                               cpx #$8
ff08c9 d0 ef                               bne -17               ; loop_memory [ff08ba]
ff08cb 4f 20 bc 05 ff                      jsr.a24 $ff05bc       ; NextLine
ff08d0 4f 60                               rts.a24

ff08d2 ; SUB DoReset:
ff08d2 ea                                  nop
ff08d3 4f 4c 00 02 ff                      jmp.a24 $ff0200       ; Reset

ff08d8 ; SUB DoText:
ff08d8 ad fd 03                            lda $03fd             ; TXTPAGE
ff08db                                 ;; IF == {
ff08db d0 03                               bne +3                ; IFff08db_end [ff08e0]
ff08dd ad 55 c0                            lda $c055             ; TXTPAGE2
ff08e0                 IFff08db_end:
ff08e0 4f 20 87 06 ff                      jsr.a24 $ff0687       ; GetChar
ff08e5 ad 54 c0                            lda $c054             ; TXTPAGE1
ff08e8 4f 20 bc 05 ff                      jsr.a24 $ff05bc       ; NextLine
ff08ed 4f 60                               rts.a24

ff08ef ; SUB Do2Plus:
ff08ef 8d 82 c0                            sta $c082             ; LANGCLR
ff08f2 fc                                  sws
ff08f3 a2 ff                               ldx #$ff
ff08f5 9a                                  txs
ff08f6 a9 00                               lda #$0
ff08f8 8d f4 03                            sta $03f4             ; PWREDUP
ff08fb 6c fc ff                            jmp ($fffc)           ; RSTVECTOR

ff08fe ; SUB DoZzz:
ff08fe 2f a9 a0 86 01                      lda.t #$186a0
ff0903 4f 20 71 04 ff                      jsr.a24 $ff0471       ; PrintHexWord
ff0908 4f 20 d8 04 ff                      jsr.a24 $ff04d8       ; PrintSpace
ff090d 2f a9 a0 86 01                      lda.t #$186a0
ff0912 4f 20 1f 05 ff                      jsr.a24 $ff051f       ; Wait
ff0917 4f 20 83 04 ff                      jsr.a24 $ff0483       ; PrintHexByte
ff091c 4f 20 d8 04 ff                      jsr.a24 $ff04d8       ; PrintSpace
ff0921 4f 20 d8 04 ff                      jsr.a24 $ff04d8       ; PrintSpace
ff0926 2f a9 40 0d 03                      lda.t #$30d40
ff092b 4f 20 52 04 ff                      jsr.a24 $ff0452       ; PrintHex24
ff0930 4f 20 d8 04 ff                      jsr.a24 $ff04d8       ; PrintSpace
ff0935 2f a9 40 0d 03                      lda.t #$30d40
ff093a 4f 20 1f 05 ff                      jsr.a24 $ff051f       ; Wait
ff093f 4f 20 83 04 ff                      jsr.a24 $ff0483       ; PrintHexByte
ff0944 4f 20 d8 04 ff                      jsr.a24 $ff04d8       ; PrintSpace
ff0949 4f 20 d8 04 ff                      jsr.a24 $ff04d8       ; PrintSpace
ff094e 2f a9 00 35 0c                      lda.t #$c3500
ff0953 4f 20 52 04 ff                      jsr.a24 $ff0452       ; PrintHex24
ff0958 4f 20 d8 04 ff                      jsr.a24 $ff04d8       ; PrintSpace
ff095d 2f a9 00 35 0c                      lda.t #$c3500
ff0962 4f 20 1f 05 ff                      jsr.a24 $ff051f       ; Wait
ff0967 4f 20 83 04 ff                      jsr.a24 $ff0483       ; PrintHexByte
ff096c 4f 20 d8 04 ff                      jsr.a24 $ff04d8       ; PrintSpace
ff0971 4f 20 d8 04 ff                      jsr.a24 $ff04d8       ; PrintSpace
ff0976 4f 20 bc 05 ff                      jsr.a24 $ff05bc       ; NextLine
ff097b 4f 60                               rts.a24

ff097d ; SUB Disk4Name:
ff097d a9 01                               lda #$1               ; DISK4_VOLUME_NAME
ff097f 8d f0 c0                            sta $c0f0             ; DISK4_CMD
ff0982 ad ff c0                            lda $c0ff             ; DISK4_GO
ff0985 85 00                               sta $00               ; R0
ff0987 ad 00 c7                            lda $c700             ; SLOT_7_ROM
ff098a 1f a9 00 c8                         lda.w #$c800          ; PR_RAM
ff098e 2f 85 20                            sta.t $20             ; ARGT0
ff0991 a5 00                               lda $00               ; R0
ff0993 4f 60                               rts.a24

ff0995 ; SUB Disk4CatalogStart:
ff0995 a9 02                               lda #$2               ; DISK4_CATALOG
ff0997 8d f0 c0                            sta $c0f0             ; DISK4_CMD
ff099a ad ff c0                            lda $c0ff             ; DISK4_GO
ff099d 4f 60                               rts.a24

ff099f ; SUB Disk4CatalogNext:
ff099f a9 03                               lda #$3               ; DISK4_CATALOG_NEXT
ff09a1 8d f0 c0                            sta $c0f0             ; DISK4_CMD
ff09a4 ad ff c0                            lda $c0ff             ; DISK4_GO
ff09a7 85 00                               sta $00               ; R0
ff09a9 ad 00 c7                            lda $c700             ; SLOT_7_ROM
ff09ac 1f a9 06 c8                         lda.w #$c806          ; PR_RAM
ff09b0 2f 85 20                            sta.t $20             ; ARGT0
ff09b3 a5 00                               lda $00               ; R0
ff09b5 4f 60                               rts.a24

ff09b7 ; SUB Disk4PrintError:
ff09b7 2f a9 77 80 ff                      lda.t #$ff8077        ; Disk4ErrorStr
ff09bc 2f 85 20                            sta.t $20             ; ARG0
ff09bf 4f 20 bc 05 ff                      jsr.a24 $ff05bc       ; NextLine
ff09c4 4f 20 ac 04 ff                      jsr.a24 $ff04ac       ; PrintString
ff09c9 4f 20 bc 05 ff                      jsr.a24 $ff05bc       ; NextLine
ff09ce 4f 20 bc 05 ff                      jsr.a24 $ff05bc       ; NextLine
ff09d3 4f 60                               rts.a24

; 30251 BYTES of FILLER

ff8000 ; DATA TextScreenBase:
ff8000 00 04
ff8002 80 04
ff8004 00 05
ff8006 80 05
ff8008 00 06
ff800a 80 06
ff800c 00 07
ff800e 80 07
ff8010 28 04
ff8012 a8 04
ff8014 28 05
ff8016 a8 05
ff8018 28 06
ff801a a8 06
ff801c 28 07
ff801e a8 07
ff8020 50 04
ff8022 d0 04
ff8024 50 05
ff8026 d0 05
ff8028 50 06
ff802a d0 06
ff802c 50 07
ff802e d0 07

ff8030 ; DATA Hello:
ff8030 41 70 70 6c 65 20 5d 5b 34 00

ff803a ; DATA CommandListStr:
ff803a 43 4f 4d 4d 41 4e 44 53 3a 00

ff8044 ; DATA ASCIIHeaderStr:
ff8044 20 20 30 31 32 33 34 35 36 37 38 39 41 42 43 44 45 46 00

ff8057 ; DATA ASCIIDashesStr:
ff8057 20 20 2d 2d 2d 2d 2d 2d 2d 2d 2d 2d 2d 2d 2d 2d 2d 2d 00

ff806a ; DATA CatalogHeaderStr:
ff806a 43 41 54 41 4c 4f 47 20 66 6f 72 20 00

ff8077 ; DATA Disk4ErrorStr:
ff8077 44 49 53 4b 34 20 45 52 52 4f 52 00

ff8083 ; DATA Disk4ErrorNotFoundStr:
ff8083 44 49 53 4b 34 3a 20 46 49 4c 45 20 4e 4f 54 20 46 4f 55 4e 44 00

ff8099 ; DATA Disk4ErrorReadStr:
ff8099 44 49 53 4b 34 3a 20 52 45 41 44 20 45 52 52 4f 52 00

ff80ab ; DATA BeepTimes:
ff80ab dc
ff80ac dc
ff80ad dc
ff80ae 3c
ff80af 3c
ff80b0 3c
ff80b1 3c
ff80b2 3c

ff80b3 ; DATA CMD_Help:
ff80b3 3f 00

ff80b5 ; DATA CMD_Ascii:
ff80b5 61 73 63 69 69 00

ff80bb ; DATA CMD_Beep:
ff80bb 62 65 65 70 00

ff80c0 ; DATA CMD_Catalog:
ff80c0 63 61 74 61 6c 6f 67 00

ff80c8 ; DATA CMD_Clear:
ff80c8 63 6c 65 61 72 00

ff80ce ; DATA CMD_Echo:
ff80ce 65 63 68 6f 00

ff80d3 ; DATA CMD_Memory:
ff80d3 6d 65 6d 6f 72 79 00

ff80da ; DATA CMD_Reset:
ff80da 72 65 73 65 74 00

ff80e0 ; DATA CMD_Text:
ff80e0 74 65 78 74 00

ff80e5 ; DATA CMD_Wait:
ff80e5 77 61 69 74 00

ff80ea ; DATA CMD_2Plus:
ff80ea 32 2b 00

ff80ed ; DATA CMD_Zzz:
ff80ed 7a 7a 7a 00

ff80f1 ; DATA CommandList:
ff80f1 b3 80 ff
ff80f4 af 06 ff
ff80f7 b5 80 ff
ff80fa 59 07 ff
ff80fd c0 80 ff
ff8100 ca 07 ff
ff8103 bb 80 ff
ff8106 02 05 ff
ff8109 c8 80 ff
ff810c 5b 08 ff
ff810f ce 80 ff
ff8112 6e 08 ff
ff8115 d3 80 ff
ff8118 a0 08 ff
ff811b da 80 ff
ff811e d2 08 ff
ff8121 e0 80 ff
ff8124 d8 08 ff
ff8127 e5 80 ff
ff812a 1f 05 ff
ff812d ea 80 ff
ff8130 ef 08 ff
ff8133 ed 80 ff
ff8136 fe 08 ff

; 32446 BYTES of FILLER

fffff7 ; DATA Vectors:
fffff7 00 00 00
fffffa 00 00 ff
fffffd 00 00 00

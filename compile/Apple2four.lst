000000          ; GLOBAL @R0
000001          ; GLOBAL @R1
000002          ; GLOBAL @R2
000003          ; GLOBAL @R3
000004          ; GLOBAL @R4
000005          ; GLOBAL @R5
000006          ; GLOBAL @R6
000007          ; GLOBAL @R7
000008          ; GLOBAL @R8
000009          ; GLOBAL @R9
00000a          ; GLOBAL @R10
00000b          ; GLOBAL @R11
00000c          ; GLOBAL @R12
00000d          ; GLOBAL @R13
00000e          ; GLOBAL @R14
00000f          ; GLOBAL @R15
000010          ; GLOBAL @R16
000011          ; GLOBAL @R17
000012          ; GLOBAL @R18
000013          ; GLOBAL @R19
000014          ; GLOBAL @R20
000015          ; GLOBAL @R21
000016          ; GLOBAL @R22
000017          ; GLOBAL @R23
000018          ; GLOBAL @R24
000019          ; GLOBAL @R25
00001a          ; GLOBAL @R26
00001b          ; GLOBAL @R27
00001c          ; GLOBAL @R28
00001d          ; GLOBAL @R29
00001e          ; GLOBAL @R30
00001f          ; GLOBAL @R31
000020          ; GLOBAL @ARG0
000021          ; GLOBAL @ARG1
000022          ; GLOBAL @ARG2
000023          ; GLOBAL @ARG3
000024          ; GLOBAL @ARG4
000025          ; GLOBAL @ARG5
000026          ; GLOBAL @ARG6
000027          ; GLOBAL @ARG7
000020-000021   ; GLOBAL @ARGW0
000022-000023   ; GLOBAL @ARGW1
000024-000025   ; GLOBAL @ARGW2
000026-000027   ; GLOBAL @ARGW3
000027-000028   ; GLOBAL @ARGW4
000029-00002a   ; GLOBAL @ARGW5
00002b-00002c   ; GLOBAL @ARGW6
00002d-00002e   ; GLOBAL @ARGW7
000020-000022   ; GLOBAL @ARGT0
000023-000024   ; GLOBAL @ARGT1
000026-000027   ; GLOBAL @ARGT2
000029-00002a   ; GLOBAL @ARGT3
00002c-00002d   ; GLOBAL @ARGT4
00002f-000030   ; GLOBAL @ARGT5
000031-000032   ; GLOBAL @ARGT6
000034-000035   ; GLOBAL @ARGT7
000007          ; GLOBAL @ARGN
0000fe          ; GLOBAL @TXTPTR
0003ff          ; GLOBAL @TXTROW
0003fe          ; GLOBAL @TXTPOS
000200          ; GLOBAL @TXTBUFFER
000280          ; GLOBAL @TXTBUFFER2
0003fd          ; GLOBAL @DISPMODE

ff0000 ; SUB Start:
ff0000 4f 4c 00 02 ff                      jmp.a24 $ff0200       ; Reset

ff0005 ; DATA ROMVectors:
ff0005 bb 06 ff
ff0008 2b 07 ff
ff000b 56 07 ff
ff000e 7f 07 ff
ff0011 66 06 ff
ff0014 74 06 ff
ff0017 32 06 ff
ff001a 9e 06 ff
ff001d 86 04 ff
ff0020 34 08 ff

; 477 BYTES of FILLER

ff0200 ; SUB Reset:
ff0200 d8                                  cld
ff0201 8d 83 c0                            sta $c083             ; LANGSET
ff0204 8d 83 c0                            sta $c083             ; LANGSET
ff0207 1f                                  r16
ff0208 fc                                  sws
ff0209 1f a2 ff fe                         ldx.w #$feff          ; TOP_OF_STACK
ff020d 1f 9a                               txs.w
ff020f ad 51 c0                            lda $c051             ; TXTSET
ff0212 ad 54 c0                            lda $c054             ; TXTPAGE1
ff0215 ad 58 c0                            lda $c058             ; SETAN0
ff0218 ad 5a c0                            lda $c05a             ; SETAN1
ff021b ad 5d c0                            lda $c05d             ; CLRAN2
ff021e ad 5f c0                            lda $c05f             ; CLRAN3
ff0221 ad ff cf                            lda $cfff             ; CLRROM
ff0224 2c 10 c0                            bit $c010             ; KBDSTRB
ff0227 a9 02                               lda #$2
ff0229 8d ff 03                            sta $03ff             ; TXTROW
ff022c 9c fe 03                            stz $03fe             ; TXTPOS
ff022f a2 00                               ldx #$0
ff0231 a9 01                               lda #$1               ; DISP_TEXT_2
ff0233 8d fd 03                            sta $03fd             ; DISPMODE
ff0236 4f 20 2b 07 ff                      jsr.a24 $ff072b       ; ClearScreen
ff023b 9c fd 03                            stz $03fd             ; DISPMODE
ff023e a2 00                               ldx #$0
ff0240 4f 20 2b 07 ff                      jsr.a24 $ff072b       ; ClearScreen
ff0245 4f 20 34 08 ff                      jsr.a24 $ff0834       ; AppleII4

ff024a ; SUB EchoKeys:
ff024a 4f 20 ba 07 ff                      jsr.a24 $ff07ba       ; ClearInputBuffers
ff024f                 LOOPff024f_start:
ff024f                                 ;; LOOP {
ff024f                 LOOPff024f_loop:
ff024f 4f 20 78 04 ff                      jsr.a24 $ff0478       ; ScreenBase
ff0254 ad fe 03                            lda $03fe             ; TXTPOS
ff0257                                 ;; IF == {
ff0257 d0 0c                               bne +12               ; IFff0257_end [ff0265]
ff0259 a9 ba                               lda #$ba
ff025b 4f 20 66 06 ff                      jsr.a24 $ff0666       ; PrintChar
ff0260 4f 20 84 06 ff                      jsr.a24 $ff0684       ; PrintCursor
ff0265                 IFff0257_end:
ff0265                 LOOPff0265_start:
ff0265                                 ;; LOOP {
ff0265                 LOOPff0265_loop:
ff0265 2c 00 c0                            bit $c000             ; KBD
ff0268                                 ;; IF - {
ff0268 10 04                               bpl +4                ; IFff0268_end [ff026e]
ff026a                                 ;; BREAK
ff026a 4f 80 02 00                         bra.a24 +2            ; loopff0265_end [ff0270]
ff026e                 IFff0268_end:
ff026e 80 f5                               bra -11               ; LOOPff0265_loop [ff0265]
ff0270                 LOOPff0265_end:
ff0270 ad 00 c0                            lda $c000             ; KBD
ff0273 2c 10 c0                            bit $c010             ; KBDSTRB
ff0276                                 ;; IF == 141 {
ff0276 c9 8d                               cmp #$8d
ff0278 d0 1b                               bne +27               ; IFff0276_end [ff0295]
ff027a 4f 20 91 06 ff                      jsr.a24 $ff0691       ; ClearCursor
ff027f 4f 20 56 07 ff                      jsr.a24 $ff0756       ; NextLine
ff0284 4f 20 e5 07 ff                      jsr.a24 $ff07e5       ; CurrentToPrevInputBuffer
ff0289 4f 20 2a 03 ff                      jsr.a24 $ff032a       ; CommandLine
ff028e 4f 20 c8 07 ff                      jsr.a24 $ff07c8       ; ClearCurrentInputBuffer
ff0293                                 ;; CONTINUE
ff0293 80 ba                               bra -70               ; loopff024f_start [ff024f]
ff0295                 IFff0276_end:
ff0295                                 ;; IF == 136 {
ff0295 c9 88                               cmp #$88
ff0297 d0 23                               bne +35               ; IFff0295_end [ff02bc]
ff0299                                 ;; IF > 1 {
ff0299 c9 01                               cmp #$1
ff029b f0 1d                               beq +29               ; IFff0299_end [ff02ba]
ff029d 90 1b                               bcc +27               ; IFff0299_end [ff02ba]
ff029f 4f 20 91 06 ff                      jsr.a24 $ff0691       ; ClearCursor
ff02a4 a9 a0                               lda #$a0
ff02a6 ac fe 03                            ldy $03fe             ; TXTPOS
ff02a9 88                                  dey
ff02aa 91 fe                               sta ($fe),Y           ; TXTPTR
ff02ac 88                                  dey
ff02ad a9 00                               lda #$0
ff02af 99 00 02                            sta $0200,Y           ; TXTBUFFER
ff02b2 ce fe 03                            dec $03fe             ; TXTPOS
ff02b5 4f 20 84 06 ff                      jsr.a24 $ff0684       ; PrintCursor
ff02ba                 IFff0299_end:
ff02ba                                 ;; CONTINUE
ff02ba 80 93                               bra -109              ; loopff024f_start [ff024f]
ff02bc                 IFff0295_end:
ff02bc                                 ;; IF == 149 {
ff02bc c9 95                               cmp #$95
ff02be d0 0d                               bne +13               ; IFff02bc_end [ff02cd]
ff02c0                                 ;; IF > 1 {
ff02c0 c9 01                               cmp #$1
ff02c2 f0 07                               beq +7                ; IFff02c0_end [ff02cb]
ff02c4 90 05                               bcc +5                ; IFff02c0_end [ff02cb]
ff02c6 4f 20 17 04 ff                      jsr.a24 $ff0417       ; CompleteCommand
ff02cb                 IFff02c0_end:
ff02cb                                 ;; CONTINUE
ff02cb 80 82                               bra -126              ; loopff024f_start [ff024f]
ff02cd                 IFff02bc_end:
ff02cd                                 ;; IF == 139 {
ff02cd c9 8b                               cmp #$8b
ff02cf d0 13                               bne +19               ; IFff02cd_end [ff02e4]
ff02d1 4f 20 d6 07 ff                      jsr.a24 $ff07d6       ; PrevToCurrentInputBuffer
ff02d6 4f 20 f4 07 ff                      jsr.a24 $ff07f4       ; InputBufferToTextScreen
ff02db 4f 20 84 06 ff                      jsr.a24 $ff0684       ; PrintCursor
ff02e0                                 ;; CONTINUE
ff02e0 4f 80 6b ff                         bra.a24 -149          ; loopff024f_start [ff024f]
ff02e4                 IFff02cd_end:
ff02e4                                 ;; IF == 155 {
ff02e4 c9 9b                               cmp #$9b
ff02e6 d0 21                               bne +33               ; IFff02e4_end [ff0309]
ff02e8 ae ff 03                            ldx $03ff             ; TXTROW
ff02eb 4f 20 15 07 ff                      jsr.a24 $ff0715       ; ClearRow
ff02f0 4f 20 c8 07 ff                      jsr.a24 $ff07c8       ; ClearCurrentInputBuffer
ff02f5 a9 00                               lda #$0
ff02f7 8d fe 03                            sta $03fe             ; TXTPOS
ff02fa ad fd 03                            lda $03fd             ; DISPMODE
ff02fd                                 ;; IF != {
ff02fd f0 06                               beq +6                ; IFff02fd_end [ff0305]
ff02ff ad 54 c0                            lda $c054             ; TXTPAGE1
ff0302 9c fd 03                            stz $03fd             ; DISPMODE
ff0305                 IFff02fd_end:
ff0305                                 ;; CONTINUE
ff0305 4f 80 46 ff                         bra.a24 -186          ; loopff024f_start [ff024f]
ff0309                 IFff02e4_end:
ff0309                                 ;; IF > 159 {
ff0309 c9 9f                               cmp #$9f
ff030b f0 19                               beq +25               ; IFff0309_end [ff0326]
ff030d 90 17                               bcc +23               ; IFff0309_end [ff0326]
ff030f ac fe 03                            ldy $03fe             ; TXTPOS
ff0312 4f 20 66 06 ff                      jsr.a24 $ff0666       ; PrintChar
ff0317 c0 28                               cpy #$28
ff0319                                 ;; IF < {
ff0319 b0 0b                               bcs +11               ; IFff0319_end [ff0326]
ff031b 29 7f                               and #$7f
ff031d 88                                  dey
ff031e 99 00 02                            sta $0200,Y           ; TXTBUFFER
ff0321 4f 20 84 06 ff                      jsr.a24 $ff0684       ; PrintCursor
ff0326                 IFff0319_end:
ff0326                 IFff0309_end:
ff0326 4f 80 25 ff                         bra.a24 -219          ; LOOPff024f_loop [ff024f]
ff032a                 LOOPff024f_end:

ff032a ; SUB CommandLine:
000004          ; VAR @I
000005          ; VAR @I6
ff032a 1f a9 00 02                         lda.w #$200           ; TXTBUFFER
ff032e 2f 85 20                            sta.t $20             ; ARGT0
ff0331 a9 00                               lda #$0
ff0333 85 07                               sta $07               ; ARGN
ff0335 a0 03                               ldy #$3
ff0337 a2 00                               ldx #$0
ff0339                 LOOPff0339_start:
ff0339                                 ;; LOOP {
ff0339                 LOOPff0339_loop:
ff0339 bd 00 02                            lda $0200,X           ; TXTBUFFER
ff033c                                 ;; IF == 0 {
ff033c c9 00                               cmp #$0
ff033e d0 04                               bne +4                ; IFff033c_end [ff0344]
ff0340                                 ;; BREAK
ff0340 4f 80 3f 00                         bra.a24 +63           ; loopff0339_end [ff0383]
ff0344                 IFff033c_end:
ff0344 c9 20                               cmp #$20
ff0346                                 ;; IF == {
ff0346 d0 30                               bne +48               ; IFff0346_end [ff0378]
ff0348                 LOOPff0348_start:
ff0348                                 ;; LOOP {
ff0348                 LOOPff0348_loop:
ff0348 bd 00 02                            lda $0200,X           ; TXTBUFFER
ff034b                                 ;; IF == 0 {
ff034b c9 00                               cmp #$0
ff034d d0 04                               bne +4                ; IFff034b_end [ff0353]
ff034f                                 ;; BREAK
ff034f 4f 80 10 00                         bra.a24 +16           ; loopff0348_end [ff0363]
ff0353                 IFff034b_end:
ff0353 c9 20                               cmp #$20
ff0355                                 ;; IF == {
ff0355 d0 06                               bne +6                ; IFff0355_end [ff035d]
ff0357 a9 00                               lda #$0
ff0359 9d 00 02                            sta $0200,X           ; TXTBUFFER
ff035c e8                                  inx
ff035d                 IFff0355_end:
ff035d                                 ;; BREAK
ff035d 4f 80 02 00                         bra.a24 +2            ; loopff0348_end [ff0363]
ff0361 80 e5                               bra -27               ; LOOPff0348_loop [ff0348]
ff0363                 LOOPff0348_end:
ff0363 1f a9 00 02                         lda.w #$200           ; TXTBUFFER
ff0367 18                                  clc
ff0368 1f db                               adx.w
ff036a 2f 99 20 00                         sta.t $20,Y           ; ARGT0
ff036e c8                                  iny
ff036f c8                                  iny
ff0370 c8                                  iny
ff0371 e6 07                               inc $07               ; ARGN
ff0373 e8                                  inx
ff0374                                 ;; BREAK
ff0374 4f 80 0b 00                         bra.a24 +11           ; loopff0339_end [ff0383]
ff0378                 IFff0346_end:
ff0378 e8                                  inx
ff0379 e0 7f                               cpx #$7f
ff037b                                 ;; IF >= {
ff037b 90 04                               bcc +4                ; IFff037b_end [ff0381]
ff037d                                 ;; BREAK
ff037d 4f 80 02 00                         bra.a24 +2            ; loopff0339_end [ff0383]
ff0381                 IFff037b_end:
ff0381 80 b6                               bra -74               ; LOOPff0339_loop [ff0339]
ff0383                 LOOPff0339_end:
ff0383                 LOOPff0383_start:
ff0383                                 ;; LOOP {
ff0383                 LOOPff0383_loop:
ff0383 bd 00 02                            lda $0200,X           ; TXTBUFFER
ff0386                                 ;; IF == 0 {
ff0386 c9 00                               cmp #$0
ff0388 d0 04                               bne +4                ; IFff0386_end [ff038e]
ff038a                                 ;; BREAK
ff038a 4f 80 40 00                         bra.a24 +64           ; loopff0383_end [ff03ce]
ff038e                 IFff0386_end:
ff038e c9 2c                               cmp #$2c
ff0390                                 ;; IF == {
ff0390 d0 31                               bne +49               ; IFff0390_end [ff03c3]
ff0392 a9 00                               lda #$0
ff0394 9d 00 02                            sta $0200,X           ; TXTBUFFER
ff0397 e8                                  inx
ff0398                 LOOPff0398_start:
ff0398                                 ;; LOOP {
ff0398                 LOOPff0398_loop:
ff0398 bd 00 02                            lda $0200,X           ; TXTBUFFER
ff039b                                 ;; IF == 0 {
ff039b c9 00                               cmp #$0
ff039d d0 04                               bne +4                ; IFff039b_end [ff03a3]
ff039f                                 ;; BREAK
ff039f 4f 80 10 00                         bra.a24 +16           ; loopff0398_end [ff03b3]
ff03a3                 IFff039b_end:
ff03a3 c9 20                               cmp #$20
ff03a5                                 ;; IF == {
ff03a5 d0 06                               bne +6                ; IFff03a5_end [ff03ad]
ff03a7 a9 00                               lda #$0
ff03a9 9d 00 02                            sta $0200,X           ; TXTBUFFER
ff03ac e8                                  inx
ff03ad                 IFff03a5_end:
ff03ad                                 ;; BREAK
ff03ad 4f 80 02 00                         bra.a24 +2            ; loopff0398_end [ff03b3]
ff03b1 80 e5                               bra -27               ; LOOPff0398_loop [ff0398]
ff03b3                 LOOPff0398_end:
ff03b3 1f a9 00 02                         lda.w #$200           ; TXTBUFFER
ff03b7 18                                  clc
ff03b8 1f db                               adx.w
ff03ba 2f 99 20 00                         sta.t $20,Y           ; ARGT0
ff03be c8                                  iny
ff03bf c8                                  iny
ff03c0 c8                                  iny
ff03c1 e6 07                               inc $07               ; ARGN
ff03c3                 IFff0390_end:
ff03c3 e8                                  inx
ff03c4 e0 7f                               cpx #$7f
ff03c6                                 ;; IF >= {
ff03c6 90 04                               bcc +4                ; IFff03c6_end [ff03cc]
ff03c8                                 ;; BREAK
ff03c8 4f 80 02 00                         bra.a24 +2            ; loopff0383_end [ff03ce]
ff03cc                 IFff03c6_end:
ff03cc 80 b5                               bra -75               ; LOOPff0383_loop [ff0383]
ff03ce                 LOOPff0383_end:
ff03ce 2f a5 23                            lda.t $23             ; ARGT1
ff03d1 2f 85 1d                            sta.t $1d             ; R29
ff03d4                 FORff03d4_start:
ff03d4                                 ;; FOR @I = 0 TO 13 {
ff03d4 a2 00                               ldx #$0
ff03d6 86 04                               stx $04
ff03d8                 FORff03d4_loop:
ff03d8 a5 04                               lda $04               ; I
ff03da                       ;; A <<= 2 
ff03da 0a                                  asl
ff03db 0a                                  asl
ff03dc 85 05                               sta $05               ; I6
ff03de a5 04                               lda $04               ; I
ff03e0                       ;; A <<= 1 
ff03e0 0a                                  asl
ff03e1 18                                  clc
ff03e2 65 05                               adc $05               ; I6
ff03e4 85 05                               sta $05               ; I6
ff03e6 aa                                  tax
ff03e7 6f bd 89 81 ff                      lda.t.a24 $ff8189,X   ; CommandList
ff03ec 2f 85 23                            sta.t $23             ; ARGT1
ff03ef 4f 20 86 04 ff                      jsr.a24 $ff0486       ; CompareText
ff03f4                                 ;; IF - {
ff03f4 10 17                               bpl +23               ; IFff03f4_end [ff040d]
ff03f6 2f a5 1d                            lda.t $1d             ; R29
ff03f9 2f 85 23                            sta.t $23             ; ARGT1
ff03fc a6 05                               ldx $05               ; I6
ff03fe 6f bd 8c 81 ff                      lda.t.a24 $ff818c,X   ; CommandList
ff0403 2f 85 00                            sta.t $00             ; R0
ff0406 4f 5c 00 00 00                      jsr.a24 ($00)         ; R0
ff040b 4f 60                               rts.a24
ff040d                 IFff03f4_end:
ff040d e6 04                               inc $04
ff040f a6 04                               ldx $04
ff0411 e0 0e                               cpx #$e
ff0413 d0 c3                               bne -61               ; FORff03d4_loop [ff03d8]
ff0415                 FORff03d4_end:
ff0415 4f 60                               rts.a24

ff0417 ; SUB CompleteCommand:
000004          ; VAR @I
000005          ; VAR @I6
ff0417 1f a9 00 02                         lda.w #$200           ; TXTBUFFER
ff041b 2f 85 20                            sta.t $20             ; ARGT0
ff041e                 FORff041e_start:
ff041e                                 ;; FOR @I = 0 TO 13 {
ff041e a2 00                               ldx #$0
ff0420 86 04                               stx $04
ff0422                 FORff041e_loop:
ff0422 a5 04                               lda $04               ; I
ff0424                       ;; A <<= 2 
ff0424 0a                                  asl
ff0425 0a                                  asl
ff0426 85 05                               sta $05               ; I6
ff0428 a5 04                               lda $04               ; I
ff042a                       ;; A <<= 1 
ff042a 0a                                  asl
ff042b 18                                  clc
ff042c 65 05                               adc $05               ; I6
ff042e 85 05                               sta $05               ; I6
ff0430 aa                                  tax
ff0431 6f bd 89 81 ff                      lda.t.a24 $ff8189,X   ; CommandList
ff0436 2f 85 23                            sta.t $23             ; ARGT1
ff0439 4f 20 b0 04 ff                      jsr.a24 $ff04b0       ; CompareStartOfText
ff043e                                 ;; IF - {
ff043e 10 2e                               bpl +46               ; IFff043e_end [ff046e]
ff0440 a6 05                               ldx $05               ; I6
ff0442 6f bd 89 81 ff                      lda.t.a24 $ff8189,X   ; CommandList
ff0447 2f 85 20                            sta.t $20             ; ARGT0
ff044a 1f a9 00 02                         lda.w #$200           ; TXTBUFFER
ff044e 2f 85 23                            sta.t $23             ; ARGT1
ff0451 4f 20 cf 04 ff                      jsr.a24 $ff04cf       ; CopyString
ff0456 1f a5 fe                            lda.w $fe             ; TXTPTR
ff0459 1f 1a                               inc.w
ff045b 2f 85 23                            sta.t $23             ; ARGT1
ff045e 4f 20 e2 04 ff                      jsr.a24 $ff04e2       ; CopyStringHigh
ff0463 c8                                  iny
ff0464 8c fe 03                            sty $03fe             ; TXTPOS
ff0467 4f 20 84 06 ff                      jsr.a24 $ff0684       ; PrintCursor
ff046c 4f 60                               rts.a24
ff046e                 IFff043e_end:
ff046e e6 04                               inc $04
ff0470 a6 04                               ldx $04
ff0472 e0 0e                               cpx #$e
ff0474 d0 ac                               bne -84               ; FORff041e_loop [ff0422]
ff0476                 FORff041e_end:
ff0476 4f 60                               rts.a24

ff0478 ; SUB ScreenBase:
ff0478                       ;; X = M@$3ff 
ff0478 ae ff 03                            ldx $03ff
ff047b 2b                                  xsl
ff047c 5f bd 00 80 ff                      lda.w.a24 $ff8000,X   ; TextScreenBase
ff0481 1f 85 fe                            sta.w $fe             ; TXTPTR
ff0484 4f 60                               rts.a24

ff0486 ; SUB CompareText:
ff0486                 FORff0486_start:
ff0486                                 ;; FOR Y = 0 TO 127 {
ff0486 a0 00                               ldy #$0
ff0488                 FORff0486_loop:
ff0488 4f b1 20                            lda.a24 ($20),Y       ; ARGT0
ff048b 4f d1 23                            cmp.a24 ($23),Y       ; ARGT1
ff048e                                 ;; IF != {
ff048e f0 04                               beq +4                ; IFff048e_end [ff0494]
ff0490 a9 00                               lda #$0
ff0492 4f 60                               rts.a24
ff0494                 IFff048e_end:
ff0494                                 ;; IF == 0 {
ff0494 c9 00                               cmp #$0
ff0496 d0 0f                               bne +15               ; IFff0494_end [ff04a7]
ff0498 4f b1 23                            lda.a24 ($23),Y       ; ARGT1
ff049b                                 ;; IF == 0 {
ff049b c9 00                               cmp #$0
ff049d d0 04                               bne +4                ; IFff049b_end [ff04a3]
ff049f a9 ff                               lda #$ff
ff04a1 4f 60                               rts.a24
ff04a3                 IFff049b_end:
ff04a3 a9 00                               lda #$0
ff04a5 4f 60                               rts.a24
ff04a7                 IFff0494_end:
ff04a7 c8                                  iny
ff04a8 c0 80                               cpy #$80
ff04aa d0 dc                               bne -36               ; FORff0486_loop [ff0488]
ff04ac                 FORff0486_end:
ff04ac a9 00                               lda #$0
ff04ae 4f 60                               rts.a24

ff04b0 ; SUB CompareStartOfText:
ff04b0                 FORff04b0_start:
ff04b0                                 ;; FOR Y = 0 TO 127 {
ff04b0 a0 00                               ldy #$0
ff04b2                 FORff04b0_loop:
ff04b2 4f b1 20                            lda.a24 ($20),Y       ; ARGT0
ff04b5                                 ;; IF == 0 {
ff04b5 c9 00                               cmp #$0
ff04b7 d0 04                               bne +4                ; IFff04b5_end [ff04bd]
ff04b9 a9 ff                               lda #$ff
ff04bb 4f 60                               rts.a24
ff04bd                 IFff04b5_end:
ff04bd 4f d1 23                            cmp.a24 ($23),Y       ; ARGT1
ff04c0                                 ;; IF != {
ff04c0 f0 04                               beq +4                ; IFff04c0_end [ff04c6]
ff04c2 a9 00                               lda #$0
ff04c4 4f 60                               rts.a24
ff04c6                 IFff04c0_end:
ff04c6 c8                                  iny
ff04c7 c0 80                               cpy #$80
ff04c9 d0 e7                               bne -25               ; FORff04b0_loop [ff04b2]
ff04cb                 FORff04b0_end:
ff04cb a9 00                               lda #$0
ff04cd 4f 60                               rts.a24

ff04cf ; SUB CopyString:
ff04cf                 FORff04cf_start:
ff04cf                                 ;; FOR Y = 0 TO 127 {
ff04cf a0 00                               ldy #$0
ff04d1                 FORff04cf_loop:
ff04d1 4f b1 20                            lda.a24 ($20),Y       ; ARGT0
ff04d4                                 ;; IF == {
ff04d4 d0 02                               bne +2                ; IFff04d4_end [ff04d8]
ff04d6 4f 60                               rts.a24
ff04d8                 IFff04d4_end:
ff04d8 4f 91 23                            sta.a24 ($23),Y       ; ARGT1
ff04db c8                                  iny
ff04dc c0 80                               cpy #$80
ff04de d0 f1                               bne -15               ; FORff04cf_loop [ff04d1]
ff04e0                 FORff04cf_end:
ff04e0 4f 60                               rts.a24

ff04e2 ; SUB CopyStringHigh:
ff04e2                 FORff04e2_start:
ff04e2                                 ;; FOR Y = 0 TO 127 {
ff04e2 a0 00                               ldy #$0
ff04e4                 FORff04e2_loop:
ff04e4 4f b1 20                            lda.a24 ($20),Y       ; ARGT0
ff04e7                                 ;; IF == {
ff04e7 d0 02                               bne +2                ; IFff04e7_end [ff04eb]
ff04e9 4f 60                               rts.a24
ff04eb                 IFff04e7_end:
ff04eb 09 80                               ora #$80
ff04ed 4f 91 23                            sta.a24 ($23),Y       ; ARGT1
ff04f0 c8                                  iny
ff04f1 c0 80                               cpy #$80
ff04f3 d0 ef                               bne -17               ; FORff04e2_loop [ff04e4]
ff04f5                 FORff04e2_end:
ff04f5 4f 60                               rts.a24

ff04f7 ; SUB PrintHex24:
ff04f7 2f 48                               pha.t
ff04f9 2f 48                               pha.t
ff04fb 2f 1b                               sr8.t
ff04fd 2f 1b                               sr8.t
ff04ff 4f 20 28 05 ff                      jsr.a24 $ff0528       ; PrintHexByte
ff0504 2f 68                               pla.t
ff0506 1f 1b                               sr8.w
ff0508 4f 20 28 05 ff                      jsr.a24 $ff0528       ; PrintHexByte
ff050d 2f 68                               pla.t
ff050f 4f 20 28 05 ff                      jsr.a24 $ff0528       ; PrintHexByte
ff0514 4f 60                               rts.a24

ff0516 ; SUB PrintHexWord:
ff0516 1f 48                               pha.w
ff0518 1f 1b                               sr8.w
ff051a 4f 20 28 05 ff                      jsr.a24 $ff0528       ; PrintHexByte
ff051f 1f 68                               pla.w
ff0521 4f 20 28 05 ff                      jsr.a24 $ff0528       ; PrintHexByte
ff0526 4f 60                               rts.a24

ff0528 ; SUB PrintHexByte:
ff0528 48                                  pha
ff0529 4a                                  lsr
ff052a 4a                                  lsr
ff052b 4a                                  lsr
ff052c 4a                                  lsr
ff052d 4f 20 3c 05 ff                      jsr.a24 $ff053c       ; PrintHexDigit
ff0532 68                                  pla
ff0533 29 0f                               and #$f
ff0535 4f 20 3c 05 ff                      jsr.a24 $ff053c       ; PrintHexDigit
ff053a 4f 60                               rts.a24

ff053c ; SUB PrintHexDigit:
ff053c c9 0a                               cmp #$a
ff053e 90 05                               bcc +5                ; print_hex_digit_09 [ff0545]
ff0540 18                                  clc
ff0541 69 b7                               adc #$b7
ff0543 80 02                               bra +2                ; print_hex_digit [ff0547]
ff0545                 print_hex_digit_09:
ff0545 69 b0                               adc #$b0
ff0547                 print_hex_digit:
ff0547 ac fe 03                            ldy $03fe             ; TXTPOS
ff054a 91 fe                               sta ($fe),Y           ; TXTPTR
ff054c ee fe 03                            inc $03fe             ; TXTPOS
ff054f 4f 60                               rts.a24

ff0551 ; SUB ParseNumber:
ff0551 4f b2 20                            lda.a24 ($20)         ; ARGT0
ff0554 c9 24                               cmp #$24
ff0556                                 ;; IF == {
ff0556 d0 07                               bne +7                ; IFff0556_else [ff055f]
ff0558 4f 4c 64 05 ff                      jmp.a24 $ff0564       ; ParseHexNumber
ff055d 80 05                               bra +5                ; IFff0556_end [ff0564]
ff055f                 IFff0556_else:
ff055f                                 ;; ELSE
ff055f 4f 4c d3 05 ff                      jmp.a24 $ff05d3       ; ParseDecimalNumber
ff0564                 IFff0556_end:

ff0564 ; SUB ParseHexNumber:
000000-000002   ; VAR @VAL
ff0564 2f 64 00                            stz.t $00             ; VAL
ff0567 a0 01                               ldy #$1
ff0569                 LOOPff0569_start:
ff0569                                 ;; LOOP {
ff0569                 LOOPff0569_loop:
ff0569 4f b1 20                            lda.a24 ($20),Y       ; ARGT0
ff056c                                 ;; IF == {
ff056c d0 04                               bne +4                ; IFff056c_end [ff0572]
ff056e                                 ;; BREAK
ff056e 4f 80 5c 00                         bra.a24 +92           ; loopff0569_end [ff05ce]
ff0572                 IFff056c_end:
ff0572 2f a5 00                            lda.t $00             ; VAL
ff0575 2f 0a                               asl.t
ff0577 2f 0a                               asl.t
ff0579 2f 0a                               asl.t
ff057b 2f 0a                               asl.t
ff057d 2f 85 00                            sta.t $00             ; VAL
ff0580 4f b1 20                            lda.a24 ($20),Y       ; ARGT0
ff0583 c9 30                               cmp #$30
ff0585                                 ;; IF >= {
ff0585 90 41                               bcc +65               ; IFff0585_end [ff05c8]
ff0587 c9 39                               cmp #$39
ff0589                                 ;; IF <= {
ff0589 f0 02                               beq +2                ; IFff0589_end_eq [ff058d]
ff058b b0 0d                               bcs +13               ; IFff0589_end [ff059a]
ff058d                 IFff0589_end_eq:
ff058d 38                                  sec
ff058e e9 30                               sbc #$30
ff0590 18                                  clc
ff0591 2f 65 00                            adc.t $00             ; VAL
ff0594 2f 85 00                            sta.t $00             ; VAL
ff0597 c8                                  iny
ff0598                                 ;; CONTINUE
ff0598 80 cf                               bra -49               ; loopff0569_start [ff0569]
ff059a                 IFff0589_end:
ff059a c9 41                               cmp #$41
ff059c                                 ;; IF >= {
ff059c 90 2a                               bcc +42               ; IFff059c_end [ff05c8]
ff059e c9 47                               cmp #$47
ff05a0                                 ;; IF <= {
ff05a0 f0 02                               beq +2                ; IFff05a0_end_eq [ff05a4]
ff05a2 b0 0d                               bcs +13               ; IFff05a0_end [ff05b1]
ff05a4                 IFff05a0_end_eq:
ff05a4 38                                  sec
ff05a5 e9 37                               sbc #$37
ff05a7 18                                  clc
ff05a8 2f 65 00                            adc.t $00             ; VAL
ff05ab 2f 85 00                            sta.t $00             ; VAL
ff05ae c8                                  iny
ff05af                                 ;; CONTINUE
ff05af 80 b8                               bra -72               ; loopff0569_start [ff0569]
ff05b1                 IFff05a0_end:
ff05b1 c9 61                               cmp #$61
ff05b3                                 ;; IF >= {
ff05b3 90 13                               bcc +19               ; IFff05b3_end [ff05c8]
ff05b5 c9 67                               cmp #$67
ff05b7                                 ;; IF <= {
ff05b7 f0 02                               beq +2                ; IFff05b7_end_eq [ff05bb]
ff05b9 b0 0d                               bcs +13               ; IFff05b7_end [ff05c8]
ff05bb                 IFff05b7_end_eq:
ff05bb 38                                  sec
ff05bc e9 57                               sbc #$57
ff05be 18                                  clc
ff05bf 2f 65 00                            adc.t $00             ; VAL
ff05c2 2f 85 00                            sta.t $00             ; VAL
ff05c5 c8                                  iny
ff05c6                                 ;; CONTINUE
ff05c6 80 a1                               bra -95               ; loopff0569_start [ff0569]
ff05c8                 IFff05b7_end:
ff05c8                 IFff05b3_end:
ff05c8                 IFff059c_end:
ff05c8                 IFff0585_end:
ff05c8                                 ;; BREAK
ff05c8 4f 80 02 00                         bra.a24 +2            ; loopff0569_end [ff05ce]
ff05cc 80 9b                               bra -101              ; LOOPff0569_loop [ff0569]
ff05ce                 LOOPff0569_end:
ff05ce 2f a5 00                            lda.t $00             ; VAL
ff05d1 4f 60                               rts.a24

ff05d3 ; SUB ParseDecimalNumber:
000000-000002   ; VAR @VAL
ff05d3 2f 64 00                            stz.t $00             ; VAL
ff05d6 a0 00                               ldy #$0
ff05d8                 LOOPff05d8_start:
ff05d8                                 ;; LOOP {
ff05d8                 LOOPff05d8_loop:
ff05d8 4f b1 20                            lda.a24 ($20),Y       ; ARGT0
ff05db                                 ;; IF == {
ff05db d0 04                               bne +4                ; IFff05db_end [ff05e1]
ff05dd                                 ;; BREAK
ff05dd 4f 80 2b 00                         bra.a24 +43           ; loopff05d8_end [ff060c]
ff05e1                 IFff05db_end:
ff05e1 2f a5 00                            lda.t $00             ; VAL
ff05e4 4f 20 11 06 ff                      jsr.a24 $ff0611       ; Times10
ff05e9 2f 85 00                            sta.t $00             ; VAL
ff05ec 4f b1 20                            lda.a24 ($20),Y       ; ARGT0
ff05ef c9 30                               cmp #$30
ff05f1                                 ;; IF >= {
ff05f1 90 17                               bcc +23               ; IFff05f1_end [ff060a]
ff05f3 c9 39                               cmp #$39
ff05f5                                 ;; IF <= {
ff05f5 f0 02                               beq +2                ; IFff05f5_end_eq [ff05f9]
ff05f7 b0 0d                               bcs +13               ; IFff05f5_end [ff0606]
ff05f9                 IFff05f5_end_eq:
ff05f9 38                                  sec
ff05fa e9 30                               sbc #$30
ff05fc 18                                  clc
ff05fd 2f 65 00                            adc.t $00             ; VAL
ff0600 2f 85 00                            sta.t $00             ; VAL
ff0603 c8                                  iny
ff0604                                 ;; CONTINUE
ff0604 80 d2                               bra -46               ; loopff05d8_start [ff05d8]
ff0606                 IFff05f5_end:
ff0606                                 ;; BREAK
ff0606 4f 80 02 00                         bra.a24 +2            ; loopff05d8_end [ff060c]
ff060a                 IFff05f1_end:
ff060a 80 cc                               bra -52               ; LOOPff05d8_loop [ff05d8]
ff060c                 LOOPff05d8_end:
ff060c 2f a5 00                            lda.t $00             ; VAL
ff060f 4f 60                               rts.a24

ff0611 ; SUB Times10:
ff0611 2f 0a                               asl.t
ff0613 2f aa                               tax.t
ff0615 2f 0a                               asl.t
ff0617 2f 0a                               asl.t
ff0619 18                                  clc
ff061a 2f db                               adx.t
ff061c 4f 60                               rts.a24

ff061e ; SUB Modulo:
00000c-00000e   ; VAR @MODULO
ff061e 2f 86 0c                            stx.t $0c             ; MODULO
ff0621 a0 00                               ldy #$0
ff0623                 LOOPff0623_start:
ff0623                                 ;; LOOP {
ff0623                 LOOPff0623_loop:
ff0623 38                                  sec
ff0624 2f e5 0c                            sbc.t $0c             ; MODULO
ff0627                                 ;; IF - {
ff0627 10 06                               bpl +6                ; IFff0627_end [ff062f]
ff0629 18                                  clc
ff062a 2f 65 0c                            adc.t $0c             ; MODULO
ff062d 4f 60                               rts.a24
ff062f                 IFff0627_end:
ff062f c8                                  iny
ff0630 80 f1                               bra -15               ; LOOPff0623_loop [ff0623]
ff0632                 LOOPff0623_end:

ff0632 ; SUB PrintString:
ff0632                 FORff0632_start:
ff0632                                 ;; FOR X = 0 TO 39 {
ff0632 a2 00                               ldx #$0
ff0634                 FORff0632_loop:
ff0634 8a                                  txa
ff0635 a8                                  tay
ff0636 4f b1 20                            lda.a24 ($20),Y       ; ARGT0
ff0639 f0 13                               beq +19               ; forff0632_end [ff064e]
ff063b 09 80                               ora #$80
ff063d ac fe 03                            ldy $03fe             ; TXTPOS
ff0640 c0 28                               cpy #$28
ff0642                                 ;; IF < {
ff0642 b0 05                               bcs +5                ; IFff0642_end [ff0649]
ff0644 91 fe                               sta ($fe),Y           ; TXTPTR
ff0646 ee fe 03                            inc $03fe             ; TXTPOS
ff0649                 IFff0642_end:
ff0649 e8                                  inx
ff064a e0 28                               cpx #$28
ff064c d0 e6                               bne -26               ; FORff0632_loop [ff0634]
ff064e                 FORff0632_end:
ff064e 4f 60                               rts.a24

ff0650 ; SUB PrintError:
ff0650 4f 20 56 07 ff                      jsr.a24 $ff0756       ; NextLine
ff0655 4f 20 32 06 ff                      jsr.a24 $ff0632       ; PrintString
ff065a 4f 20 56 07 ff                      jsr.a24 $ff0756       ; NextLine
ff065f 4f 20 56 07 ff                      jsr.a24 $ff0756       ; NextLine
ff0664 4f 60                               rts.a24

ff0666 ; SUB PrintChar:
ff0666 ac fe 03                            ldy $03fe             ; TXTPOS
ff0669 c0 28                               cpy #$28
ff066b                                 ;; IF < {
ff066b b0 05                               bcs +5                ; IFff066b_end [ff0672]
ff066d 91 fe                               sta ($fe),Y           ; TXTPTR
ff066f ee fe 03                            inc $03fe             ; TXTPOS
ff0672                 IFff066b_end:
ff0672 4f 60                               rts.a24

ff0674 ; SUB PrintSpace:
ff0674 a9 a0                               lda #$a0
ff0676 ac fe 03                            ldy $03fe             ; TXTPOS
ff0679 c0 28                               cpy #$28
ff067b                                 ;; IF < {
ff067b b0 05                               bcs +5                ; IFff067b_end [ff0682]
ff067d 91 fe                               sta ($fe),Y           ; TXTPTR
ff067f ee fe 03                            inc $03fe             ; TXTPOS
ff0682                 IFff067b_end:
ff0682 4f 60                               rts.a24

ff0684 ; SUB PrintCursor:
ff0684 ac fe 03                            ldy $03fe             ; TXTPOS
ff0687 c0 28                               cpy #$28
ff0689                                 ;; IF < {
ff0689 b0 04                               bcs +4                ; IFff0689_end [ff068f]
ff068b a9 df                               lda #$df
ff068d 91 fe                               sta ($fe),Y           ; TXTPTR
ff068f                 IFff0689_end:
ff068f 4f 60                               rts.a24

ff0691 ; SUB ClearCursor:
ff0691 ac fe 03                            ldy $03fe             ; TXTPOS
ff0694 c0 28                               cpy #$28
ff0696                                 ;; IF < {
ff0696 b0 04                               bcs +4                ; IFff0696_end [ff069c]
ff0698 a9 a0                               lda #$a0
ff069a 91 fe                               sta ($fe),Y           ; TXTPTR
ff069c                 IFff0696_end:
ff069c 4f 60                               rts.a24

ff069e ; SUB PlayBeep:
ff069e                 FORff069e_start:
ff069e                                 ;; FOR X = 0 TO 8 {
ff069e a2 00                               ldx #$0
ff06a0                 FORff069e_loop:
ff06a0 4f bd 36 81 ff                      lda.a24 $ff8136,X     ; BeepTimes
ff06a5                 FORff06a5_start:
ff06a5                                 ;; FOR Y = 0 TO 16 {
ff06a5 a0 00                               ldy #$0
ff06a7                 FORff06a5_loop:
ff06a7 4f 20 bb 06 ff                      jsr.a24 $ff06bb       ; Wait
ff06ac 2c 30 c0                            bit $c030             ; SPKR
ff06af c8                                  iny
ff06b0 c0 11                               cpy #$11
ff06b2 d0 f3                               bne -13               ; FORff06a5_loop [ff06a7]
ff06b4                 FORff06a5_end:
ff06b4 e8                                  inx
ff06b5 e0 09                               cpx #$9
ff06b7 d0 e7                               bne -25               ; FORff069e_loop [ff06a0]
ff06b9                 FORff069e_end:
ff06b9 4f 60                               rts.a24

ff06bb ; SUB Wait:
ff06bb 2f da                               phx.t
ff06bd 2f 48                               pha.t
ff06bf                 FORff06bf_start:
ff06bf                                 ;; FOR X = 1 TO 3 {
ff06bf a2 01                               ldx #$1
ff06c1                 FORff06bf_loop:
ff06c1 2f 68                               pla.t
ff06c3 2f 48                               pha.t
ff06c5                 DOff06c5_start:
ff06c5                                 ;; DO {
ff06c5                 DOff06c5_loop:
ff06c5 2f 3a                               dec.t
ff06c7 2f c9 00 00 00                      cmp.t #$0
ff06cc                                 ;; WHILE !=
ff06cc f0 02                               beq +2                ; DOff06c5_end [ff06d0]
ff06ce 80 f5                               bra -11               ; DOff06c5_loop [ff06c5]
ff06d0                 DOff06c5_end:
ff06d0 e8                                  inx
ff06d1 e0 04                               cpx #$4
ff06d3 d0 ec                               bne -20               ; FORff06bf_loop [ff06c1]
ff06d5                 FORff06bf_end:
ff06d5 2f 68                               pla.t
ff06d7 2f fa                               plx.t
ff06d9 4f 60                               rts.a24

ff06db ; SUB PrintDebugValue:
ff06db 48                                  pha
ff06dc 48                                  pha
ff06dd                       ;; A >>= 4 
ff06dd 4a                                  lsr
ff06de 4a                                  lsr
ff06df 4a                                  lsr
ff06e0 4a                                  lsr
ff06e1                                 ;; IF >= 10 {
ff06e1 c9 0a                               cmp #$a
ff06e3 90 05                               bcc +5                ; IFff06e1_else [ff06ea]
ff06e5                       ;; A += 183 
ff06e5 18                                  clc
ff06e6 69 b7                               adc #$b7
ff06e8 80 03                               bra +3                ; IFff06e1_end [ff06ed]
ff06ea                 IFff06e1_else:
ff06ea                                 ;; ELSE
ff06ea                       ;; A += 176 
ff06ea 18                                  clc
ff06eb 69 b0                               adc #$b0
ff06ed                 IFff06e1_end:
ff06ed 8d 26 04                            sta $0426
ff06f0 68                                  pla
ff06f1                       ;; A &= 15 
ff06f1 29 0f                               and #$f
ff06f3                                 ;; IF >= 10 {
ff06f3 c9 0a                               cmp #$a
ff06f5 90 05                               bcc +5                ; IFff06f3_else [ff06fc]
ff06f7                       ;; A += 183 
ff06f7 18                                  clc
ff06f8 69 b7                               adc #$b7
ff06fa 80 03                               bra +3                ; IFff06f3_end [ff06ff]
ff06fc                 IFff06f3_else:
ff06fc                                 ;; ELSE
ff06fc                       ;; A += 176 
ff06fc 18                                  clc
ff06fd 69 b0                               adc #$b0
ff06ff                 IFff06f3_end:
ff06ff 8d 27 04                            sta $0427
ff0702 68                                  pla
ff0703 4f 60                               rts.a24

ff0705 ; SUB PrintDebugChar:
ff0705 8d 27 04                            sta $0427
ff0708 a9 a0                               lda #$a0
ff070a 8d 26 04                            sta $0426
ff070d 4f 60                               rts.a24

ff070f ; SUB PrintDebug2Chars:
ff070f 1f 8d 26 04                         sta.w $000426
ff0713 4f 60                               rts.a24

ff0715 ; SUB ClearRow:
ff0715 2b                                  xsl
ff0716 5f bd 00 80 ff                      lda.w.a24 $ff8000,X   ; TextScreenBase
ff071b 1f 85 fe                            sta.w $fe             ; TXTPTR
ff071e a9 a0                               lda #$a0
ff0720 a0 00                               ldy #$0
ff0722                 loop_clear_char:
ff0722 91 fe                               sta ($fe),Y           ; TXTPTR
ff0724 c8                                  iny
ff0725 c0 28                               cpy #$28
ff0727 d0 f9                               bne -7                ; loop_clear_char [ff0722]
ff0729 4f 60                               rts.a24

ff072b ; SUB ClearScreen:
000000-000002   ; VAR @ROWPTR
ff072b 2b                                  xsl
ff072c                 DOff072c_start:
ff072c                                 ;; DO {
ff072c                 DOff072c_loop:
ff072c 6f bd 00 80 ff                      lda.t.a24 $ff8000,X   ; TextScreenBase
ff0731 ac fd 03                            ldy $03fd             ; DISPMODE
ff0734 c0 01                               cpy #$1               ; DISP_TEXT_2
ff0736                                 ;; IF == {
ff0736 d0 06                               bne +6                ; IFff0736_end [ff073e]
ff0738 18                                  clc
ff0739 2f 69 00 04 00                      adc.t #$400
ff073e                 IFff0736_end:
ff073e 1f 85 00                            sta.w $00             ; ROWPTR
ff0741 a9 a0                               lda #$a0
ff0743                 FORff0743_start:
ff0743                                 ;; FOR Y = 0 TO 39 {
ff0743 a0 00                               ldy #$0
ff0745                 FORff0743_loop:
ff0745 91 00                               sta ($00),Y           ; ROWPTR
ff0747 c8                                  iny
ff0748 c0 28                               cpy #$28
ff074a d0 f9                               bne -7                ; FORff0743_loop [ff0745]
ff074c                 FORff0743_end:
ff074c e8                                  inx
ff074d e8                                  inx
ff074e e0 30                               cpx #$30
ff0750                                 ;; WHILE !=
ff0750 f0 02                               beq +2                ; DOff072c_end [ff0754]
ff0752 80 d8                               bra -40               ; DOff072c_loop [ff072c]
ff0754                 DOff072c_end:
ff0754 4f 60                               rts.a24

ff0756 ; SUB NextLine:
ff0756 ad ff 03                            lda $03ff             ; TXTROW
ff0759 c9 17                               cmp #$17
ff075b                                 ;; IF < {
ff075b b0 0f                               bcs +15               ; IFff075b_else [ff076c]
ff075d ee ff 03                            inc $03ff             ; TXTROW
ff0760 4f 20 78 04 ff                      jsr.a24 $ff0478       ; ScreenBase
ff0765 a9 00                               lda #$0
ff0767 8d fe 03                            sta $03fe             ; TXTPOS
ff076a 80 11                               bra +17               ; IFff075b_end [ff077d]
ff076c                 IFff075b_else:
ff076c                                 ;; ELSE
ff076c a2 02                               ldx #$2
ff076e 4f 20 7f 07 ff                      jsr.a24 $ff077f       ; ScrollScreen
ff0773 a9 17                               lda #$17
ff0775 8d ff 03                            sta $03ff             ; TXTROW
ff0778 a9 00                               lda #$0
ff077a 8d fe 03                            sta $03fe             ; TXTPOS
ff077d                 IFff075b_end:
ff077d 4f 60                               rts.a24

ff077f ; SUB ScrollScreen:
ff077f 2b                                  xsl
ff0780                 loop_scroll_line:
ff0780 5f bd 00 80 ff                      lda.w.a24 $ff8000,X   ; TextScreenBase
ff0785 1f 85 fe                            sta.w $fe             ; TXTPTR
ff0788 5f bd 02 80 ff                      lda.w.a24 $ff8002,X   ; TextScreenBase
ff078d 1f 85 00                            sta.w $00
ff0790 a0 00                               ldy #$0
ff0792                 loop_scroll_char:
ff0792 b1 00                               lda ($00),Y
ff0794 91 fe                               sta ($fe),Y           ; TXTPTR
ff0796 c8                                  iny
ff0797 c0 28                               cpy #$28
ff0799 d0 f7                               bne -9                ; loop_scroll_char [ff0792]
ff079b e8                                  inx
ff079c e8                                  inx
ff079d e0 2e                               cpx #$2e
ff079f d0 df                               bne -33               ; loop_scroll_line [ff0780]
ff07a1                 scroll_clear_last_line:
ff07a1 5f bd 00 80 ff                      lda.w.a24 $ff8000,X   ; TextScreenBase
ff07a6 1f 85 fe                            sta.w $fe             ; TXTPTR
ff07a9 1f a9 a0 a0                         lda.w #$a0a0
ff07ad a0 00                               ldy #$0
ff07af                 loop_scroll_clear_line:
ff07af 1f 91 fe                            sta.w ($fe),Y         ; TXTPTR
ff07b2 c8                                  iny
ff07b3 c8                                  iny
ff07b4 c0 28                               cpy #$28
ff07b6 d0 f7                               bne -9                ; loop_scroll_clear_line [ff07af]
ff07b8                 done_with_scroll:
ff07b8 4f 60                               rts.a24

ff07ba ; SUB ClearInputBuffers:
ff07ba a9 00                               lda #$0
ff07bc                 FORff07bc_start:
ff07bc                                 ;; FOR X = 0 TO 255 {
ff07bc a2 00                               ldx #$0
ff07be                 FORff07bc_loop:
ff07be 9d 00 02                            sta $0200,X           ; TXTBUFFER
ff07c1 e8                                  inx
ff07c2 e0 00                               cpx #$100
ff07c4 d0 f8                               bne -8                ; FORff07bc_loop [ff07be]
ff07c6                 FORff07bc_end:
ff07c6 4f 60                               rts.a24

ff07c8 ; SUB ClearCurrentInputBuffer:
ff07c8 a9 00                               lda #$0
ff07ca                 FORff07ca_start:
ff07ca                                 ;; FOR X = 0 TO 127 {
ff07ca a2 00                               ldx #$0
ff07cc                 FORff07ca_loop:
ff07cc 9d 00 02                            sta $0200,X           ; TXTBUFFER
ff07cf e8                                  inx
ff07d0 e0 80                               cpx #$80
ff07d2 d0 f8                               bne -8                ; FORff07ca_loop [ff07cc]
ff07d4                 FORff07ca_end:
ff07d4 4f 60                               rts.a24

ff07d6 ; SUB PrevToCurrentInputBuffer:
ff07d6                 FORff07d6_start:
ff07d6                                 ;; FOR X = 0 TO 127 {
ff07d6 a2 00                               ldx #$0
ff07d8                 FORff07d6_loop:
ff07d8 bd 80 02                            lda $0280,X           ; TXTBUFFER2
ff07db 9d 00 02                            sta $0200,X           ; TXTBUFFER
ff07de e8                                  inx
ff07df e0 80                               cpx #$80
ff07e1 d0 f5                               bne -11               ; FORff07d6_loop [ff07d8]
ff07e3                 FORff07d6_end:
ff07e3 4f 60                               rts.a24

ff07e5 ; SUB CurrentToPrevInputBuffer:
ff07e5                 FORff07e5_start:
ff07e5                                 ;; FOR X = 0 TO 127 {
ff07e5 a2 00                               ldx #$0
ff07e7                 FORff07e5_loop:
ff07e7 bd 00 02                            lda $0200,X           ; TXTBUFFER
ff07ea 9d 80 02                            sta $0280,X           ; TXTBUFFER2
ff07ed e8                                  inx
ff07ee e0 80                               cpx #$80
ff07f0 d0 f5                               bne -11               ; FORff07e5_loop [ff07e7]
ff07f2                 FORff07e5_end:
ff07f2 4f 60                               rts.a24

ff07f4 ; SUB InputBufferToTextScreen:
ff07f4 a0 01                               ldy #$1
ff07f6                 FORff07f6_start:
ff07f6                                 ;; FOR X = 0 TO 39 {
ff07f6 a2 00                               ldx #$0
ff07f8                 FORff07f6_loop:
ff07f8 bd 00 02                            lda $0200,X           ; TXTBUFFER
ff07fb                                 ;; IF == 0 {
ff07fb c9 00                               cmp #$0
ff07fd d0 07                               bne +7                ; IFff07fb_end [ff0806]
ff07ff 8c fe 03                            sty $03fe             ; TXTPOS
ff0802                                 ;; BREAK
ff0802 4f 80 0a 00                         bra.a24 +10           ; forff07f6_end [ff0810]
ff0806                 IFff07fb_end:
ff0806 09 80                               ora #$80
ff0808 91 fe                               sta ($fe),Y           ; TXTPTR
ff080a c8                                  iny
ff080b e8                                  inx
ff080c e0 28                               cpx #$28
ff080e d0 e8                               bne -24               ; FORff07f6_loop [ff07f8]
ff0810                 FORff07f6_end:
ff0810 a9 a0                               lda #$a0
ff0812                 LOOPff0812_start:
ff0812                                 ;; LOOP {
ff0812                 LOOPff0812_loop:
ff0812 c0 28                               cpy #$28
ff0814                                 ;; IF == {
ff0814 d0 04                               bne +4                ; IFff0814_end [ff081a]
ff0816                                 ;; BREAK
ff0816 4f 80 05 00                         bra.a24 +5            ; loopff0812_end [ff081f]
ff081a                 IFff0814_end:
ff081a 91 fe                               sta ($fe),Y           ; TXTPTR
ff081c c8                                  iny
ff081d 80 f3                               bra -13               ; LOOPff0812_loop [ff0812]
ff081f                 LOOPff0812_end:
ff081f 4f 60                               rts.a24

ff0821 ; SUB GetChar:
ff0821                 LOOPff0821_start:
ff0821                                 ;; LOOP {
ff0821                 LOOPff0821_loop:
ff0821 2c 00 c0                            bit $c000             ; KBD
ff0824                                 ;; IF - {
ff0824 10 04                               bpl +4                ; IFff0824_end [ff082a]
ff0826                                 ;; BREAK
ff0826 4f 80 02 00                         bra.a24 +2            ; loopff0821_end [ff082c]
ff082a                 IFff0824_end:
ff082a 80 f5                               bra -11               ; LOOPff0821_loop [ff0821]
ff082c                 LOOPff0821_end:
ff082c ad 00 c0                            lda $c000             ; KBD
ff082f 2c 10 c0                            bit $c010             ; KBDSTRB
ff0832 4f 60                               rts.a24

ff0834 ; SUB AppleII4:
ff0834                 FORff0834_start:
ff0834                                 ;; FOR X = 0 TO 39 {
ff0834 a2 00                               ldx #$0
ff0836                 FORff0834_loop:
ff0836 4f bd 30 80 ff                      lda.a24 $ff8030,X     ; Hello
ff083b f0 0a                               beq +10               ; forff0834_end [ff0847]
ff083d 09 80                               ora #$80
ff083f 9d 00 04                            sta $0400,X
ff0842 e8                                  inx
ff0843 e0 28                               cpx #$28
ff0845 d0 ef                               bne -17               ; FORff0834_loop [ff0836]
ff0847                 FORff0834_end:
ff0847 4f 60                               rts.a24

ff0849 ; SUB Disk4Name:
ff0849 a9 00                               lda #$0               ; DISK4_VOLUME_NAME
ff084b 8d f0 c0                            sta $c0f0             ; DISK4_CMD
ff084e ad ff c0                            lda $c0ff             ; DISK4_GO
ff0851 85 00                               sta $00               ; R0
ff0853 ad 00 c7                            lda $c700             ; SLOT_7_ROM
ff0856 1f a9 00 c8                         lda.w #$c800          ; PR_RAM
ff085a 2f 85 20                            sta.t $20             ; ARGT0
ff085d a5 00                               lda $00               ; R0
ff085f 4f 60                               rts.a24

ff0861 ; SUB Disk4CatalogStart:
ff0861 a9 01                               lda #$1               ; DISK4_CATALOG
ff0863 8d f0 c0                            sta $c0f0             ; DISK4_CMD
ff0866 ad ff c0                            lda $c0ff             ; DISK4_GO
ff0869 4f 60                               rts.a24

ff086b ; SUB Disk4CatalogNext:
ff086b a9 02                               lda #$2               ; DISK4_CATALOG_NEXT
ff086d 8d f0 c0                            sta $c0f0             ; DISK4_CMD
ff0870 ad ff c0                            lda $c0ff             ; DISK4_GO
ff0873 85 00                               sta $00               ; R0
ff0875 ad 00 c7                            lda $c700             ; SLOT_7_ROM
ff0878 1f a9 06 c8                         lda.w #$c806          ; PR_RAM
ff087c 2f 85 20                            sta.t $20             ; ARGT0
ff087f a5 00                               lda $00               ; R0
ff0881 4f 60                               rts.a24

ff0883 ; SUB Disk4Open:
ff0883 ad 00 c7                            lda $c700             ; SLOT_7_ROM
ff0886                 FORff0886_start:
ff0886                                 ;; FOR Y = 0 TO 16 {
ff0886 a0 00                               ldy #$0
ff0888                 FORff0886_loop:
ff0888 4f b1 20                            lda.a24 ($20),Y       ; ARG0
ff088b 99 00 c8                            sta $c800,Y           ; PR_RAM
ff088e                                 ;; IF == {
ff088e d0 04                               bne +4                ; IFff088e_end [ff0894]
ff0890                                 ;; BREAK
ff0890 4f 80 05 00                         bra.a24 +5            ; forff0886_end [ff0899]
ff0894                 IFff088e_end:
ff0894 c8                                  iny
ff0895 c0 11                               cpy #$11
ff0897 d0 ef                               bne -17               ; FORff0886_loop [ff0888]
ff0899                 FORff0886_end:
ff0899 a9 05                               lda #$5               ; DISK4_OPEN
ff089b 8d f0 c0                            sta $c0f0             ; DISK4_CMD
ff089e ad ff c0                            lda $c0ff             ; DISK4_GO
ff08a1 ae f7 c0                            ldx $c0f7             ; DISK4_RET0
ff08a4 4f 60                               rts.a24

ff08a6 ; SUB Disk4Close:
ff08a6 8d f1 c0                            sta $c0f1             ; DISK4_ARG0
ff08a9 a9 0a                               lda #$a               ; DISK4_CLOSE
ff08ab 8d f0 c0                            sta $c0f0             ; DISK4_CMD
ff08ae ad ff c0                            lda $c0ff             ; DISK4_GO
ff08b1 4f 60                               rts.a24

ff08b3 ; SUB Disk4Read:
ff08b3 a9 06                               lda #$6               ; DISK4_READ
ff08b5 8d f0 c0                            sta $c0f0             ; DISK4_CMD
ff08b8 ad ff c0                            lda $c0ff             ; DISK4_GO
ff08bb                                 ;; IF != {
ff08bb f0 02                               beq +2                ; IFff08bb_end [ff08bf]
ff08bd 4f 60                               rts.a24
ff08bf                 IFff08bb_end:
ff08bf 2f ad f7 c0                         lda.t $00c0f7         ; DISK4_RET0
ff08c3 2f 85 00                            sta.t $00             ; R0
ff08c6 ad 00 c7                            lda $c700             ; SLOT_7_ROM
ff08c9                 FORff08c9_start:
ff08c9                                 ;; FOR Y = 0 TO 1048576 {
ff08c9 2f a0 00 00 00                      ldy.t #$0
ff08ce                 FORff08c9_loop:
ff08ce 2f a5 00                            lda.t $00             ; R0
ff08d1 2f 98                               tya.t
ff08d3 2f c5 00                            cmp.t $00             ; R0
ff08d6 2f c4 00                            cpy.t $00             ; R0
ff08d9                                 ;; IF == {
ff08d9 d0 04                               bne +4                ; IFff08d9_end [ff08df]
ff08db                                 ;; BREAK
ff08db 4f 80 16 00                         bra.a24 +22           ; forff08c9_end [ff08f5]
ff08df                 IFff08d9_end:
ff08df 6f b9 00 c8 00                      lda.t.a24 $00c800,Y   ; PR_RAM
ff08e4 6f 91 20                            sta.t.a24 ($20),Y     ; ARG0
ff08e7 6f 99 00 80 00                      sta.t.a24 $008000,Y
ff08ec 2f c8                               iny.t
ff08ee 2f c0 01 00 10                      cpy.t #$100001
ff08f3 d0 d9                               bne -39               ; FORff08c9_loop [ff08ce]
ff08f5                 FORff08c9_end:
ff08f5 4f 60                               rts.a24

ff08f7 ; SUB Disk4PrintError:
ff08f7                                 ;; IF == 3 {
ff08f7 c9 03                               cmp #$3
ff08f9 d0 07                               bne +7                ; IFff08f7_else [ff0902]
ff08fb 2f a9 06 81 ff                      lda.t #$ff8106        ; Disk4ErrorNotFoundStr
ff0900 80 05                               bra +5                ; IFff08f7_end [ff0907]
ff0902                 IFff08f7_else:
ff0902                                 ;; ELSE
ff0902 2f a9 f6 80 ff                      lda.t #$ff80f6        ; Disk4ErrorStr
ff0907                 IFff08f7_end:
ff0907 2f 85 20                            sta.t $20             ; ARGT0
ff090a 4f 20 50 06 ff                      jsr.a24 $ff0650       ; PrintError
ff090f 4f 60                               rts.a24

ff0911 ; SUB DoHelp:
000004          ; VAR @I
000005          ; VAR @I6
000006          ; VAR @COL
ff0911 4f 20 56 07 ff                      jsr.a24 $ff0756       ; NextLine
ff0916 2f a9 3a 80 ff                      lda.t #$ff803a        ; CommandListStr
ff091b 2f 85 20                            sta.t $20             ; ARGT0
ff091e 4f 20 32 06 ff                      jsr.a24 $ff0632       ; PrintString
ff0923 4f 20 56 07 ff                      jsr.a24 $ff0756       ; NextLine
ff0928                       ;; M@$4 = 1 
ff0928 2f 85 00                            sta.t $00
ff092b a9 01                               lda #$1
ff092d 85 04                               sta $04
ff092f 2f a5 00                            lda.t $00
ff0932                       ;; M@$6 = 0 
ff0932 2f 85 00                            sta.t $00
ff0935 a9 00                               lda #$0
ff0937 85 06                               sta $06
ff0939 2f a5 00                            lda.t $00
ff093c                 DOff093c_start:
ff093c                                 ;; DO {
ff093c                 DOff093c_loop:
ff093c 4f 20 74 06 ff                      jsr.a24 $ff0674       ; PrintSpace
ff0941 a5 04                               lda $04               ; I
ff0943                       ;; A <<= 2 
ff0943 0a                                  asl
ff0944 0a                                  asl
ff0945 85 05                               sta $05               ; I6
ff0947 a5 04                               lda $04               ; I
ff0949                       ;; A <<= 1 
ff0949 0a                                  asl
ff094a 18                                  clc
ff094b 65 05                               adc $05               ; I6
ff094d 85 05                               sta $05               ; I6
ff094f aa                                  tax
ff0950 6f bd 89 81 ff                      lda.t.a24 $ff8189,X   ; CommandList
ff0955 2f 85 20                            sta.t $20             ; ARGT0
ff0958 4f 20 32 06 ff                      jsr.a24 $ff0632       ; PrintString
ff095d a5 06                               lda $06               ; COL
ff095f                                 ;; IF == {
ff095f d0 13                               bne +19               ; IFff095f_else [ff0974]
ff0961                       ;; M@$6 = 1 
ff0961 85 00                               sta $00
ff0963 a9 01                               lda #$1
ff0965 85 06                               sta $06
ff0967 a5 00                               lda $00
ff0969                       ;; M@$3fe = 12 
ff0969 85 00                               sta $00
ff096b a9 0c                               lda #$c
ff096d 8d fe 03                            sta $03fe
ff0970 a5 00                               lda $00
ff0972 80 26                               bra +38               ; IFff095f_end [ff099a]
ff0974                 IFff095f_else:
ff0974                                 ;; ELSE
ff0974                                 ;; IF == 1 {
ff0974 c9 01                               cmp #$1
ff0976 d0 11                               bne +17               ; IFff0974_end [ff0989]
ff0978                       ;; M@$6 = 2 
ff0978 85 00                               sta $00
ff097a a9 02                               lda #$2
ff097c 85 06                               sta $06
ff097e a5 00                               lda $00
ff0980                       ;; M@$3fe = 24 
ff0980 85 00                               sta $00
ff0982 a9 18                               lda #$18
ff0984 8d fe 03                            sta $03fe
ff0987 a5 00                               lda $00
ff0989                 IFff0974_end:
ff0989                                 ;; IF == 2 {
ff0989 c9 02                               cmp #$2
ff098b d0 0d                               bne +13               ; IFff0989_end [ff099a]
ff098d                       ;; M@$6 = 0 
ff098d 85 00                               sta $00
ff098f a9 00                               lda #$0
ff0991 85 06                               sta $06
ff0993 a5 00                               lda $00
ff0995 4f 20 56 07 ff                      jsr.a24 $ff0756       ; NextLine
ff099a                 IFff0989_end:
ff099a                 IFff095f_end:
ff099a e6 04                               inc $04               ; I
ff099c a5 04                               lda $04               ; I
ff099e                                 ;; WHILE < 14
ff099e c9 0e                               cmp #$e
ff09a0 b0 02                               bcs +2                ; DOff093c_end [ff09a4]
ff09a2 80 98                               bra -104              ; DOff093c_loop [ff093c]
ff09a4                 DOff093c_end:
ff09a4 4f 20 56 07 ff                      jsr.a24 $ff0756       ; NextLine
ff09a9 4f 20 56 07 ff                      jsr.a24 $ff0756       ; NextLine
ff09ae 4f 60                               rts.a24

ff09b0 ; SUB DoAscii:
000004          ; VAR @I
000005          ; VAR @J
000003          ; VAR @C
ff09b0 4f 20 56 07 ff                      jsr.a24 $ff0756       ; NextLine
ff09b5 2f a9 44 80 ff                      lda.t #$ff8044        ; ASCIIHeaderStr
ff09ba 2f 85 20                            sta.t $20             ; ARGT0
ff09bd 4f 20 32 06 ff                      jsr.a24 $ff0632       ; PrintString
ff09c2 4f 20 56 07 ff                      jsr.a24 $ff0756       ; NextLine
ff09c7 2f a9 57 80 ff                      lda.t #$ff8057        ; ASCIIDashesStr
ff09cc 2f 85 20                            sta.t $20             ; ARGT0
ff09cf 4f 20 32 06 ff                      jsr.a24 $ff0632       ; PrintString
ff09d4 4f 20 56 07 ff                      jsr.a24 $ff0756       ; NextLine
ff09d9                 FORff09d9_start:
ff09d9                                 ;; FOR @I = 0 TO 15 {
ff09d9 a2 00                               ldx #$0
ff09db 86 04                               stx $04
ff09dd                 FORff09d9_loop:
ff09dd a5 04                               lda $04               ; I
ff09df 4f 20 3c 05 ff                      jsr.a24 $ff053c       ; PrintHexDigit
ff09e4 a9 ad                               lda #$ad
ff09e6 4f 20 66 06 ff                      jsr.a24 $ff0666       ; PrintChar
ff09eb                 FORff09eb_start:
ff09eb                                 ;; FOR @J = 0 TO 15 {
ff09eb a2 00                               ldx #$0
ff09ed 86 05                               stx $05
ff09ef                 FORff09eb_loop:
ff09ef a5 03                               lda $03               ; C
ff09f1 4f 20 66 06 ff                      jsr.a24 $ff0666       ; PrintChar
ff09f6 e6 03                               inc $03               ; C
ff09f8 e6 05                               inc $05
ff09fa a6 05                               ldx $05
ff09fc e0 10                               cpx #$10
ff09fe d0 ef                               bne -17               ; FORff09eb_loop [ff09ef]
ff0a00                 FORff09eb_end:
ff0a00 4f 20 56 07 ff                      jsr.a24 $ff0756       ; NextLine
ff0a05 e6 04                               inc $04
ff0a07 a6 04                               ldx $04
ff0a09 e0 10                               cpx #$10
ff0a0b d0 d0                               bne -48               ; FORff09d9_loop [ff09dd]
ff0a0d                 FORff09d9_end:
ff0a0d 2f a9 57 80 ff                      lda.t #$ff8057        ; ASCIIDashesStr
ff0a12 2f 85 20                            sta.t $20             ; ARGT0
ff0a15 4f 20 32 06 ff                      jsr.a24 $ff0632       ; PrintString
ff0a1a 4f 20 56 07 ff                      jsr.a24 $ff0756       ; NextLine
ff0a1f 4f 60                               rts.a24

ff0a21 ; SUB DoCatalog:
ff0a21 4f 20 56 07 ff                      jsr.a24 $ff0756       ; NextLine
ff0a26 2f a9 6a 80 ff                      lda.t #$ff806a        ; CatalogHeaderStr
ff0a2b 2f 85 20                            sta.t $20             ; ARGT0
ff0a2e 4f 20 32 06 ff                      jsr.a24 $ff0632       ; PrintString
ff0a33 4f 20 49 08 ff                      jsr.a24 $ff0849       ; Disk4Name
ff0a38 4f 20 32 06 ff                      jsr.a24 $ff0632       ; PrintString
ff0a3d 4f 20 56 07 ff                      jsr.a24 $ff0756       ; NextLine
ff0a42 4f 20 61 08 ff                      jsr.a24 $ff0861       ; Disk4CatalogStart
ff0a47                                 ;; IF != {
ff0a47 f0 07                               beq +7                ; IFff0a47_end [ff0a50]
ff0a49 4f 20 f7 08 ff                      jsr.a24 $ff08f7       ; Disk4PrintError
ff0a4e 4f 60                               rts.a24
ff0a50                 IFff0a47_end:
ff0a50 4f 20 56 07 ff                      jsr.a24 $ff0756       ; NextLine
ff0a55                 LOOPff0a55_start:
ff0a55                                 ;; LOOP {
ff0a55                 LOOPff0a55_loop:
ff0a55 4f 20 6b 08 ff                      jsr.a24 $ff086b       ; Disk4CatalogNext
ff0a5a                                 ;; IF != {
ff0a5a f0 04                               beq +4                ; IFff0a5a_end [ff0a60]
ff0a5c                                 ;; BREAK
ff0a5c 4f 80 4b 00                         bra.a24 +75           ; loopff0a55_end [ff0aab]
ff0a60                 IFff0a5a_end:
ff0a60 a9 02                               lda #$2
ff0a62 8d fe 03                            sta $03fe             ; TXTPOS
ff0a65 ad 00 c8                            lda $c800             ; DISK4_RAM
ff0a68 4f 20 66 06 ff                      jsr.a24 $ff0666       ; PrintChar
ff0a6d ad 01 c8                            lda $c801             ; DISK4_RAM
ff0a70 4f 20 66 06 ff                      jsr.a24 $ff0666       ; PrintChar
ff0a75 ad 02 c8                            lda $c802             ; DISK4_RAM
ff0a78 4f 20 66 06 ff                      jsr.a24 $ff0666       ; PrintChar
ff0a7d a9 06                               lda #$6
ff0a7f 8d fe 03                            sta $03fe             ; TXTPOS
ff0a82 ad 03 c8                            lda $c803             ; DISK4_RAM
ff0a85 4f 20 66 06 ff                      jsr.a24 $ff0666       ; PrintChar
ff0a8a ad 04 c8                            lda $c804             ; DISK4_RAM
ff0a8d 4f 20 66 06 ff                      jsr.a24 $ff0666       ; PrintChar
ff0a92 ad 05 c8                            lda $c805             ; DISK4_RAM
ff0a95 4f 20 66 06 ff                      jsr.a24 $ff0666       ; PrintChar
ff0a9a a9 0a                               lda #$a
ff0a9c 8d fe 03                            sta $03fe             ; TXTPOS
ff0a9f 4f 20 32 06 ff                      jsr.a24 $ff0632       ; PrintString
ff0aa4 4f 20 56 07 ff                      jsr.a24 $ff0756       ; NextLine
ff0aa9 80 aa                               bra -86               ; LOOPff0a55_loop [ff0a55]
ff0aab                 LOOPff0a55_end:
ff0aab 4f 20 56 07 ff                      jsr.a24 $ff0756       ; NextLine
ff0ab0 4f 60                               rts.a24

ff0ab2 ; SUB DoClear:
ff0ab2 ad fd 03                            lda $03fd             ; DISPMODE
ff0ab5                                 ;; IF == {
ff0ab5 d0 13                               bne +19               ; IFff0ab5_end [ff0aca]
ff0ab7 a2 02                               ldx #$2
ff0ab9 4f 20 2b 07 ff                      jsr.a24 $ff072b       ; ClearScreen
ff0abe a9 02                               lda #$2
ff0ac0 8d ff 03                            sta $03ff             ; TXTROW
ff0ac3 a9 00                               lda #$0
ff0ac5 8d fe 03                            sta $03fe             ; TXTPOS
ff0ac8 4f 60                               rts.a24
ff0aca                 IFff0ab5_end:
ff0aca                                 ;; IF == 1 {
ff0aca c9 01                               cmp #$1
ff0acc d0 07                               bne +7                ; IFff0aca_end [ff0ad5]
ff0ace a2 00                               ldx #$0
ff0ad0 4f 20 2b 07 ff                      jsr.a24 $ff072b       ; ClearScreen
ff0ad5                 IFff0aca_end:
ff0ad5 4f 60                               rts.a24

ff0ad7 ; SUB DoEcho:
ff0ad7 1f a9 00 02                         lda.w #$200
ff0adb 2f 85 20                            sta.t $20             ; ARGT0
ff0ade 4f 20 32 06 ff                      jsr.a24 $ff0632       ; PrintString
ff0ae3 4f 20 56 07 ff                      jsr.a24 $ff0756       ; NextLine
ff0ae8 4f 60                               rts.a24

ff0aea ; SUB DoLoad:
000009          ; VAR @FN
000003-000005   ; VAR @IDX
000006-000008   ; VAR @ACTUAL
ff0aea 4f 20 56 07 ff                      jsr.a24 $ff0756       ; NextLine
ff0aef 2f a5 07                            lda.t $07             ; ARGN
ff0af2                                 ;; IF < 1 {
ff0af2 c9 01                               cmp #$1
ff0af4 b0 0f                               bcs +15               ; IFff0af2_end [ff0b05]
ff0af6 2f a9 77 80 ff                      lda.t #$ff8077        ; NoFilenameErrStr
ff0afb 2f 85 20                            sta.t $20             ; ARGT0
ff0afe 4f 20 50 06 ff                      jsr.a24 $ff0650       ; PrintError
ff0b03 4f 60                               rts.a24
ff0b05                 IFff0af2_end:
ff0b05 2f a5 07                            lda.t $07             ; ARGN
ff0b08                                 ;; IF < 2 {
ff0b08 c9 02                               cmp #$2
ff0b0a b0 0f                               bcs +15               ; IFff0b08_end [ff0b1b]
ff0b0c 2f a9 96 80 ff                      lda.t #$ff8096        ; NoAddressErrStr
ff0b11 2f 85 20                            sta.t $20             ; ARGT0
ff0b14 4f 20 50 06 ff                      jsr.a24 $ff0650       ; PrintError
ff0b19 4f 60                               rts.a24
ff0b1b                 IFff0b08_end:
ff0b1b 2f a5 26                            lda.t $26             ; ARGT2
ff0b1e 2f 85 20                            sta.t $20             ; ARGT0
ff0b21 4f 20 51 05 ff                      jsr.a24 $ff0551       ; ParseNumber
ff0b26 2f 85 26                            sta.t $26             ; ARGT2
ff0b29 2f a5 23                            lda.t $23             ; ARGT1
ff0b2c 2f 85 20                            sta.t $20             ; ARGT0
ff0b2f                                 ;; IF == {
ff0b2f d0 0c                               bne +12               ; IFff0b2f_end [ff0b3d]
ff0b31 2f a9                               lda.t #$ff8077        ; NoFilenameErrStr
ff0b33 2f 85 20                            sta.t $20             ; ARGT0
ff0b36 4f 20 50 06 ff                      jsr.a24 $ff0650       ; PrintError
ff0b3b 4f 60                               rts.a24
ff0b3d                 IFff0b2f_end:
ff0b3d 4f 20 83 08 ff                      jsr.a24 $ff0883       ; Disk4Open
ff0b42                                 ;; IF != {
ff0b42 f0 07                               beq +7                ; IFff0b42_end [ff0b4b]
ff0b44 4f 20 f7 08 ff                      jsr.a24 $ff08f7       ; Disk4PrintError
ff0b49 4f 60                               rts.a24
ff0b4b                 IFff0b42_end:
ff0b4b 86 09                               stx $09               ; FN
ff0b4d 1f a9 00 60                         lda.w #$6000
ff0b51 2f 85 20                            sta.t $20             ; ARGT0
ff0b54 2f 64 03                            stz.t $03             ; IDX
ff0b57                 LOOPff0b57_start:
ff0b57                                 ;; LOOP {
ff0b57                 LOOPff0b57_loop:
ff0b57 4f 20 b3 08 ff                      jsr.a24 $ff08b3       ; Disk4Read
ff0b5c                                 ;; IF == 2 {
ff0b5c c9 02                               cmp #$2
ff0b5e d0 04                               bne +4                ; IFff0b5c_end [ff0b64]
ff0b60                                 ;; BREAK
ff0b60 4f 80 2e 00                         bra.a24 +46           ; loopff0b57_end [ff0b92]
ff0b64                 IFff0b5c_end:
ff0b64 2f ad f7 c0                         lda.t $00c0f7         ; DISK4_RET0
ff0b68                                 ;; IF == {
ff0b68 d0 04                               bne +4                ; IFff0b68_end [ff0b6e]
ff0b6a                                 ;; BREAK
ff0b6a 4f 80 24 00                         bra.a24 +36           ; loopff0b57_end [ff0b92]
ff0b6e                 IFff0b68_end:
ff0b6e 2f 85 06                            sta.t $06             ; ACTUAL
ff0b71 a2 00                               ldx #$0
ff0b73                 LOOPff0b73_start:
ff0b73                                 ;; LOOP {
ff0b73                 LOOPff0b73_loop:
ff0b73 2f 8a                               txa.t
ff0b75 2f a8                               tay.t
ff0b77 4f b1 20                            lda.a24 ($20),Y       ; ARGT0
ff0b7a 2f a4 03                            ldy.t $03             ; IDX
ff0b7d 4f 91 26                            sta.a24 ($26),Y       ; ARGT2
ff0b80 2f e6 03                            inc.t $03             ; IDX
ff0b83 2f e8                               inx.t
ff0b85 1f e4 06                            cpx.w $06             ; ACTUAL
ff0b88                                 ;; IF == {
ff0b88 d0 04                               bne +4                ; IFff0b88_end [ff0b8e]
ff0b8a                                 ;; BREAK
ff0b8a 4f 80 02 00                         bra.a24 +2            ; loopff0b73_end [ff0b90]
ff0b8e                 IFff0b88_end:
ff0b8e 80 e3                               bra -29               ; LOOPff0b73_loop [ff0b73]
ff0b90                 LOOPff0b73_end:
ff0b90 80 c5                               bra -59               ; LOOPff0b57_loop [ff0b57]
ff0b92                 LOOPff0b57_end:
ff0b92 a5 09                               lda $09               ; FN
ff0b94 4f 20 a6 08 ff                      jsr.a24 $ff08a6       ; Disk4Close
ff0b99 2f a9 d0 80 ff                      lda.t #$ff80d0        ; LoadedStr
ff0b9e 2f 85 20                            sta.t $20             ; ARGT0
ff0ba1 4f 20 32 06 ff                      jsr.a24 $ff0632       ; PrintString
ff0ba6 2f a5 06                            lda.t $06             ; ACTUAL
ff0ba9 4f 20 f7 04 ff                      jsr.a24 $ff04f7       ; PrintHex24
ff0bae 2f a9 d8 80 ff                      lda.t #$ff80d8        ; LoadedBytesToStr
ff0bb3 2f 85 20                            sta.t $20             ; ARGT0
ff0bb6 4f 20 32 06 ff                      jsr.a24 $ff0632       ; PrintString
ff0bbb 2f a5 26                            lda.t $26             ; ARGT2
ff0bbe 4f 20 f7 04 ff                      jsr.a24 $ff04f7       ; PrintHex24
ff0bc3 4f 20 56 07 ff                      jsr.a24 $ff0756       ; NextLine
ff0bc8 4f 20 56 07 ff                      jsr.a24 $ff0756       ; NextLine
ff0bcd 4f 60                               rts.a24

ff0bcf ; SUB DoView:
00000b          ; VAR @FN
000003-000005   ; VAR @IDX
000006-000008   ; VAR @ACTUAL
000009          ; VAR @LINENUM
00000a          ; VAR @STOP
ff0bcf 4f 20 56 07 ff                      jsr.a24 $ff0756       ; NextLine
ff0bd4 2f a5 07                            lda.t $07             ; ARGN
ff0bd7                                 ;; IF < 1 {
ff0bd7 c9 01                               cmp #$1
ff0bd9 b0 0f                               bcs +15               ; IFff0bd7_end [ff0bea]
ff0bdb 2f a9 77 80 ff                      lda.t #$ff8077        ; NoFilenameErrStr
ff0be0 2f 85 20                            sta.t $20             ; ARGT0
ff0be3 4f 20 50 06 ff                      jsr.a24 $ff0650       ; PrintError
ff0be8 4f 60                               rts.a24
ff0bea                 IFff0bd7_end:
ff0bea 2f a5 23                            lda.t $23             ; ARGT1
ff0bed 2f 85 20                            sta.t $20             ; ARGT0
ff0bf0                                 ;; IF == {
ff0bf0 d0 0c                               bne +12               ; IFff0bf0_end [ff0bfe]
ff0bf2 2f a9                               lda.t #$ff8077        ; NoFilenameErrStr
ff0bf4 2f 85 20                            sta.t $20             ; ARGT0
ff0bf7 4f 20 50 06 ff                      jsr.a24 $ff0650       ; PrintError
ff0bfc 4f 60                               rts.a24
ff0bfe                 IFff0bf0_end:
ff0bfe 4f 20 83 08 ff                      jsr.a24 $ff0883       ; Disk4Open
ff0c03                                 ;; IF != {
ff0c03 f0 07                               beq +7                ; IFff0c03_end [ff0c0c]
ff0c05 4f 20 f7 08 ff                      jsr.a24 $ff08f7       ; Disk4PrintError
ff0c0a 4f 60                               rts.a24
ff0c0c                 IFff0c03_end:
ff0c0c 86 0b                               stx $0b               ; FN
ff0c0e 1f a9 00 60                         lda.w #$6000
ff0c12 2f 85 20                            sta.t $20             ; ARGT0
ff0c15 64 09                               stz $09               ; LINENUM
ff0c17 64 0a                               stz $0a               ; STOP
ff0c19                 LOOPff0c19_start:
ff0c19                                 ;; LOOP {
ff0c19                 LOOPff0c19_loop:
ff0c19 4f 20 b3 08 ff                      jsr.a24 $ff08b3       ; Disk4Read
ff0c1e                                 ;; IF == 2 {
ff0c1e c9 02                               cmp #$2
ff0c20 d0 04                               bne +4                ; IFff0c1e_end [ff0c26]
ff0c22                                 ;; BREAK
ff0c22 4f 80 51 00                         bra.a24 +81           ; loopff0c19_end [ff0c77]
ff0c26                 IFff0c1e_end:
ff0c26 2f ad f7 c0                         lda.t $00c0f7         ; DISK4_RET0
ff0c2a                                 ;; IF == {
ff0c2a d0 04                               bne +4                ; IFff0c2a_end [ff0c30]
ff0c2c                                 ;; BREAK
ff0c2c 4f 80 47 00                         bra.a24 +71           ; loopff0c19_end [ff0c77]
ff0c30                 IFff0c2a_end:
ff0c30 2f 85 06                            sta.t $06             ; ACTUAL
ff0c33 2f 64 03                            stz.t $03             ; IDX
ff0c36                 LOOPff0c36_start:
ff0c36                                 ;; LOOP {
ff0c36                 LOOPff0c36_loop:
ff0c36 2f a4 03                            ldy.t $03             ; IDX
ff0c39 4f b1 20                            lda.a24 ($20),Y       ; ARGT0
ff0c3c                                 ;; IF == 10 {
ff0c3c c9 0a                               cmp #$a
ff0c3e d0 05                               bne +5                ; IFff0c3c_end [ff0c45]
ff0c40 4f 20 90 0c ff                      jsr.a24 $ff0c90       ; View_Paginate
ff0c45                 IFff0c3c_end:
ff0c45                                 ;; IF >= 32 {
ff0c45 c9 20                               cmp #$20
ff0c47 90 1b                               bcc +27               ; IFff0c45_end [ff0c64]
ff0c49 ac fe 03                            ldy $03fe             ; TXTPOS
ff0c4c 09 80                               ora #$80
ff0c4e 91 fe                               sta ($fe),Y           ; TXTPTR
ff0c50 ee fe 03                            inc $03fe             ; TXTPOS
ff0c53 c0 27                               cpy #$27
ff0c55                                 ;; IF >= {
ff0c55 90 0d                               bcc +13               ; IFff0c55_end [ff0c64]
ff0c57 4f 20 90 0c ff                      jsr.a24 $ff0c90       ; View_Paginate
ff0c5c                                 ;; IF != {
ff0c5c f0 00                               beq +0                ; IFff0c5c_end [ff0c5e]
ff0c5e                 IFff0c5c_end:
ff0c5e 2f a4 03                            ldy.t $03             ; IDX
ff0c61 4f b1 20                            lda.a24 ($20),Y       ; ARGT0
ff0c64                 IFff0c55_end:
ff0c64                 IFff0c45_end:
ff0c64 2f e6 03                            inc.t $03             ; IDX
ff0c67 2f a5 03                            lda.t $03             ; IDX
ff0c6a 2f c5 06                            cmp.t $06             ; ACTUAL
ff0c6d                                 ;; IF == {
ff0c6d d0 04                               bne +4                ; IFff0c6d_end [ff0c73]
ff0c6f                                 ;; BREAK
ff0c6f 4f 80 02 00                         bra.a24 +2            ; loopff0c36_end [ff0c75]
ff0c73                 IFff0c6d_end:
ff0c73 80 c1                               bra -63               ; LOOPff0c36_loop [ff0c36]
ff0c75                 LOOPff0c36_end:
ff0c75 80 a2                               bra -94               ; LOOPff0c19_loop [ff0c19]
ff0c77                 LOOPff0c19_end:
ff0c77 a5 0b                               lda $0b               ; FN
ff0c79 4f 20 a6 08 ff                      jsr.a24 $ff08a6       ; Disk4Close
ff0c7e a5 09                               lda $09               ; LINENUM
ff0c80                                 ;; IF == 21 {
ff0c80 c9 15                               cmp #$15
ff0c82 d0 05                               bne +5                ; IFff0c80_end [ff0c89]
ff0c84 4f 20 21 08 ff                      jsr.a24 $ff0821       ; GetChar
ff0c89                 IFff0c80_end:
ff0c89 4f 20 56 07 ff                      jsr.a24 $ff0756       ; NextLine
ff0c8e 4f 60                               rts.a24

ff0c90 ; SUB View_Paginate:
000009          ; VAR @LINENUM
00000b          ; VAR @STOP
ff0c90 e6 09                               inc $09               ; LINENUM
ff0c92 a5 09                               lda $09               ; LINENUM
ff0c94                                 ;; IF == 22 {
ff0c94 c9 16                               cmp #$16
ff0c96 d0 17                               bne +23               ; IFff0c94_end [ff0caf]
ff0c98 4f 20 21 08 ff                      jsr.a24 $ff0821       ; GetChar
ff0c9d                                 ;; IF == 131 {
ff0c9d c9 83                               cmp #$83
ff0c9f d0 04                               bne +4                ; IFff0c9d_end [ff0ca5]
ff0ca1 a9 01                               lda #$1
ff0ca3 85 0b                               sta $0b               ; STOP
ff0ca5                 IFff0c9d_end:
ff0ca5                                 ;; IF == 155 {
ff0ca5 c9 9b                               cmp #$9b
ff0ca7 d0 04                               bne +4                ; IFff0ca5_end [ff0cad]
ff0ca9 a9 01                               lda #$1
ff0cab 85 0b                               sta $0b               ; STOP
ff0cad                 IFff0ca5_end:
ff0cad 64 09                               stz $09               ; LINENUM
ff0caf                 IFff0c94_end:
ff0caf 4f 20 56 07 ff                      jsr.a24 $ff0756       ; NextLine
ff0cb4 9c fe 03                            stz $03fe             ; TXTPOS
ff0cb7 ac fe 03                            ldy $03fe             ; TXTPOS
ff0cba 4f 60                               rts.a24
ff0cbc                       ;; M@$b 0 
ff0cbc ea                                  nop

ff0cbd ; SUB DoPeek:
00ff03-00ff05   ; VAR @START_ADDR
00ff06-00ff08   ; VAR @END_ADDR
000009          ; VAR @LINENUM
00000a          ; VAR @STOP
00000b-00000d   ; VAR @CUR_ADDR
ff0cbd 2f a5 07                            lda.t $07             ; ARGN
ff0cc0                                 ;; IF < 1 {
ff0cc0 c9 01                               cmp #$1
ff0cc2 b0 0f                               bcs +15               ; IFff0cc0_end [ff0cd3]
ff0cc4 2f a9 96 80 ff                      lda.t #$ff8096        ; NoAddressErrStr
ff0cc9 2f 85 20                            sta.t $20             ; ARGT0
ff0ccc 4f 20 50 06 ff                      jsr.a24 $ff0650       ; PrintError
ff0cd1 4f 60                               rts.a24
ff0cd3                 IFff0cc0_end:
ff0cd3 2f a5 23                            lda.t $23             ; ARGT1
ff0cd6 2f 85 20                            sta.t $20             ; ARGT0
ff0cd9 4f 20 51 05 ff                      jsr.a24 $ff0551       ; ParseNumber
ff0cde 2f 29 f0 ff ff                      and.t #$fffff0
ff0ce3 2f 8d 03 ff                         sta.t $00ff03         ; START_ADDR
ff0ce7 2f a5 07                            lda.t $07             ; ARGN
ff0cea                                 ;; IF >= 2 {
ff0cea c9 02                               cmp #$2
ff0cec 90 33                               bcc +51               ; IFff0cea_else [ff0d21]
ff0cee b2 26                               lda ($26)             ; ARGT2
ff0cf0 c9 2b                               cmp #$2b
ff0cf2                                 ;; IF == {
ff0cf2 d0 1c                               bne +28               ; IFff0cf2_else [ff0d10]
ff0cf4 2f a5 26                            lda.t $26             ; ARGT2
ff0cf7 2f 85 20                            sta.t $20             ; ARGT0
ff0cfa 2f e6 20                            inc.t $20             ; ARGT0
ff0cfd 4f 20 51 05 ff                      jsr.a24 $ff0551       ; ParseNumber
ff0d02 2f aa                               tax.t
ff0d04 2f ad 03 ff                         lda.t $00ff03         ; START_ADDR
ff0d08 2f db                               adx.t
ff0d0a 2f 8d 06 ff                         sta.t $00ff06         ; END_ADDR
ff0d0e 80 0f                               bra +15               ; IFff0cf2_end [ff0d1f]
ff0d10                 IFff0cf2_else:
ff0d10                                 ;; ELSE
ff0d10 2f a5 26                            lda.t $26             ; ARGT2
ff0d13 2f 85 20                            sta.t $20             ; ARGT0
ff0d16 4f 20 51 05 ff                      jsr.a24 $ff0551       ; ParseNumber
ff0d1b 2f 8d 06 ff                         sta.t $00ff06         ; END_ADDR
ff0d1f                 IFff0cf2_end:
ff0d1f 80 0e                               bra +14               ; IFff0cea_end [ff0d2f]
ff0d21                 IFff0cea_else:
ff0d21                                 ;; ELSE
ff0d21 2f ad 03 ff                         lda.t $00ff03         ; START_ADDR
ff0d25 18                                  clc
ff0d26 2f 69 40 00 00                      adc.t #$40
ff0d2b 2f 8d 06 ff                         sta.t $00ff06         ; END_ADDR
ff0d2f                 IFff0cea_end:
ff0d2f 4f 20 56 07 ff                      jsr.a24 $ff0756       ; NextLine
ff0d34 64 09                               stz $09               ; LINENUM
ff0d36 64 0a                               stz $0a               ; STOP
ff0d38 2f ad 03 ff                         lda.t $00ff03         ; START_ADDR
ff0d3c 2f 85 0b                            sta.t $0b             ; CUR_ADDR
ff0d3f                 LOOPff0d3f_start:
ff0d3f                                 ;; LOOP {
ff0d3f                 LOOPff0d3f_loop:
ff0d3f 4f 20 63 0d ff                      jsr.a24 $ff0d63       ; Draw_Peek_Line
ff0d44 4f 20 af 0d ff                      jsr.a24 $ff0daf       ; Loop_Paginate
ff0d49 2f a5 0b                            lda.t $0b             ; CUR_ADDR
ff0d4c 18                                  clc
ff0d4d 2f 69 08 00 00                      adc.t #$8
ff0d52 2f 85 0b                            sta.t $0b             ; CUR_ADDR
ff0d55 2f cd 06 ff                         cmp.t $00ff06         ; END_ADDR
ff0d59                                 ;; IF >= {
ff0d59 90 04                               bcc +4                ; IFff0d59_end [ff0d5f]
ff0d5b                                 ;; BREAK
ff0d5b 4f 80 02 00                         bra.a24 +2            ; loopff0d3f_end [ff0d61]
ff0d5f                 IFff0d59_end:
ff0d5f 80 de                               bra -34               ; LOOPff0d3f_loop [ff0d3f]
ff0d61                 LOOPff0d3f_end:
ff0d61 4f 60                               rts.a24

ff0d63 ; SUB Draw_Peek_Line:
00000b-00000d   ; VAR @ADDR
ff0d63 a9 a4                               lda #$a4
ff0d65 4f 20 66 06 ff                      jsr.a24 $ff0666       ; PrintChar
ff0d6a 2f a5 0b                            lda.t $0b             ; ADDR
ff0d6d 4f 20 f7 04 ff                      jsr.a24 $ff04f7       ; PrintHex24
ff0d72 a9 ad                               lda #$ad
ff0d74 4f 20 66 06 ff                      jsr.a24 $ff0666       ; PrintChar
ff0d79                 FORff0d79_start:
ff0d79                                 ;; FOR X = 0 TO 7 {
ff0d79 a2 00                               ldx #$0
ff0d7b                 FORff0d79_loop:
ff0d7b 8a                                  txa
ff0d7c a8                                  tay
ff0d7d b1 0b                               lda ($0b),Y           ; ADDR
ff0d7f 4f 20 28 05 ff                      jsr.a24 $ff0528       ; PrintHexByte
ff0d84 4f 20 74 06 ff                      jsr.a24 $ff0674       ; PrintSpace
ff0d89 e8                                  inx
ff0d8a e0 08                               cpx #$8
ff0d8c d0 ed                               bne -19               ; FORff0d79_loop [ff0d7b]
ff0d8e                 FORff0d79_end:
ff0d8e                 FORff0d8e_start:
ff0d8e                                 ;; FOR X = 0 TO 7 {
ff0d8e a2 00                               ldx #$0
ff0d90                 FORff0d8e_loop:
ff0d90 8a                                  txa
ff0d91 a8                                  tay
ff0d92 b1 0b                               lda ($0b),Y           ; ADDR
ff0d94                                 ;; IF < 128 {
ff0d94 c9 80                               cmp #$80
ff0d96 b0 0b                               bcs +11               ; IFff0d94_end [ff0da3]
ff0d98                                 ;; IF == 0 {
ff0d98 c9 00                               cmp #$0
ff0d9a d0 04                               bne +4                ; IFff0d98_else [ff0da0]
ff0d9c a9 ae                               lda #$ae
ff0d9e 80 03                               bra +3                ; IFff0d98_end [ff0da3]
ff0da0                 IFff0d98_else:
ff0da0                                 ;; ELSE
ff0da0 18                                  clc
ff0da1 69 80                               adc #$80
ff0da3                 IFff0d98_end:
ff0da3                 IFff0d94_end:
ff0da3 4f 20 66 06 ff                      jsr.a24 $ff0666       ; PrintChar
ff0da8 e8                                  inx
ff0da9 e0 08                               cpx #$8
ff0dab d0 e3                               bne -29               ; FORff0d8e_loop [ff0d90]
ff0dad                 FORff0d8e_end:
ff0dad 4f 60                               rts.a24

ff0daf ; SUB Loop_Paginate:
000009          ; VAR @LINENUM
00000a          ; VAR @STOP
ff0daf e6 09                               inc $09               ; LINENUM
ff0db1 a5 09                               lda $09               ; LINENUM
ff0db3                                 ;; IF == 22 {
ff0db3 c9 16                               cmp #$16
ff0db5 d0 17                               bne +23               ; IFff0db3_end [ff0dce]
ff0db7 4f 20 21 08 ff                      jsr.a24 $ff0821       ; GetChar
ff0dbc                                 ;; IF == 131 {
ff0dbc c9 83                               cmp #$83
ff0dbe d0 04                               bne +4                ; IFff0dbc_end [ff0dc4]
ff0dc0 a9 01                               lda #$1
ff0dc2 85 0a                               sta $0a               ; STOP
ff0dc4                 IFff0dbc_end:
ff0dc4                                 ;; IF == 155 {
ff0dc4 c9 9b                               cmp #$9b
ff0dc6 d0 04                               bne +4                ; IFff0dc4_end [ff0dcc]
ff0dc8 a9 01                               lda #$1
ff0dca 85 0a                               sta $0a               ; STOP
ff0dcc                 IFff0dc4_end:
ff0dcc 64 09                               stz $09               ; LINENUM
ff0dce                 IFff0db3_end:
ff0dce 4f 20 56 07 ff                      jsr.a24 $ff0756       ; NextLine
ff0dd3 9c fe 03                            stz $03fe             ; TXTPOS
ff0dd6 4f 60                               rts.a24

ff0dd8 ; SUB DoPoke:
00000b-00000d   ; VAR @ADDR
000000          ; VAR @VALUE
ff0dd8 2f a5 07                            lda.t $07             ; ARGN
ff0ddb                                 ;; IF < 1 {
ff0ddb c9 01                               cmp #$1
ff0ddd b0 0f                               bcs +15               ; IFff0ddb_end [ff0dee]
ff0ddf 2f a9 96 80 ff                      lda.t #$ff8096        ; NoAddressErrStr
ff0de4 2f 85 20                            sta.t $20             ; ARGT0
ff0de7 4f 20 50 06 ff                      jsr.a24 $ff0650       ; PrintError
ff0dec 4f 60                               rts.a24
ff0dee                 IFff0ddb_end:
ff0dee 2f a5 23                            lda.t $23             ; ARGT1
ff0df1 2f 85 20                            sta.t $20             ; ARGT0
ff0df4 4f 20 51 05 ff                      jsr.a24 $ff0551       ; ParseNumber
ff0df9 2f 29 f0 ff ff                      and.t #$fffff0
ff0dfe 2f 85 0b                            sta.t $0b             ; ADDR
ff0e01 2f a5 07                            lda.t $07             ; ARGN
ff0e04                                 ;; IF < 2 {
ff0e04 c9 02                               cmp #$2
ff0e06 b0 0f                               bcs +15               ; IFff0e04_end [ff0e17]
ff0e08 2f a9 b4 80 ff                      lda.t #$ff80b4        ; NoValueErrStr
ff0e0d 2f 85 20                            sta.t $20             ; ARGT0
ff0e10 4f 20 50 06 ff                      jsr.a24 $ff0650       ; PrintError
ff0e15 4f 60                               rts.a24
ff0e17                 IFff0e04_end:
ff0e17 2f a5 26                            lda.t $26             ; ARGT2
ff0e1a 2f 85 20                            sta.t $20             ; ARGT0
ff0e1d 4f 20 51 05 ff                      jsr.a24 $ff0551       ; ParseNumber
ff0e22 2f 29 f0 ff ff                      and.t #$fffff0
ff0e27 2f 85 00                            sta.t $00             ; VALUE
ff0e2a 4f 20 56 07 ff                      jsr.a24 $ff0756       ; NextLine
ff0e2f 2f a5 00                            lda.t $00             ; VALUE
ff0e32                                 ;; IF < 255 {
ff0e32 c9 ff                               cmp #$ff
ff0e34 b0 04                               bcs +4                ; IFff0e32_end [ff0e3a]
ff0e36 85 0b                               sta $0b               ; ADDR
ff0e38 80 0e                               bra +14               ; skip [ff0e48]
ff0e3a                 IFff0e32_end:
ff0e3a                                 ;; IF < 65535 {
ff0e3a 1f c9 ff ff                         cmp.w #$ffff
ff0e3e b0 05                               bcs +5                ; IFff0e3a_else [ff0e45]
ff0e40 1f 85 0b                            sta.w $0b             ; ADDR
ff0e43 80 03                               bra +3                ; IFff0e3a_end [ff0e48]
ff0e45                 IFff0e3a_else:
ff0e45                                 ;; ELSE
ff0e45 2f 85 0b                            sta.t $0b             ; ADDR
ff0e48                 IFff0e3a_end:
ff0e48                 skip:
ff0e48 2f a5 0b                            lda.t $0b             ; ADDR
ff0e4b 2f 29 f0 ff ff                      and.t #$fffff0
ff0e50 2f 85 0b                            sta.t $0b             ; ADDR
ff0e53 4f 20 63 0d ff                      jsr.a24 $ff0d63       ; Draw_Peek_Line
ff0e58 4f 20 56 07 ff                      jsr.a24 $ff0756       ; NextLine
ff0e5d 4f 20 56 07 ff                      jsr.a24 $ff0756       ; NextLine
ff0e62 4f 60                               rts.a24

ff0e64 ; SUB DoReset:
ff0e64 ea                                  nop
ff0e65 4f 4c 00 02 ff                      jmp.a24 $ff0200       ; Reset

ff0e6a ; SUB DoText:
ff0e6a 2f a5 07                            lda.t $07             ; ARGN
ff0e6d                                 ;; IF < 1 {
ff0e6d c9 01                               cmp #$1
ff0e6f b0 08                               bcs +8                ; IFff0e6d_end [ff0e79]
ff0e71 ad 54 c0                            lda $c054             ; TXTPAGE1
ff0e74 9c fd 03                            stz $03fd             ; DISPMODE
ff0e77 4f 60                               rts.a24
ff0e79                 IFff0e6d_end:
ff0e79 a0 00                               ldy #$0
ff0e7b 4f b1 23                            lda.a24 ($23),Y       ; ARGT1
ff0e7e c9 38                               cmp #$38
ff0e80                                 ;; IF == {
ff0e80 d0 1f                               bne +31               ; IFff0e80_end [ff0ea1]
ff0e82 a0 01                               ldy #$1
ff0e84 4f b1 23                            lda.a24 ($23),Y       ; ARGT1
ff0e87 c9 30                               cmp #$30
ff0e89                                 ;; IF == {
ff0e89 d0 07                               bne +7                ; IFff0e89_end [ff0e92]
ff0e8b a0 02                               ldy #$2
ff0e8d 4f b1 23                            lda.a24 ($23),Y       ; ARGT1
ff0e90                                 ;; IF == {
ff0e90 d0 00                               bne +0                ; IFff0e90_end [ff0e92]
ff0e92                 IFff0e90_end:
ff0e92                 IFff0e89_end:
ff0e92 2f a9 e4 80 ff                      lda.t #$ff80e4        ; InvalidValue
ff0e97 2f 85 20                            sta.t $20             ; ARG0
ff0e9a 4f 20 50 06 ff                      jsr.a24 $ff0650       ; PrintError
ff0e9f 4f 60                               rts.a24
ff0ea1                 IFff0e80_end:
ff0ea1 c9 31                               cmp #$31
ff0ea3                                 ;; IF == {
ff0ea3 d0 0f                               bne +15               ; IFff0ea3_end [ff0eb4]
ff0ea5 a0 01                               ldy #$1
ff0ea7 4f b1 23                            lda.a24 ($23),Y       ; ARGT1
ff0eaa                                 ;; IF == {
ff0eaa d0 08                               bne +8                ; IFff0eaa_end [ff0eb4]
ff0eac ad 54 c0                            lda $c054             ; TXTPAGE1
ff0eaf 9c fd 03                            stz $03fd             ; DISPMODE
ff0eb2 4f 60                               rts.a24
ff0eb4                 IFff0eaa_end:
ff0eb4                 IFff0ea3_end:
ff0eb4 c9 32                               cmp #$32
ff0eb6                                 ;; IF == {
ff0eb6 d0 11                               bne +17               ; IFff0eb6_end [ff0ec9]
ff0eb8 a0 01                               ldy #$1
ff0eba 4f b1 23                            lda.a24 ($23),Y       ; ARGT1
ff0ebd                                 ;; IF == {
ff0ebd d0 0a                               bne +10               ; IFff0ebd_end [ff0ec9]
ff0ebf ad 55 c0                            lda $c055             ; TXTPAGE2
ff0ec2 a9 01                               lda #$1               ; DISP_TEXT_2
ff0ec4 8d fd 03                            sta $03fd             ; DISPMODE
ff0ec7 4f 60                               rts.a24
ff0ec9                 IFff0ebd_end:
ff0ec9                 IFff0eb6_end:
ff0ec9 2f a9 e4 80 ff                      lda.t #$ff80e4        ; InvalidValue
ff0ece 2f 85 20                            sta.t $20             ; ARG0
ff0ed1 4f 20 50 06 ff                      jsr.a24 $ff0650       ; PrintError
ff0ed6 4f 60                               rts.a24

ff0ed8 ; SUB Do2Plus:
ff0ed8 8d 82 c0                            sta $c082             ; LANGCLR
ff0edb fc                                  sws
ff0edc a2 ff                               ldx #$ff
ff0ede 9a                                  txs
ff0edf a9 00                               lda #$0
ff0ee1 8d f4 03                            sta $03f4             ; PWREDUP
ff0ee4 6c fc ff                            jmp ($fffc)           ; RSTVECTOR

ff0ee7 ; SUB DoZzz:
ff0ee7 2f a9 a0 86 01                      lda.t #$186a0
ff0eec 4f 20 16 05 ff                      jsr.a24 $ff0516       ; PrintHexWord
ff0ef1 4f 20 74 06 ff                      jsr.a24 $ff0674       ; PrintSpace
ff0ef6 2f a9 a0 86 01                      lda.t #$186a0
ff0efb 4f 20 bb 06 ff                      jsr.a24 $ff06bb       ; Wait
ff0f00 4f 20 28 05 ff                      jsr.a24 $ff0528       ; PrintHexByte
ff0f05 4f 20 74 06 ff                      jsr.a24 $ff0674       ; PrintSpace
ff0f0a 4f 20 74 06 ff                      jsr.a24 $ff0674       ; PrintSpace
ff0f0f 2f a9 40 0d 03                      lda.t #$30d40
ff0f14 4f 20 f7 04 ff                      jsr.a24 $ff04f7       ; PrintHex24
ff0f19 4f 20 74 06 ff                      jsr.a24 $ff0674       ; PrintSpace
ff0f1e 2f a9 40 0d 03                      lda.t #$30d40
ff0f23 4f 20 bb 06 ff                      jsr.a24 $ff06bb       ; Wait
ff0f28 4f 20 28 05 ff                      jsr.a24 $ff0528       ; PrintHexByte
ff0f2d 4f 20 74 06 ff                      jsr.a24 $ff0674       ; PrintSpace
ff0f32 4f 20 74 06 ff                      jsr.a24 $ff0674       ; PrintSpace
ff0f37 2f a9 00 35 0c                      lda.t #$c3500
ff0f3c 4f 20 f7 04 ff                      jsr.a24 $ff04f7       ; PrintHex24
ff0f41 4f 20 74 06 ff                      jsr.a24 $ff0674       ; PrintSpace
ff0f46 2f a9 00 35 0c                      lda.t #$c3500
ff0f4b 4f 20 bb 06 ff                      jsr.a24 $ff06bb       ; Wait
ff0f50 4f 20 28 05 ff                      jsr.a24 $ff0528       ; PrintHexByte
ff0f55 4f 20 74 06 ff                      jsr.a24 $ff0674       ; PrintSpace
ff0f5a 4f 20 74 06 ff                      jsr.a24 $ff0674       ; PrintSpace
ff0f5f 4f 20 56 07 ff                      jsr.a24 $ff0756       ; NextLine
ff0f64 4f 60                               rts.a24

; 28826 BYTES of FILLER

ff8000 ; DATA TextScreenBase:
ff8000 00 04
ff8002 80 04
ff8004 00 05
ff8006 80 05
ff8008 00 06
ff800a 80 06
ff800c 00 07
ff800e 80 07
ff8010 28 04
ff8012 a8 04
ff8014 28 05
ff8016 a8 05
ff8018 28 06
ff801a a8 06
ff801c 28 07
ff801e a8 07
ff8020 50 04
ff8022 d0 04
ff8024 50 05
ff8026 d0 05
ff8028 50 06
ff802a d0 06
ff802c 50 07
ff802e d0 07

ff8030 ; DATA Hello:
ff8030 41 70 70 6c 65 20 5d 5b 34 00

ff803a ; DATA CommandListStr:
ff803a 43 4f 4d 4d 41 4e 44 53 3a 00

ff8044 ; DATA ASCIIHeaderStr:
ff8044 20 20 30 31 32 33 34 35 36 37 38 39 41 42 43 44 45 46 00

ff8057 ; DATA ASCIIDashesStr:
ff8057 20 20 2d 2d 2d 2d 2d 2d 2d 2d 2d 2d 2d 2d 2d 2d 2d 2d 00

ff806a ; DATA CatalogHeaderStr:
ff806a 43 41 54 41 4c 4f 47 20 66 6f 72 20 00

ff8077 ; DATA NoFilenameErrStr:
ff8077 2a 2a 2a 20 46 49 4c 45 4e 41 4d 45 20 6d 75 73 74 20 62 65 20 73 70 65 63 69 66 69 65 64 00

ff8096 ; DATA NoAddressErrStr:
ff8096 2a 2a 2a 20 41 44 44 52 45 53 53 20 6d 75 73 74 20 62 65 20 73 70 65 63 69 66 69 65 64 00

ff80b4 ; DATA NoValueErrStr:
ff80b4 2a 2a 2a 20 56 41 4c 55 45 20 6d 75 73 74 20 62 65 20 73 70 65 63 69 66 69 65 64 00

ff80d0 ; DATA LoadedStr:
ff80d0 4c 4f 41 44 45 44 20 00

ff80d8 ; DATA LoadedBytesToStr:
ff80d8 20 62 79 74 65 73 20 74 6f 20 24 00

ff80e4 ; DATA InvalidValue:
ff80e4 2a 2a 2a 20 49 4e 56 41 4c 49 44 20 56 41 4c 55 45 00

ff80f6 ; DATA Disk4ErrorStr:
ff80f6 2a 2a 2a 20 44 49 53 4b 34 20 45 52 52 4f 52 00

ff8106 ; DATA Disk4ErrorNotFoundStr:
ff8106 2a 2a 2a 20 44 49 53 4b 34 3a 20 46 49 4c 45 20 4e 4f 54 20 46 4f 55 4e 44 00

ff8120 ; DATA Disk4ErrorReadStr:
ff8120 2a 2a 2a 20 44 49 53 4b 34 3a 20 52 45 41 44 20 45 52 52 4f 52 00

ff8136 ; DATA BeepTimes:
ff8136 dc
ff8137 dc
ff8138 dc
ff8139 3c
ff813a 3c
ff813b 3c
ff813c 3c
ff813d 3c

ff813e ; DATA CMD_Help:
ff813e 3f 00

ff8140 ; DATA CMD_Ascii:
ff8140 61 73 63 69 69 00

ff8146 ; DATA CMD_Beep:
ff8146 62 65 65 70 00

ff814b ; DATA CMD_Catalog:
ff814b 63 61 74 61 6c 6f 67 00

ff8153 ; DATA CMD_Clear:
ff8153 63 6c 65 61 72 00

ff8159 ; DATA CMD_Echo:
ff8159 65 63 68 6f 00

ff815e ; DATA CMD_Load:
ff815e 6c 6f 61 64 00

ff8163 ; DATA CMD_Peek:
ff8163 70 65 65 6b 00

ff8168 ; DATA CMD_Poke:
ff8168 70 6f 6b 65 00

ff816d ; DATA CMD_Reset:
ff816d 72 65 73 65 74 00

ff8173 ; DATA CMD_Text:
ff8173 74 65 78 74 00

ff8178 ; DATA CMD_Wait:
ff8178 77 61 69 74 00

ff817d ; DATA CMD_View:
ff817d 76 69 65 77 00

ff8182 ; DATA CMD_2Plus:
ff8182 32 2b 00

ff8185 ; DATA CMD_Zzz:
ff8185 7a 7a 7a 00

ff8189 ; DATA CommandList:
ff8189 3e 81 ff
ff818c 11 09 ff
ff818f 40 81 ff
ff8192 b0 09 ff
ff8195 4b 81 ff
ff8198 21 0a ff
ff819b 46 81 ff
ff819e 9e 06 ff
ff81a1 53 81 ff
ff81a4 b2 0a ff
ff81a7 59 81 ff
ff81aa d7 0a ff
ff81ad 5e 81 ff
ff81b0 ea 0a ff
ff81b3 63 81 ff
ff81b6 bd 0c ff
ff81b9 68 81 ff
ff81bc d8 0d ff
ff81bf 6d 81 ff
ff81c2 64 0e ff
ff81c5 73 81 ff
ff81c8 6a 0e ff
ff81cb 7d 81 ff
ff81ce cf 0b ff
ff81d1 78 81 ff
ff81d4 bb 06 ff
ff81d7 82 81 ff
ff81da d8 0e ff
ff81dd 85 81 ff
ff81e0 e7 0e ff

ff81e3 ; DATA TestStr1:
ff81e3 31 00

ff81e5 ; DATA TestStr2:
ff81e5 31 30 00

ff81e8 ; DATA TestStr3:
ff81e8 31 30 30 00

ff81ec ; DATA TestStr4:
ff81ec 31 32 00

ff81ef ; DATA TestStr5:
ff81ef 31 32 33 00

ff81f3 ; DATA TestStr6:
ff81f3 35 34 33 32 31 00

ff81f9 ; DATA TestStr7:
ff81f9 37 36 35 34 33 32 31 00

; 32246 BYTES of FILLER

fffff7 ; DATA Vectors:
fffff7 00 00 00
fffffa 00 00 ff
fffffd 00 00 00

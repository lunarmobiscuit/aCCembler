0000fe          ; GLOBAL @TXTPTR
0003ff          ; GLOBAL @TXTROW
0003fe          ; GLOBAL @TXTPOS
000200          ; GLOBAL @TXTBUFFER
000280          ; GLOBAL @TXTBUFFER2
0003fd          ; GLOBAL @DISPMODE

ff0000 ; SUB Start:
ff0000 4f 4c 00 02 ff                      jmp.a24 $ff0200       ; Reset

ff0005 ; DATA ROMVectors:
ff0005 30 07 ff
ff0008 98 08 ff
ff000b cf 06 ff
ff000e e0 06 ff
ff0011 f3 06 ff
ff0014 03 07 ff
ff0017 8e 06 ff
ff001a b9 06 ff
ff001d 90 05 ff
ff0020 78 05 ff
ff0023 62 05 ff
ff0026 3f 05 ff
ff0029 cd 07 ff
ff002c 8a 07 ff
ff002f a2 07 ff
ff0032 f6 07 ff
ff0035 b7 04 ff
ff0038 e6 04 ff
ff003b 0b 05 ff
ff003e 24 05 ff
ff0041 a8 05 ff
ff0044 be 05 ff
ff0047 2b 06 ff
ff004a 6d 06 ff
ff004d 7a 06 ff
ff0050 13 07 ff
ff0053 ab 08 ff

; 170 BYTES of FILLER

ff0100 ; DATA DOSVectors:
ff0100 c0 08 ff
ff0103 d3 08 ff
ff0106 dd 08 ff
ff0109 01 09 ff
ff010c 17 09 ff
ff010f 24 09 ff

; 238 BYTES of FILLER

ff0200 ; SUB Reset:
ff0200 d8                                  cld
ff0201 8d 83 c0                            sta $c083             ; LANGSET
ff0204 8d 83 c0                            sta $c083             ; LANGSET
ff0207 1f                                  r16
ff0208 fc                                  sws
ff0209 1f a2 ff fe                         ldx.w #$feff          ; TOP_OF_STACK
ff020d 1f 9a                               txs.w
ff020f ad 51 c0                            lda $c051             ; TXTSET
ff0212 ad 54 c0                            lda $c054             ; TXTPAGE1
ff0215 ad 58 c0                            lda $c058             ; SETAN0
ff0218 ad 5a c0                            lda $c05a             ; SETAN1
ff021b ad 5d c0                            lda $c05d             ; CLRAN2
ff021e ad 5f c0                            lda $c05f             ; CLRAN3
ff0221 ad ff cf                            lda $cfff             ; CLRROM
ff0224 2c 10 c0                            bit $c010             ; KBDSTRB
ff0227 a9 02                               lda #$2
ff0229 8d ff 03                            sta $03ff             ; TXTROW
ff022c 9c fe 03                            stz $03fe             ; TXTPOS
ff022f a2 00                               ldx #$0
ff0231 a9 01                               lda #$1               ; DISP_TEXT_2
ff0233 8d fd 03                            sta $03fd             ; DISPMODE
ff0236 4f 20 a2 07 ff                      jsr.a24 $ff07a2       ; ClearScreen
ff023b 9c fd 03                            stz $03fd             ; DISPMODE
ff023e a2 00                               ldx #$0
ff0240 4f 20 a2 07 ff                      jsr.a24 $ff07a2       ; ClearScreen
ff0245 4f 20 ab 08 ff                      jsr.a24 $ff08ab       ; AppleII4

ff024a ; SUB EchoKeys:
ff024a 4f 20 31 08 ff                      jsr.a24 $ff0831       ; ClearInputBuffers
ff024f                 LOOPff024f_start:
ff024f                                 ;; LOOP {
ff024f                 LOOPff024f_loop:
ff024f 4f 20 a9 04 ff                      jsr.a24 $ff04a9       ; ScreenBase
ff0254 ad fe 03                            lda $03fe             ; TXTPOS
ff0257                                 ;; IF == {
ff0257 d0 0c                               bne +12               ; IFff0257_end [ff0265]
ff0259 a9 ba                               lda #$ba
ff025b 4f 20 cf 06 ff                      jsr.a24 $ff06cf       ; PrintChar
ff0260 4f 20 f3 06 ff                      jsr.a24 $ff06f3       ; PrintCursor
ff0265                 IFff0257_end:
ff0265                 LOOPff0265_start:
ff0265                                 ;; LOOP {
ff0265                 LOOPff0265_loop:
ff0265 2c 00 c0                            bit $c000             ; KBD
ff0268                                 ;; IF - {
ff0268 10 04                               bpl +4                ; IFff0268_end [ff026e]
ff026a                                 ;; BREAK
ff026a 4f 80 02 00                         bra.a24 +2            ; loopff0265_end [ff0270]
ff026e                 IFff0268_end:
ff026e 80 f5                               bra -11               ; LOOPff0265_loop [ff0265]
ff0270                 LOOPff0265_end:
ff0270 ad 00 c0                            lda $c000             ; KBD
ff0273 2c 10 c0                            bit $c010             ; KBDSTRB
ff0276                                 ;; IF == 141 {
ff0276 c9 8d                               cmp #$8d
ff0278 d0 1b                               bne +27               ; IFff0276_end [ff0295]
ff027a 4f 20 03 07 ff                      jsr.a24 $ff0703       ; ClearCursor
ff027f 4f 20 cd 07 ff                      jsr.a24 $ff07cd       ; NextLine
ff0284 4f 20 5c 08 ff                      jsr.a24 $ff085c       ; CurrentToPrevInputBuffer
ff0289 4f 20 55 03 ff                      jsr.a24 $ff0355       ; CommandLine
ff028e 4f 20 3f 08 ff                      jsr.a24 $ff083f       ; ClearCurrentInputBuffer
ff0293                                 ;; CONTINUE
ff0293 80 ba                               bra -70               ; loopff024f_start [ff024f]
ff0295                 IFff0276_end:
ff0295                                 ;; IF == 255 {
ff0295 c9 ff                               cmp #$ff
ff0297 d0 23                               bne +35               ; IFff0295_end [ff02bc]
ff0299                                 ;; IF > 1 {
ff0299 c9 01                               cmp #$1
ff029b f0 1d                               beq +29               ; IFff0299_end [ff02ba]
ff029d 90 1b                               bcc +27               ; IFff0299_end [ff02ba]
ff029f 4f 20 03 07 ff                      jsr.a24 $ff0703       ; ClearCursor
ff02a4 a9 a0                               lda #$a0
ff02a6 ac fe 03                            ldy $03fe             ; TXTPOS
ff02a9 88                                  dey
ff02aa 91 fe                               sta ($fe),Y           ; TXTPTR
ff02ac 88                                  dey
ff02ad a9 00                               lda #$0
ff02af 99 00 02                            sta $0200,Y           ; TXTBUFFER
ff02b2 ce fe 03                            dec $03fe             ; TXTPOS
ff02b5 4f 20 f3 06 ff                      jsr.a24 $ff06f3       ; PrintCursor
ff02ba                 IFff0299_end:
ff02ba                                 ;; CONTINUE
ff02ba 80 93                               bra -109              ; loopff024f_start [ff024f]
ff02bc                 IFff0295_end:
ff02bc                                 ;; IF == 136 {
ff02bc c9 88                               cmp #$88
ff02be d0 25                               bne +37               ; IFff02bc_end [ff02e5]
ff02c0                                 ;; IF > 1 {
ff02c0 c9 01                               cmp #$1
ff02c2 f0 1d                               beq +29               ; IFff02c0_end [ff02e1]
ff02c4 90 1b                               bcc +27               ; IFff02c0_end [ff02e1]
ff02c6 4f 20 03 07 ff                      jsr.a24 $ff0703       ; ClearCursor
ff02cb a9 a0                               lda #$a0
ff02cd ac fe 03                            ldy $03fe             ; TXTPOS
ff02d0 88                                  dey
ff02d1 91 fe                               sta ($fe),Y           ; TXTPTR
ff02d3 88                                  dey
ff02d4 a9 00                               lda #$0
ff02d6 99 00 02                            sta $0200,Y           ; TXTBUFFER
ff02d9 ce fe 03                            dec $03fe             ; TXTPOS
ff02dc 4f 20 f3 06 ff                      jsr.a24 $ff06f3       ; PrintCursor
ff02e1                 IFff02c0_end:
ff02e1                                 ;; CONTINUE
ff02e1 4f 80 6a ff                         bra.a24 -150          ; loopff024f_start [ff024f]
ff02e5                 IFff02bc_end:
ff02e5                                 ;; IF == 149 {
ff02e5 c9 95                               cmp #$95
ff02e7 d0 0f                               bne +15               ; IFff02e5_end [ff02f8]
ff02e9                                 ;; IF > 1 {
ff02e9 c9 01                               cmp #$1
ff02eb f0 07                               beq +7                ; IFff02e9_end [ff02f4]
ff02ed 90 05                               bcc +5                ; IFff02e9_end [ff02f4]
ff02ef 4f 20 43 04 ff                      jsr.a24 $ff0443       ; CompleteCommand
ff02f4                 IFff02e9_end:
ff02f4                                 ;; CONTINUE
ff02f4 4f 80 57 ff                         bra.a24 -169          ; loopff024f_start [ff024f]
ff02f8                 IFff02e5_end:
ff02f8                                 ;; IF == 139 {
ff02f8 c9 8b                               cmp #$8b
ff02fa d0 13                               bne +19               ; IFff02f8_end [ff030f]
ff02fc 4f 20 4d 08 ff                      jsr.a24 $ff084d       ; PrevToCurrentInputBuffer
ff0301 4f 20 6b 08 ff                      jsr.a24 $ff086b       ; InputBufferToTextScreen
ff0306 4f 20 f3 06 ff                      jsr.a24 $ff06f3       ; PrintCursor
ff030b                                 ;; CONTINUE
ff030b 4f 80 40 ff                         bra.a24 -192          ; loopff024f_start [ff024f]
ff030f                 IFff02f8_end:
ff030f                                 ;; IF == 155 {
ff030f c9 9b                               cmp #$9b
ff0311 d0 21                               bne +33               ; IFff030f_end [ff0334]
ff0313 ae ff 03                            ldx $03ff             ; TXTROW
ff0316 4f 20 8a 07 ff                      jsr.a24 $ff078a       ; ClearRow
ff031b 4f 20 3f 08 ff                      jsr.a24 $ff083f       ; ClearCurrentInputBuffer
ff0320 a9 00                               lda #$0
ff0322 8d fe 03                            sta $03fe             ; TXTPOS
ff0325 ad fd 03                            lda $03fd             ; DISPMODE
ff0328                                 ;; IF != {
ff0328 f0 06                               beq +6                ; IFff0328_end [ff0330]
ff032a ad 54 c0                            lda $c054             ; TXTPAGE1
ff032d 9c fd 03                            stz $03fd             ; DISPMODE
ff0330                 IFff0328_end:
ff0330                                 ;; CONTINUE
ff0330 4f 80 1b ff                         bra.a24 -229          ; loopff024f_start [ff024f]
ff0334                 IFff030f_end:
ff0334                                 ;; IF > 159 {
ff0334 c9 9f                               cmp #$9f
ff0336 f0 19                               beq +25               ; IFff0334_end [ff0351]
ff0338 90 17                               bcc +23               ; IFff0334_end [ff0351]
ff033a ac fe 03                            ldy $03fe             ; TXTPOS
ff033d 4f 20 cf 06 ff                      jsr.a24 $ff06cf       ; PrintChar
ff0342 c0 28                               cpy #$28
ff0344                                 ;; IF < {
ff0344 b0 0b                               bcs +11               ; IFff0344_end [ff0351]
ff0346 29 7f                               and #$7f
ff0348 88                                  dey
ff0349 99 00 02                            sta $0200,Y           ; TXTBUFFER
ff034c 4f 20 f3 06 ff                      jsr.a24 $ff06f3       ; PrintCursor
ff0351                 IFff0344_end:
ff0351                 IFff0334_end:
ff0351 4f 80 fa fe                         bra.a24 -262          ; LOOPff024f_loop [ff024f]
ff0355                 LOOPff024f_end:

ff0355 ; SUB CommandLine:
000004          ; VAR @I
000005          ; VAR @I6
ff0355 1f a9 00 02                         lda.w #$200           ; TXTBUFFER
ff0359 2f 8d 01 d0                         sta.t $00d001
ff035d a9 00                               lda #$0
ff035f 8d 00 d0                            sta $d000
ff0362 a0 03                               ldy #$3
ff0364 a2 00                               ldx #$0
ff0366                 LOOPff0366_start:
ff0366                                 ;; LOOP {
ff0366                 LOOPff0366_loop:
ff0366 bd 00 02                            lda $0200,X           ; TXTBUFFER
ff0369                                 ;; IF == 0 {
ff0369 c9 00                               cmp #$0
ff036b d0 04                               bne +4                ; IFff0369_end [ff0371]
ff036d                                 ;; BREAK
ff036d 4f 80 40 00                         bra.a24 +64           ; loopff0366_end [ff03b1]
ff0371                 IFff0369_end:
ff0371 c9 20                               cmp #$20
ff0373                                 ;; IF == {
ff0373 d0 31                               bne +49               ; IFff0373_end [ff03a6]
ff0375                 LOOPff0375_start:
ff0375                                 ;; LOOP {
ff0375                 LOOPff0375_loop:
ff0375 bd 00 02                            lda $0200,X           ; TXTBUFFER
ff0378                                 ;; IF == 0 {
ff0378 c9 00                               cmp #$0
ff037a d0 04                               bne +4                ; IFff0378_end [ff0380]
ff037c                                 ;; BREAK
ff037c 4f 80 10 00                         bra.a24 +16           ; loopff0375_end [ff0390]
ff0380                 IFff0378_end:
ff0380 c9 20                               cmp #$20
ff0382                                 ;; IF == {
ff0382 d0 06                               bne +6                ; IFff0382_end [ff038a]
ff0384 a9 00                               lda #$0
ff0386 9d 00 02                            sta $0200,X           ; TXTBUFFER
ff0389 e8                                  inx
ff038a                 IFff0382_end:
ff038a                                 ;; BREAK
ff038a 4f 80 02 00                         bra.a24 +2            ; loopff0375_end [ff0390]
ff038e 80 e5                               bra -27               ; LOOPff0375_loop [ff0375]
ff0390                 LOOPff0375_end:
ff0390 1f a9 00 02                         lda.w #$200           ; TXTBUFFER
ff0394 18                                  clc
ff0395 1f db                               adx.w
ff0397 2f 99 01 d0                         sta.t $00d001,Y
ff039b c8                                  iny
ff039c c8                                  iny
ff039d c8                                  iny
ff039e ee 00 d0                            inc $d000
ff03a1 e8                                  inx
ff03a2                                 ;; BREAK
ff03a2 4f 80 0b 00                         bra.a24 +11           ; loopff0366_end [ff03b1]
ff03a6                 IFff0373_end:
ff03a6 e8                                  inx
ff03a7 e0 7f                               cpx #$7f
ff03a9                                 ;; IF >= {
ff03a9 90 04                               bcc +4                ; IFff03a9_end [ff03af]
ff03ab                                 ;; BREAK
ff03ab 4f 80 02 00                         bra.a24 +2            ; loopff0366_end [ff03b1]
ff03af                 IFff03a9_end:
ff03af 80 b5                               bra -75               ; LOOPff0366_loop [ff0366]
ff03b1                 LOOPff0366_end:
ff03b1                 LOOPff03b1_start:
ff03b1                                 ;; LOOP {
ff03b1                 LOOPff03b1_loop:
ff03b1 bd 00 02                            lda $0200,X           ; TXTBUFFER
ff03b4                                 ;; IF == 0 {
ff03b4 c9 00                               cmp #$0
ff03b6 d0 04                               bne +4                ; IFff03b4_end [ff03bc]
ff03b8                                 ;; BREAK
ff03b8 4f 80 41 00                         bra.a24 +65           ; loopff03b1_end [ff03fd]
ff03bc                 IFff03b4_end:
ff03bc c9 2c                               cmp #$2c
ff03be                                 ;; IF == {
ff03be d0 32                               bne +50               ; IFff03be_end [ff03f2]
ff03c0 a9 00                               lda #$0
ff03c2 9d 00 02                            sta $0200,X           ; TXTBUFFER
ff03c5 e8                                  inx
ff03c6                 LOOPff03c6_start:
ff03c6                                 ;; LOOP {
ff03c6                 LOOPff03c6_loop:
ff03c6 bd 00 02                            lda $0200,X           ; TXTBUFFER
ff03c9                                 ;; IF == 0 {
ff03c9 c9 00                               cmp #$0
ff03cb d0 04                               bne +4                ; IFff03c9_end [ff03d1]
ff03cd                                 ;; BREAK
ff03cd 4f 80 10 00                         bra.a24 +16           ; loopff03c6_end [ff03e1]
ff03d1                 IFff03c9_end:
ff03d1 c9 20                               cmp #$20
ff03d3                                 ;; IF == {
ff03d3 d0 06                               bne +6                ; IFff03d3_end [ff03db]
ff03d5 a9 00                               lda #$0
ff03d7 9d 00 02                            sta $0200,X           ; TXTBUFFER
ff03da e8                                  inx
ff03db                 IFff03d3_end:
ff03db                                 ;; BREAK
ff03db 4f 80 02 00                         bra.a24 +2            ; loopff03c6_end [ff03e1]
ff03df 80 e5                               bra -27               ; LOOPff03c6_loop [ff03c6]
ff03e1                 LOOPff03c6_end:
ff03e1 1f a9 00 02                         lda.w #$200           ; TXTBUFFER
ff03e5 18                                  clc
ff03e6 1f db                               adx.w
ff03e8 2f 99 01 d0                         sta.t $00d001,Y
ff03ec c8                                  iny
ff03ed c8                                  iny
ff03ee c8                                  iny
ff03ef ee 00 d0                            inc $d000
ff03f2                 IFff03be_end:
ff03f2 e8                                  inx
ff03f3 e0 7f                               cpx #$7f
ff03f5                                 ;; IF >= {
ff03f5 90 04                               bcc +4                ; IFff03f5_end [ff03fb]
ff03f7                                 ;; BREAK
ff03f7 4f 80 02 00                         bra.a24 +2            ; loopff03b1_end [ff03fd]
ff03fb                 IFff03f5_end:
ff03fb 80 b4                               bra -76               ; LOOPff03b1_loop [ff03b1]
ff03fd                 LOOPff03b1_end:
ff03fd 2f ad 01 d0                         lda.t $00d001
ff0401 2f 8d 00 d7                         sta.t $00d700
ff0405                 FORff0405_start:
ff0405                                 ;; FOR @I = 0 TO 14 {
ff0405 a2 00                               ldx #$0
ff0407 86 04                               stx $04
ff0409                 FORff0405_loop:
ff0409 a5 04                               lda $04               ; I
ff040b                       ;; A <<= 2 
ff040b 0a                                  asl
ff040c 0a                                  asl
ff040d 85 05                               sta $05               ; I6
ff040f a5 04                               lda $04               ; I
ff0411                       ;; A <<= 1 
ff0411 0a                                  asl
ff0412 18                                  clc
ff0413 65 05                               adc $05               ; I6
ff0415 85 05                               sta $05               ; I6
ff0417 aa                                  tax
ff0418 6f bd a5 81 ff                      lda.t.a24 $ff81a5,X   ; CommandList
ff041d 2f 8d 03 d7                         sta.t $00d703
ff0421 4f 20 b7 04 ff                      jsr.a24 $ff04b7       ; CompareText
ff0426                                 ;; IF - {
ff0426 10 11                               bpl +17               ; IFff0426_end [ff0439]
ff0428 a6 05                               ldx $05               ; I6
ff042a 6f bd a8 81 ff                      lda.t.a24 $ff81a8,X   ; CommandList
ff042f 2f 85 00                            sta.t $00
ff0432 4f 5c 00 00 00                      jsr.a24 ($00)
ff0437 4f 60                               rts.a24
ff0439                 IFff0426_end:
ff0439 e6 04                               inc $04
ff043b a6 04                               ldx $04
ff043d e0 0f                               cpx #$f
ff043f d0 c8                               bne -56               ; FORff0405_loop [ff0409]
ff0441                 FORff0405_end:
ff0441 4f 60                               rts.a24

ff0443 ; SUB CompleteCommand:
000004          ; VAR @I
000005          ; VAR @I6
ff0443 1f a9 00 02                         lda.w #$200           ; TXTBUFFER
ff0447 2f 8d 00 d7                         sta.t $00d700
ff044b                 FORff044b_start:
ff044b                                 ;; FOR @I = 0 TO 14 {
ff044b a2 00                               ldx #$0
ff044d 86 04                               stx $04
ff044f                 FORff044b_loop:
ff044f a5 04                               lda $04               ; I
ff0451                       ;; A <<= 2 
ff0451 0a                                  asl
ff0452 0a                                  asl
ff0453 85 05                               sta $05               ; I6
ff0455 a5 04                               lda $04               ; I
ff0457                       ;; A <<= 1 
ff0457 0a                                  asl
ff0458 18                                  clc
ff0459 65 05                               adc $05               ; I6
ff045b 85 05                               sta $05               ; I6
ff045d aa                                  tax
ff045e 6f bd a5 81 ff                      lda.t.a24 $ff81a5,X   ; CommandList
ff0463 2f 8d 03 d7                         sta.t $00d703
ff0467 4f 20 e6 04 ff                      jsr.a24 $ff04e6       ; CompareStartOfText
ff046c                                 ;; IF - {
ff046c 10 31                               bpl +49               ; IFff046c_end [ff049f]
ff046e a6 05                               ldx $05               ; I6
ff0470 6f bd a5 81 ff                      lda.t.a24 $ff81a5,X   ; CommandList
ff0475 2f 8d 00 d7                         sta.t $00d700
ff0479 1f a9 00 02                         lda.w #$200           ; TXTBUFFER
ff047d 2f 8d 03 d7                         sta.t $00d703
ff0481 4f 20 0b 05 ff                      jsr.a24 $ff050b       ; CopyString
ff0486 1f a5 fe                            lda.w $fe             ; TXTPTR
ff0489 1f 1a                               inc.w
ff048b 2f 8d 03 d7                         sta.t $00d703
ff048f 4f 20 24 05 ff                      jsr.a24 $ff0524       ; CopyStringHigh
ff0494 c8                                  iny
ff0495 8c fe 03                            sty $03fe             ; TXTPOS
ff0498 4f 20 f3 06 ff                      jsr.a24 $ff06f3       ; PrintCursor
ff049d 4f 60                               rts.a24
ff049f                 IFff046c_end:
ff049f e6 04                               inc $04
ff04a1 a6 04                               ldx $04
ff04a3 e0 0f                               cpx #$f
ff04a5 d0 a8                               bne -88               ; FORff044b_loop [ff044f]
ff04a7                 FORff044b_end:
ff04a7 4f 60                               rts.a24

ff04a9 ; SUB ScreenBase:
ff04a9                       ;; X = M@$3ff 
ff04a9 ae ff 03                            ldx $03ff
ff04ac 2b                                  xsl
ff04ad 5f bd 00 80 ff                      lda.w.a24 $ff8000,X   ; TextScreenBase
ff04b2 1f 85 fe                            sta.w $fe             ; TXTPTR
ff04b5 4f 60                               rts.a24

ff04b7 ; SUB CompareText:
00d700-00d702   ; VAR @STR_A
00d703-00d705   ; VAR @STR_B
ff04b7                 FORff04b7_start:
ff04b7                                 ;; FOR Y = 0 TO 127 {
ff04b7 a0 00                               ldy #$0
ff04b9                 FORff04b7_loop:
ff04b9 2f ae 00 d7                         ldx.t $00d700         ; STR_A
ff04bd 4f ab                               lda.a24 XY
ff04bf 2f ae 03 d7                         ldx.t $00d703         ; STR_B
ff04c3 4f cb                               cmp.a24 XY
ff04c5                                 ;; IF != {
ff04c5 f0 04                               beq +4                ; IFff04c5_end [ff04cb]
ff04c7 a9 00                               lda #$0
ff04c9 4f 60                               rts.a24
ff04cb                 IFff04c5_end:
ff04cb                                 ;; IF == 0 {
ff04cb c9 00                               cmp #$0
ff04cd d0 0e                               bne +14               ; IFff04cb_end [ff04dd]
ff04cf 4f ab                               lda.a24 XY
ff04d1                                 ;; IF == 0 {
ff04d1 c9 00                               cmp #$0
ff04d3 d0 04                               bne +4                ; IFff04d1_end [ff04d9]
ff04d5 a9 ff                               lda #$ff
ff04d7 4f 60                               rts.a24
ff04d9                 IFff04d1_end:
ff04d9 a9 00                               lda #$0
ff04db 4f 60                               rts.a24
ff04dd                 IFff04cb_end:
ff04dd c8                                  iny
ff04de c0 80                               cpy #$80
ff04e0 d0 d7                               bne -41               ; FORff04b7_loop [ff04b9]
ff04e2                 FORff04b7_end:
ff04e2 a9 00                               lda #$0
ff04e4 4f 60                               rts.a24

ff04e6 ; SUB CompareStartOfText:
00d700-00d702   ; VAR @STR_A
00d703-00d705   ; VAR @STR_B
ff04e6                 FORff04e6_start:
ff04e6                                 ;; FOR Y = 0 TO 127 {
ff04e6 a0 00                               ldy #$0
ff04e8                 FORff04e6_loop:
ff04e8 2f ae 00 d7                         ldx.t $00d700         ; STR_A
ff04ec 4f ab                               lda.a24 XY
ff04ee                                 ;; IF == 0 {
ff04ee c9 00                               cmp #$0
ff04f0 d0 04                               bne +4                ; IFff04ee_end [ff04f6]
ff04f2 a9 ff                               lda #$ff
ff04f4 4f 60                               rts.a24
ff04f6                 IFff04ee_end:
ff04f6 2f ae 03 d7                         ldx.t $00d703         ; STR_B
ff04fa 4f cb                               cmp.a24 XY
ff04fc                                 ;; IF != {
ff04fc f0 04                               beq +4                ; IFff04fc_end [ff0502]
ff04fe a9 00                               lda #$0
ff0500 4f 60                               rts.a24
ff0502                 IFff04fc_end:
ff0502 c8                                  iny
ff0503 c0 80                               cpy #$80
ff0505 d0 e1                               bne -31               ; FORff04e6_loop [ff04e8]
ff0507                 FORff04e6_end:
ff0507 a9 00                               lda #$0
ff0509 4f 60                               rts.a24

ff050b ; SUB CopyString:
00d700-00d702   ; VAR @STR_FROM
00d703-00d705   ; VAR @STR_TO
ff050b                 FORff050b_start:
ff050b                                 ;; FOR Y = 0 TO 127 {
ff050b a0 00                               ldy #$0
ff050d                 FORff050b_loop:
ff050d 2f ae 00 d7                         ldx.t $00d700         ; STR_FROM
ff0511 4f ab                               lda.a24 XY
ff0513                                 ;; IF == {
ff0513 d0 02                               bne +2                ; IFff0513_end [ff0517]
ff0515 4f 60                               rts.a24
ff0517                 IFff0513_end:
ff0517 2f ae 03 d7                         ldx.t $00d703         ; STR_TO
ff051b 4f bb                               sta.a24 XY
ff051d c8                                  iny
ff051e c0 80                               cpy #$80
ff0520 d0 eb                               bne -21               ; FORff050b_loop [ff050d]
ff0522                 FORff050b_end:
ff0522 4f 60                               rts.a24

ff0524 ; SUB CopyStringHigh:
00d700-00d702   ; VAR @STR_FROM
00d703-00d705   ; VAR @STR_TO
ff0524                 FORff0524_start:
ff0524                                 ;; FOR Y = 0 TO 127 {
ff0524 a0 00                               ldy #$0
ff0526                 FORff0524_loop:
ff0526 2f ae 00 d7                         ldx.t $00d700         ; STR_FROM
ff052a 4f ab                               lda.a24 XY
ff052c                                 ;; IF == {
ff052c d0 02                               bne +2                ; IFff052c_end [ff0530]
ff052e 4f 60                               rts.a24
ff0530                 IFff052c_end:
ff0530 09 80                               ora #$80
ff0532 2f ae 03 d7                         ldx.t $00d703         ; STR_TO
ff0536 4f bb                               sta.a24 XY
ff0538 c8                                  iny
ff0539 c0 80                               cpy #$80
ff053b d0 e9                               bne -23               ; FORff0524_loop [ff0526]
ff053d                 FORff0524_end:
ff053d 4f 60                               rts.a24

ff053f ; SUB PrintHex24:
ff053f 2f 8d fc d7                         sta.t $00d7fc
ff0543 2f 1b                               sr8.t
ff0545 2f 1b                               sr8.t
ff0547 4f 20 78 05 ff                      jsr.a24 $ff0578       ; PrintHexByte
ff054c 2f ad fc d7                         lda.t $00d7fc
ff0550 1f 1b                               sr8.w
ff0552 4f 20 78 05 ff                      jsr.a24 $ff0578       ; PrintHexByte
ff0557 2f ad fc d7                         lda.t $00d7fc
ff055b 4f 20 78 05 ff                      jsr.a24 $ff0578       ; PrintHexByte
ff0560 4f 60                               rts.a24

ff0562 ; SUB PrintHexWord:
ff0562 1f 8d fd d7                         sta.w $00d7fd
ff0566 1f 1b                               sr8.w
ff0568 4f 20 78 05 ff                      jsr.a24 $ff0578       ; PrintHexByte
ff056d 1f ad fd d7                         lda.w $00d7fd
ff0571 4f 20 78 05 ff                      jsr.a24 $ff0578       ; PrintHexByte
ff0576 4f 60                               rts.a24

ff0578 ; SUB PrintHexByte:
ff0578 8d ff d7                            sta $d7ff
ff057b 4a                                  lsr
ff057c 4a                                  lsr
ff057d 4a                                  lsr
ff057e 4a                                  lsr
ff057f 4f 20 90 05 ff                      jsr.a24 $ff0590       ; PrintHexDigit
ff0584 ad ff d7                            lda $d7ff
ff0587 29 0f                               and #$f
ff0589 4f 20 90 05 ff                      jsr.a24 $ff0590       ; PrintHexDigit
ff058e 4f 60                               rts.a24

ff0590 ; SUB PrintHexDigit:
ff0590 c9 0a                               cmp #$a
ff0592                                 ;; IF < {
ff0592 b0 04                               bcs +4                ; IFff0592_else [ff0598]
ff0594 69 b0                               adc #$b0
ff0596 80 03                               bra +3                ; IFff0592_end [ff059b]
ff0598                 IFff0592_else:
ff0598                                 ;; ELSE
ff0598 18                                  clc
ff0599 69 b7                               adc #$b7
ff059b                 IFff0592_end:
ff059b 1f a6 fe                            ldx.w $fe             ; TXTPTR
ff059e ac fe 03                            ldy $03fe             ; TXTPOS
ff05a1 4f bb                               sta.a24 XY
ff05a3 ee fe 03                            inc $03fe             ; TXTPOS
ff05a6 4f 60                               rts.a24

ff05a8 ; SUB ParseNumber:
00d700-00d702   ; VAR @STR
ff05a8 2f ae 00 d7                         ldx.t $00d700         ; STR
ff05ac 4f 7b                               lda.a24 X
ff05ae c9 24                               cmp #$24
ff05b0                                 ;; IF == {
ff05b0 d0 07                               bne +7                ; IFff05b0_else [ff05b9]
ff05b2 4f 4c be 05 ff                      jmp.a24 $ff05be       ; ParseHexNumber
ff05b7 80 05                               bra +5                ; IFff05b0_end [ff05be]
ff05b9                 IFff05b0_else:
ff05b9                                 ;; ELSE
ff05b9 4f 4c 2b 06 ff                      jmp.a24 $ff062b       ; ParseDecimalNumber
ff05be                 IFff05b0_end:

ff05be ; SUB ParseHexNumber:
00007d-00007f   ; VAR @VAL
ff05be 2f 64 7d                            stz.t $7d             ; VAL
ff05c1 a0 01                               ldy #$1
ff05c3                 LOOPff05c3_start:
ff05c3                                 ;; LOOP {
ff05c3                 LOOPff05c3_loop:
ff05c3 4f ab                               lda.a24 XY
ff05c5                                 ;; IF == {
ff05c5 d0 04                               bne +4                ; IFff05c5_end [ff05cb]
ff05c7                                 ;; BREAK
ff05c7 4f 80 5b 00                         bra.a24 +91           ; loopff05c3_end [ff0626]
ff05cb                 IFff05c5_end:
ff05cb 2f a5 7d                            lda.t $7d             ; VAL
ff05ce 2f 0a                               asl.t
ff05d0 2f 0a                               asl.t
ff05d2 2f 0a                               asl.t
ff05d4 2f 0a                               asl.t
ff05d6 2f 85 7d                            sta.t $7d             ; VAL
ff05d9 4f ab                               lda.a24 XY
ff05db c9 30                               cmp #$30
ff05dd                                 ;; IF >= {
ff05dd 90 41                               bcc +65               ; IFff05dd_end [ff0620]
ff05df c9 39                               cmp #$39
ff05e1                                 ;; IF <= {
ff05e1 f0 02                               beq +2                ; IFff05e1_end_eq [ff05e5]
ff05e3 b0 0d                               bcs +13               ; IFff05e1_end [ff05f2]
ff05e5                 IFff05e1_end_eq:
ff05e5 38                                  sec
ff05e6 e9 30                               sbc #$30
ff05e8 18                                  clc
ff05e9 2f 65 7d                            adc.t $7d             ; VAL
ff05ec 2f 85 7d                            sta.t $7d             ; VAL
ff05ef c8                                  iny
ff05f0                                 ;; CONTINUE
ff05f0 80 d1                               bra -47               ; loopff05c3_start [ff05c3]
ff05f2                 IFff05e1_end:
ff05f2 c9 41                               cmp #$41
ff05f4                                 ;; IF >= {
ff05f4 90 2a                               bcc +42               ; IFff05f4_end [ff0620]
ff05f6 c9 47                               cmp #$47
ff05f8                                 ;; IF <= {
ff05f8 f0 02                               beq +2                ; IFff05f8_end_eq [ff05fc]
ff05fa b0 0d                               bcs +13               ; IFff05f8_end [ff0609]
ff05fc                 IFff05f8_end_eq:
ff05fc 38                                  sec
ff05fd e9 37                               sbc #$37
ff05ff 18                                  clc
ff0600 2f 65 7d                            adc.t $7d             ; VAL
ff0603 2f 85 7d                            sta.t $7d             ; VAL
ff0606 c8                                  iny
ff0607                                 ;; CONTINUE
ff0607 80 ba                               bra -70               ; loopff05c3_start [ff05c3]
ff0609                 IFff05f8_end:
ff0609 c9 61                               cmp #$61
ff060b                                 ;; IF >= {
ff060b 90 13                               bcc +19               ; IFff060b_end [ff0620]
ff060d c9 67                               cmp #$67
ff060f                                 ;; IF <= {
ff060f f0 02                               beq +2                ; IFff060f_end_eq [ff0613]
ff0611 b0 0d                               bcs +13               ; IFff060f_end [ff0620]
ff0613                 IFff060f_end_eq:
ff0613 38                                  sec
ff0614 e9 57                               sbc #$57
ff0616 18                                  clc
ff0617 2f 65 7d                            adc.t $7d             ; VAL
ff061a 2f 85 7d                            sta.t $7d             ; VAL
ff061d c8                                  iny
ff061e                                 ;; CONTINUE
ff061e 80 a3                               bra -93               ; loopff05c3_start [ff05c3]
ff0620                 IFff060f_end:
ff0620                 IFff060b_end:
ff0620                 IFff05f4_end:
ff0620                 IFff05dd_end:
ff0620                                 ;; BREAK
ff0620 4f 80 02 00                         bra.a24 +2            ; loopff05c3_end [ff0626]
ff0624 80 9d                               bra -99               ; LOOPff05c3_loop [ff05c3]
ff0626                 LOOPff05c3_end:
ff0626 2f a5 7d                            lda.t $7d             ; VAL
ff0629 4f 60                               rts.a24

ff062b ; SUB ParseDecimalNumber:
00007d-00007f   ; VAR @VAL
00007a-00007c   ; VAR @STR
ff062b 2f 64 7d                            stz.t $7d             ; VAL
ff062e 2f 86 7a                            stx.t $7a             ; STR
ff0631 a0 00                               ldy #$0
ff0633                 LOOPff0633_start:
ff0633                                 ;; LOOP {
ff0633                 LOOPff0633_loop:
ff0633 4f ab                               lda.a24 XY
ff0635                                 ;; IF == {
ff0635 d0 04                               bne +4                ; IFff0635_end [ff063b]
ff0637                                 ;; BREAK
ff0637 4f 80 2d 00                         bra.a24 +45           ; loopff0633_end [ff0668]
ff063b                 IFff0635_end:
ff063b 2f a5 7d                            lda.t $7d             ; VAL
ff063e 4f 20 6d 06 ff                      jsr.a24 $ff066d       ; Times10
ff0643 2f 85 7d                            sta.t $7d             ; VAL
ff0646 2f a6 7a                            ldx.t $7a             ; STR
ff0649 4f ab                               lda.a24 XY
ff064b c9 30                               cmp #$30
ff064d                                 ;; IF >= {
ff064d 90 17                               bcc +23               ; IFff064d_end [ff0666]
ff064f c9 39                               cmp #$39
ff0651                                 ;; IF <= {
ff0651 f0 02                               beq +2                ; IFff0651_end_eq [ff0655]
ff0653 b0 0d                               bcs +13               ; IFff0651_end [ff0662]
ff0655                 IFff0651_end_eq:
ff0655 38                                  sec
ff0656 e9 30                               sbc #$30
ff0658 18                                  clc
ff0659 2f 65 7d                            adc.t $7d             ; VAL
ff065c 2f 85 7d                            sta.t $7d             ; VAL
ff065f c8                                  iny
ff0660                                 ;; CONTINUE
ff0660 80 d1                               bra -47               ; loopff0633_start [ff0633]
ff0662                 IFff0651_end:
ff0662                                 ;; BREAK
ff0662 4f 80 02 00                         bra.a24 +2            ; loopff0633_end [ff0668]
ff0666                 IFff064d_end:
ff0666 80 cb                               bra -53               ; LOOPff0633_loop [ff0633]
ff0668                 LOOPff0633_end:
ff0668 2f a5 7d                            lda.t $7d             ; VAL
ff066b 4f 60                               rts.a24

ff066d ; SUB Times10:
ff066d 2f 0a                               asl.t
ff066f 2f aa                               tax.t
ff0671 2f 0a                               asl.t
ff0673 2f 0a                               asl.t
ff0675 18                                  clc
ff0676 2f db                               adx.t
ff0678 4f 60                               rts.a24

ff067a ; SUB Modulo:
00007d-00007f   ; VAR @MODULO
ff067a 2f 86 7d                            stx.t $7d             ; MODULO
ff067d a0 00                               ldy #$0
ff067f                 LOOPff067f_start:
ff067f                                 ;; LOOP {
ff067f                 LOOPff067f_loop:
ff067f 38                                  sec
ff0680 2f e5 7d                            sbc.t $7d             ; MODULO
ff0683                                 ;; IF - {
ff0683 10 06                               bpl +6                ; IFff0683_end [ff068b]
ff0685 18                                  clc
ff0686 2f 65 7d                            adc.t $7d             ; MODULO
ff0689 4f 60                               rts.a24
ff068b                 IFff0683_end:
ff068b c8                                  iny
ff068c 80 f1                               bra -15               ; LOOPff067f_loop [ff067f]
ff068e                 LOOPff067f_end:

ff068e ; SUB PrintString:
00d700-00d702   ; VAR @STR
00007f          ; VAR @IDX
ff068e                 FORff068e_start:
ff068e                                 ;; FOR @IDX = 0 TO 39 {
ff068e a2 00                               ldx #$0
ff0690 86 7f                               stx $7f
ff0692                 FORff068e_loop:
ff0692 2f ae 00 d7                         ldx.t $00d700         ; STR
ff0696 a4 7f                               ldy $7f               ; IDX
ff0698 4f ab                               lda.a24 XY
ff069a                                 ;; IF == {
ff069a d0 02                               bne +2                ; IFff069a_end [ff069e]
ff069c 4f 60                               rts.a24
ff069e                 IFff069a_end:
ff069e 09 80                               ora #$80
ff06a0 1f a6 fe                            ldx.w $fe             ; TXTPTR
ff06a3 ac fe 03                            ldy $03fe             ; TXTPOS
ff06a6 c0 28                               cpy #$28
ff06a8                                 ;; IF < {
ff06a8 b0 05                               bcs +5                ; IFff06a8_end [ff06af]
ff06aa 4f bb                               sta.a24 XY
ff06ac ee fe 03                            inc $03fe             ; TXTPOS
ff06af                 IFff06a8_end:
ff06af e6 7f                               inc $7f
ff06b1 a6 7f                               ldx $7f
ff06b3 e0 28                               cpx #$28
ff06b5 d0 db                               bne -37               ; FORff068e_loop [ff0692]
ff06b7                 FORff068e_end:
ff06b7 4f 60                               rts.a24

ff06b9 ; SUB PrintError:
00d700          ; VAR @ERR_STR
ff06b9 4f 20 cd 07 ff                      jsr.a24 $ff07cd       ; NextLine
ff06be 4f 20 8e 06 ff                      jsr.a24 $ff068e       ; PrintString
ff06c3 4f 20 cd 07 ff                      jsr.a24 $ff07cd       ; NextLine
ff06c8 4f 20 cd 07 ff                      jsr.a24 $ff07cd       ; NextLine
ff06cd 4f 60                               rts.a24

ff06cf ; SUB PrintChar:
ff06cf 1f a6 fe                            ldx.w $fe             ; TXTPTR
ff06d2 ac fe 03                            ldy $03fe             ; TXTPOS
ff06d5 c0 28                               cpy #$28
ff06d7                                 ;; IF < {
ff06d7 b0 05                               bcs +5                ; IFff06d7_end [ff06de]
ff06d9 4f bb                               sta.a24 XY
ff06db ee fe 03                            inc $03fe             ; TXTPOS
ff06de                 IFff06d7_end:
ff06de 4f 60                               rts.a24

ff06e0 ; SUB PrintSpace:
ff06e0 a9 a0                               lda #$a0
ff06e2 1f a6 fe                            ldx.w $fe             ; TXTPTR
ff06e5 ac fe 03                            ldy $03fe             ; TXTPOS
ff06e8 c0 28                               cpy #$28
ff06ea                                 ;; IF < {
ff06ea b0 05                               bcs +5                ; IFff06ea_end [ff06f1]
ff06ec 4f bb                               sta.a24 XY
ff06ee ee fe 03                            inc $03fe             ; TXTPOS
ff06f1                 IFff06ea_end:
ff06f1 4f 60                               rts.a24

ff06f3 ; SUB PrintCursor:
ff06f3 1f a6 fe                            ldx.w $fe             ; TXTPTR
ff06f6 ac fe 03                            ldy $03fe             ; TXTPOS
ff06f9 c0 28                               cpy #$28
ff06fb                                 ;; IF < {
ff06fb b0 04                               bcs +4                ; IFff06fb_end [ff0701]
ff06fd a9 df                               lda #$df
ff06ff 4f bb                               sta.a24 XY
ff0701                 IFff06fb_end:
ff0701 4f 60                               rts.a24

ff0703 ; SUB ClearCursor:
ff0703 ac fe 03                            ldy $03fe             ; TXTPOS
ff0706 c0 28                               cpy #$28
ff0708                                 ;; IF < {
ff0708 b0 07                               bcs +7                ; IFff0708_end [ff0711]
ff070a a9 a0                               lda #$a0
ff070c 1f a6 fe                            ldx.w $fe             ; TXTPTR
ff070f 4f bb                               sta.a24 XY
ff0711                 IFff0708_end:
ff0711 4f 60                               rts.a24

ff0713 ; SUB PlayBeep:
ff0713                 FORff0713_start:
ff0713                                 ;; FOR X = 0 TO 8 {
ff0713 a2 00                               ldx #$0
ff0715                 FORff0713_loop:
ff0715 4f bd 52 81 ff                      lda.a24 $ff8152,X     ; BeepTimes
ff071a                 FORff071a_start:
ff071a                                 ;; FOR Y = 0 TO 16 {
ff071a a0 00                               ldy #$0
ff071c                 FORff071a_loop:
ff071c 4f 20 30 07 ff                      jsr.a24 $ff0730       ; Wait
ff0721 2c 30 c0                            bit $c030             ; SPKR
ff0724 c8                                  iny
ff0725 c0 11                               cpy #$11
ff0727 d0 f3                               bne -13               ; FORff071a_loop [ff071c]
ff0729                 FORff071a_end:
ff0729 e8                                  inx
ff072a e0 09                               cpx #$9
ff072c d0 e7                               bne -25               ; FORff0713_loop [ff0715]
ff072e                 FORff0713_end:
ff072e 4f 60                               rts.a24

ff0730 ; SUB Wait:
ff0730 2f da                               phx.t
ff0732 2f 48                               pha.t
ff0734                 FORff0734_start:
ff0734                                 ;; FOR X = 1 TO 3 {
ff0734 a2 01                               ldx #$1
ff0736                 FORff0734_loop:
ff0736 2f 68                               pla.t
ff0738 2f 48                               pha.t
ff073a                 DOff073a_start:
ff073a                                 ;; DO {
ff073a                 DOff073a_loop:
ff073a 2f 3a                               dec.t
ff073c 2f c9 00 00 00                      cmp.t #$0
ff0741                                 ;; WHILE !=
ff0741 f0 02                               beq +2                ; DOff073a_end [ff0745]
ff0743 80 f5                               bra -11               ; DOff073a_loop [ff073a]
ff0745                 DOff073a_end:
ff0745 e8                                  inx
ff0746 e0 04                               cpx #$4
ff0748 d0 ec                               bne -20               ; FORff0734_loop [ff0736]
ff074a                 FORff0734_end:
ff074a 2f 68                               pla.t
ff074c 2f fa                               plx.t
ff074e 4f 60                               rts.a24

ff0750 ; SUB PrintDebugValue:
ff0750 48                                  pha
ff0751 48                                  pha
ff0752                       ;; A >>= 4 
ff0752 4a                                  lsr
ff0753 4a                                  lsr
ff0754 4a                                  lsr
ff0755 4a                                  lsr
ff0756                                 ;; IF >= 10 {
ff0756 c9 0a                               cmp #$a
ff0758 90 05                               bcc +5                ; IFff0756_else [ff075f]
ff075a                       ;; A += 183 
ff075a 18                                  clc
ff075b 69 b7                               adc #$b7
ff075d 80 03                               bra +3                ; IFff0756_end [ff0762]
ff075f                 IFff0756_else:
ff075f                                 ;; ELSE
ff075f                       ;; A += 176 
ff075f 18                                  clc
ff0760 69 b0                               adc #$b0
ff0762                 IFff0756_end:
ff0762 8d 26 04                            sta $0426
ff0765 68                                  pla
ff0766                       ;; A &= 15 
ff0766 29 0f                               and #$f
ff0768                                 ;; IF >= 10 {
ff0768 c9 0a                               cmp #$a
ff076a 90 05                               bcc +5                ; IFff0768_else [ff0771]
ff076c                       ;; A += 183 
ff076c 18                                  clc
ff076d 69 b7                               adc #$b7
ff076f 80 03                               bra +3                ; IFff0768_end [ff0774]
ff0771                 IFff0768_else:
ff0771                                 ;; ELSE
ff0771                       ;; A += 176 
ff0771 18                                  clc
ff0772 69 b0                               adc #$b0
ff0774                 IFff0768_end:
ff0774 8d 27 04                            sta $0427
ff0777 68                                  pla
ff0778 4f 60                               rts.a24

ff077a ; SUB PrintDebugChar:
ff077a 8d 27 04                            sta $0427
ff077d a9 a0                               lda #$a0
ff077f 8d 26 04                            sta $0426
ff0782 4f 60                               rts.a24

ff0784 ; SUB PrintDebug2Chars:
ff0784 1f 8d 26 04                         sta.w $000426
ff0788 4f 60                               rts.a24

ff078a ; SUB ClearRow:
ff078a 2b                                  xsl
ff078b 5f bd 00 80 ff                      lda.w.a24 $ff8000,X   ; TextScreenBase
ff0790 1f 85 fe                            sta.w $fe             ; TXTPTR
ff0793 1f aa                               tax.w
ff0795 a9 a0                               lda #$a0
ff0797 a0 00                               ldy #$0
ff0799                 loop_clear_char:
ff0799 4f bb                               sta.a24 XY
ff079b c8                                  iny
ff079c c0 28                               cpy #$28
ff079e d0 f9                               bne -7                ; loop_clear_char [ff0799]
ff07a0 4f 60                               rts.a24

ff07a2 ; SUB ClearScreen:
00007d-00007f   ; VAR @ROWPTR
ff07a2 2b                                  xsl
ff07a3                 DOff07a3_start:
ff07a3                                 ;; DO {
ff07a3                 DOff07a3_loop:
ff07a3 6f bd 00 80 ff                      lda.t.a24 $ff8000,X   ; TextScreenBase
ff07a8 ac fd 03                            ldy $03fd             ; DISPMODE
ff07ab c0 01                               cpy #$1               ; DISP_TEXT_2
ff07ad                                 ;; IF == {
ff07ad d0 06                               bne +6                ; IFff07ad_end [ff07b5]
ff07af 18                                  clc
ff07b0 2f 69 00 04 00                      adc.t #$400
ff07b5                 IFff07ad_end:
ff07b5 1f 85 7d                            sta.w $7d             ; ROWPTR
ff07b8 a9 a0                               lda #$a0
ff07ba                 FORff07ba_start:
ff07ba                                 ;; FOR Y = 0 TO 39 {
ff07ba a0 00                               ldy #$0
ff07bc                 FORff07ba_loop:
ff07bc 91 7d                               sta ($7d),Y           ; ROWPTR
ff07be c8                                  iny
ff07bf c0 28                               cpy #$28
ff07c1 d0 f9                               bne -7                ; FORff07ba_loop [ff07bc]
ff07c3                 FORff07ba_end:
ff07c3 e8                                  inx
ff07c4 e8                                  inx
ff07c5 e0 30                               cpx #$30
ff07c7                                 ;; WHILE !=
ff07c7 f0 02                               beq +2                ; DOff07a3_end [ff07cb]
ff07c9 80 d8                               bra -40               ; DOff07a3_loop [ff07a3]
ff07cb                 DOff07a3_end:
ff07cb 4f 60                               rts.a24

ff07cd ; SUB NextLine:
ff07cd ad ff 03                            lda $03ff             ; TXTROW
ff07d0 c9 17                               cmp #$17
ff07d2                                 ;; IF < {
ff07d2 b0 0f                               bcs +15               ; IFff07d2_else [ff07e3]
ff07d4 ee ff 03                            inc $03ff             ; TXTROW
ff07d7 4f 20 a9 04 ff                      jsr.a24 $ff04a9       ; ScreenBase
ff07dc a9 00                               lda #$0
ff07de 8d fe 03                            sta $03fe             ; TXTPOS
ff07e1 80 11                               bra +17               ; IFff07d2_end [ff07f4]
ff07e3                 IFff07d2_else:
ff07e3                                 ;; ELSE
ff07e3 a2 02                               ldx #$2
ff07e5 4f 20 f6 07 ff                      jsr.a24 $ff07f6       ; ScrollScreen
ff07ea a9 17                               lda #$17
ff07ec 8d ff 03                            sta $03ff             ; TXTROW
ff07ef a9 00                               lda #$0
ff07f1 8d fe 03                            sta $03fe             ; TXTPOS
ff07f4                 IFff07d2_end:
ff07f4 4f 60                               rts.a24

ff07f6 ; SUB ScrollScreen:
00007e-00007f   ; VAR @NEXTPTR
ff07f6 2b                                  xsl
ff07f7                 loop_scroll_line:
ff07f7 5f bd 00 80 ff                      lda.w.a24 $ff8000,X   ; TextScreenBase
ff07fc 1f 85 fe                            sta.w $fe             ; TXTPTR
ff07ff 5f bd 02 80 ff                      lda.w.a24 $ff8002,X   ; TextScreenBase
ff0804 1f 85 7e                            sta.w $7e             ; NEXTPTR
ff0807 a0 00                               ldy #$0
ff0809                 loop_scroll_char:
ff0809 b1 7e                               lda ($7e),Y           ; NEXTPTR
ff080b 91 fe                               sta ($fe),Y           ; TXTPTR
ff080d c8                                  iny
ff080e c0 28                               cpy #$28
ff0810 d0 f7                               bne -9                ; loop_scroll_char [ff0809]
ff0812 e8                                  inx
ff0813 e8                                  inx
ff0814 e0 2e                               cpx #$2e
ff0816 d0 df                               bne -33               ; loop_scroll_line [ff07f7]
ff0818                 scroll_clear_last_line:
ff0818 5f bd 00 80 ff                      lda.w.a24 $ff8000,X   ; TextScreenBase
ff081d 1f 85 fe                            sta.w $fe             ; TXTPTR
ff0820 1f a9 a0 a0                         lda.w #$a0a0
ff0824 a0 00                               ldy #$0
ff0826                 loop_scroll_clear_line:
ff0826 1f 91 fe                            sta.w ($fe),Y         ; TXTPTR
ff0829 c8                                  iny
ff082a c8                                  iny
ff082b c0 28                               cpy #$28
ff082d d0 f7                               bne -9                ; loop_scroll_clear_line [ff0826]
ff082f                 done_with_scroll:
ff082f 4f 60                               rts.a24

ff0831 ; SUB ClearInputBuffers:
ff0831 a9 00                               lda #$0
ff0833                 FORff0833_start:
ff0833                                 ;; FOR X = 0 TO 255 {
ff0833 a2 00                               ldx #$0
ff0835                 FORff0833_loop:
ff0835 9d 00 02                            sta $0200,X           ; TXTBUFFER
ff0838 e8                                  inx
ff0839 e0 00                               cpx #$100
ff083b d0 f8                               bne -8                ; FORff0833_loop [ff0835]
ff083d                 FORff0833_end:
ff083d 4f 60                               rts.a24

ff083f ; SUB ClearCurrentInputBuffer:
ff083f a9 00                               lda #$0
ff0841                 FORff0841_start:
ff0841                                 ;; FOR X = 0 TO 127 {
ff0841 a2 00                               ldx #$0
ff0843                 FORff0841_loop:
ff0843 9d 00 02                            sta $0200,X           ; TXTBUFFER
ff0846 e8                                  inx
ff0847 e0 80                               cpx #$80
ff0849 d0 f8                               bne -8                ; FORff0841_loop [ff0843]
ff084b                 FORff0841_end:
ff084b 4f 60                               rts.a24

ff084d ; SUB PrevToCurrentInputBuffer:
ff084d                 FORff084d_start:
ff084d                                 ;; FOR X = 0 TO 127 {
ff084d a2 00                               ldx #$0
ff084f                 FORff084d_loop:
ff084f bd 80 02                            lda $0280,X           ; TXTBUFFER2
ff0852 9d 00 02                            sta $0200,X           ; TXTBUFFER
ff0855 e8                                  inx
ff0856 e0 80                               cpx #$80
ff0858 d0 f5                               bne -11               ; FORff084d_loop [ff084f]
ff085a                 FORff084d_end:
ff085a 4f 60                               rts.a24

ff085c ; SUB CurrentToPrevInputBuffer:
ff085c                 FORff085c_start:
ff085c                                 ;; FOR X = 0 TO 127 {
ff085c a2 00                               ldx #$0
ff085e                 FORff085c_loop:
ff085e bd 00 02                            lda $0200,X           ; TXTBUFFER
ff0861 9d 80 02                            sta $0280,X           ; TXTBUFFER2
ff0864 e8                                  inx
ff0865 e0 80                               cpx #$80
ff0867 d0 f5                               bne -11               ; FORff085c_loop [ff085e]
ff0869                 FORff085c_end:
ff0869 4f 60                               rts.a24

ff086b ; SUB InputBufferToTextScreen:
ff086b a0 01                               ldy #$1
ff086d                 FORff086d_start:
ff086d                                 ;; FOR X = 0 TO 39 {
ff086d a2 00                               ldx #$0
ff086f                 FORff086d_loop:
ff086f bd 00 02                            lda $0200,X           ; TXTBUFFER
ff0872                                 ;; IF == 0 {
ff0872 c9 00                               cmp #$0
ff0874 d0 07                               bne +7                ; IFff0872_end [ff087d]
ff0876 8c fe 03                            sty $03fe             ; TXTPOS
ff0879                                 ;; BREAK
ff0879 4f 80 0a 00                         bra.a24 +10           ; forff086d_end [ff0887]
ff087d                 IFff0872_end:
ff087d 09 80                               ora #$80
ff087f 91 fe                               sta ($fe),Y           ; TXTPTR
ff0881 c8                                  iny
ff0882 e8                                  inx
ff0883 e0 28                               cpx #$28
ff0885 d0 e8                               bne -24               ; FORff086d_loop [ff086f]
ff0887                 FORff086d_end:
ff0887 a9 a0                               lda #$a0
ff0889                 LOOPff0889_start:
ff0889                                 ;; LOOP {
ff0889                 LOOPff0889_loop:
ff0889 c0 28                               cpy #$28
ff088b                                 ;; IF == {
ff088b d0 04                               bne +4                ; IFff088b_end [ff0891]
ff088d                                 ;; BREAK
ff088d 4f 80 05 00                         bra.a24 +5            ; loopff0889_end [ff0896]
ff0891                 IFff088b_end:
ff0891 91 fe                               sta ($fe),Y           ; TXTPTR
ff0893 c8                                  iny
ff0894 80 f3                               bra -13               ; LOOPff0889_loop [ff0889]
ff0896                 LOOPff0889_end:
ff0896 4f 60                               rts.a24

ff0898 ; SUB GetChar:
ff0898                 LOOPff0898_start:
ff0898                                 ;; LOOP {
ff0898                 LOOPff0898_loop:
ff0898 2c 00 c0                            bit $c000             ; KBD
ff089b                                 ;; IF - {
ff089b 10 04                               bpl +4                ; IFff089b_end [ff08a1]
ff089d                                 ;; BREAK
ff089d 4f 80 02 00                         bra.a24 +2            ; loopff0898_end [ff08a3]
ff08a1                 IFff089b_end:
ff08a1 80 f5                               bra -11               ; LOOPff0898_loop [ff0898]
ff08a3                 LOOPff0898_end:
ff08a3 ad 00 c0                            lda $c000             ; KBD
ff08a6 2c 10 c0                            bit $c010             ; KBDSTRB
ff08a9 4f 60                               rts.a24

ff08ab ; SUB AppleII4:
ff08ab                 FORff08ab_start:
ff08ab                                 ;; FOR X = 0 TO 39 {
ff08ab a2 00                               ldx #$0
ff08ad                 FORff08ab_loop:
ff08ad 4f bd 30 80 ff                      lda.a24 $ff8030,X     ; Hello
ff08b2 f0 0a                               beq +10               ; forff08ab_end [ff08be]
ff08b4 09 80                               ora #$80
ff08b6 9d 00 04                            sta $0400,X
ff08b9 e8                                  inx
ff08ba e0 28                               cpx #$28
ff08bc d0 ef                               bne -17               ; FORff08ab_loop [ff08ad]
ff08be                 FORff08ab_end:
ff08be 4f 60                               rts.a24

ff08c0 ; SUB Disk4Name:
ff08c0 a9 00                               lda #$0               ; DISK4_VOLUME_NAME
ff08c2 8d f0 c0                            sta $c0f0             ; DISK4_CMD
ff08c5 ad ff c0                            lda $c0ff             ; DISK4_GO
ff08c8 85 00                               sta $00
ff08ca ad 00 c7                            lda $c700             ; SLOT_7_ROM
ff08cd 1f a2 00 c8                         ldx.w #$c800          ; PR_RAM
ff08d1 4f 60                               rts.a24

ff08d3 ; SUB Disk4CatalogStart:
ff08d3 a9 01                               lda #$1               ; DISK4_CATALOG
ff08d5 8d f0 c0                            sta $c0f0             ; DISK4_CMD
ff08d8 ad ff c0                            lda $c0ff             ; DISK4_GO
ff08db 4f 60                               rts.a24

ff08dd ; SUB Disk4CatalogNext:
ff08dd a9 02                               lda #$2               ; DISK4_CATALOG_NEXT
ff08df 8d f0 c0                            sta $c0f0             ; DISK4_CMD
ff08e2 ad ff c0                            lda $c0ff             ; DISK4_GO
ff08e5 85 00                               sta $00
ff08e7 ad 00 c7                            lda $c700             ; SLOT_7_ROM
ff08ea 1f a2 06 c8                         ldx.w #$c806          ; PR_RAM
ff08ee a5 00                               lda $00
ff08f0 4f 60                               rts.a24

ff08f2 ; SUB Disk4Exists:
00d600          ; VAR @FILENAME
ff08f2 4f 20 50 09 ff                      jsr.a24 $ff0950       ; filenameToC800
ff08f7 a9 03                               lda #$3               ; DISK4_EXISTS
ff08f9 8d f0 c0                            sta $c0f0             ; DISK4_CMD
ff08fc ad ff c0                            lda $c0ff             ; DISK4_GO
ff08ff 4f 60                               rts.a24

ff0901 ; SUB Disk4Open:
00d600          ; VAR @FILENAME
ff0901 4f 20 50 09 ff                      jsr.a24 $ff0950       ; filenameToC800
ff0906 a9 05                               lda #$5               ; DISK4_OPEN
ff0908 8d f0 c0                            sta $c0f0             ; DISK4_CMD
ff090b ad ff c0                            lda $c0ff             ; DISK4_GO
ff090e 85 00                               sta $00
ff0910 ae f7 c0                            ldx $c0f7             ; DISK4_RET0
ff0913 a5 00                               lda $00
ff0915 4f 60                               rts.a24

ff0917 ; SUB Disk4Close:
ff0917 8d f1 c0                            sta $c0f1             ; DISK4_ARG0
ff091a a9 0a                               lda #$a               ; DISK4_CLOSE
ff091c 8d f0 c0                            sta $c0f0             ; DISK4_CMD
ff091f ad ff c0                            lda $c0ff             ; DISK4_GO
ff0922 4f 60                               rts.a24

ff0924 ; SUB Disk4Read:
ff0924 a9 06                               lda #$6               ; DISK4_READ
ff0926 8d f0 c0                            sta $c0f0             ; DISK4_CMD
ff0929 ad ff c0                            lda $c0ff             ; DISK4_GO
ff092c                                 ;; IF != {
ff092c f0 02                               beq +2                ; IFff092c_end [ff0930]
ff092e 4f 60                               rts.a24
ff0930                 IFff092c_end:
ff0930 ad 00 c7                            lda $c700             ; SLOT_7_ROM
ff0933 4f 60                               rts.a24

ff0935 ; SUB Disk4PrintError:
ff0935                                 ;; IF == 3 {
ff0935 c9 03                               cmp #$3
ff0937 d0 07                               bne +7                ; IFff0935_else [ff0940]
ff0939 2f a9 22 81 ff                      lda.t #$ff8122        ; Disk4ErrorNotFoundStr
ff093e 80 05                               bra +5                ; IFff0935_end [ff0945]
ff0940                 IFff0935_else:
ff0940                                 ;; ELSE
ff0940 2f a9 12 81 ff                      lda.t #$ff8112        ; Disk4ErrorStr
ff0945                 IFff0935_end:
ff0945 2f 8d 00 d7                         sta.t $00d700
ff0949 4f 20 b9 06 ff                      jsr.a24 $ff06b9       ; PrintError
ff094e 4f 60                               rts.a24

ff0950 ; SUB filenameToC800:
00d600          ; VAR @FILENAME
ff0950 ad 00 c7                            lda $c700             ; SLOT_7_ROM
ff0953 2f ae 00 d6                         ldx.t $00d600         ; FILENAME
ff0957                 FORff0957_start:
ff0957                                 ;; FOR Y = 0 TO 16 {
ff0957 a0 00                               ldy #$0
ff0959                 FORff0957_loop:
ff0959 4f ab                               lda.a24 XY
ff095b 99 00 c8                            sta $c800,Y           ; PR_RAM
ff095e                                 ;; IF == {
ff095e d0 04                               bne +4                ; IFff095e_end [ff0964]
ff0960                                 ;; BREAK
ff0960 4f 80 05 00                         bra.a24 +5            ; forff0957_end [ff0969]
ff0964                 IFff095e_end:
ff0964 c8                                  iny
ff0965 c0 11                               cpy #$11
ff0967 d0 f0                               bne -16               ; FORff0957_loop [ff0959]
ff0969                 FORff0957_end:
ff0969 4f 60                               rts.a24

ff096b ; SUB DoHelp:
00d000          ; VAR @ARGN
000004          ; VAR @I
000005          ; VAR @I6
000006          ; VAR @COL
ff096b 4f 20 cd 07 ff                      jsr.a24 $ff07cd       ; NextLine
ff0970 2f a9 3a 80 ff                      lda.t #$ff803a        ; CommandListStr
ff0975 2f 8d 00 d7                         sta.t $00d700
ff0979 4f 20 8e 06 ff                      jsr.a24 $ff068e       ; PrintString
ff097e 4f 20 cd 07 ff                      jsr.a24 $ff07cd       ; NextLine
ff0983                       ;; M@$4 = 1 
ff0983 2f 85 00                            sta.t $00
ff0986 a9 01                               lda #$1
ff0988 85 04                               sta $04
ff098a 2f a5 00                            lda.t $00
ff098d                       ;; M@$6 = 0 
ff098d 2f 85 00                            sta.t $00
ff0990 a9 00                               lda #$0
ff0992 85 06                               sta $06
ff0994 2f a5 00                            lda.t $00
ff0997                 DOff0997_start:
ff0997                                 ;; DO {
ff0997                 DOff0997_loop:
ff0997 4f 20 e0 06 ff                      jsr.a24 $ff06e0       ; PrintSpace
ff099c a5 04                               lda $04               ; I
ff099e                       ;; A <<= 2 
ff099e 0a                                  asl
ff099f 0a                                  asl
ff09a0 85 05                               sta $05               ; I6
ff09a2 a5 04                               lda $04               ; I
ff09a4                       ;; A <<= 1 
ff09a4 0a                                  asl
ff09a5 18                                  clc
ff09a6 65 05                               adc $05               ; I6
ff09a8 85 05                               sta $05               ; I6
ff09aa aa                                  tax
ff09ab 6f bd a5 81 ff                      lda.t.a24 $ff81a5,X   ; CommandList
ff09b0 2f 8d 00 d7                         sta.t $00d700
ff09b4 4f 20 8e 06 ff                      jsr.a24 $ff068e       ; PrintString
ff09b9 a5 06                               lda $06               ; COL
ff09bb                                 ;; IF == {
ff09bb d0 13                               bne +19               ; IFff09bb_else [ff09d0]
ff09bd                       ;; M@$6 = 1 
ff09bd 85 00                               sta $00
ff09bf a9 01                               lda #$1
ff09c1 85 06                               sta $06
ff09c3 a5 00                               lda $00
ff09c5                       ;; M@$3fe = 12 
ff09c5 85 00                               sta $00
ff09c7 a9 0c                               lda #$c
ff09c9 8d fe 03                            sta $03fe
ff09cc a5 00                               lda $00
ff09ce 80 26                               bra +38               ; IFff09bb_end [ff09f6]
ff09d0                 IFff09bb_else:
ff09d0                                 ;; ELSE
ff09d0                                 ;; IF == 1 {
ff09d0 c9 01                               cmp #$1
ff09d2 d0 11                               bne +17               ; IFff09d0_end [ff09e5]
ff09d4                       ;; M@$6 = 2 
ff09d4 85 00                               sta $00
ff09d6 a9 02                               lda #$2
ff09d8 85 06                               sta $06
ff09da a5 00                               lda $00
ff09dc                       ;; M@$3fe = 24 
ff09dc 85 00                               sta $00
ff09de a9 18                               lda #$18
ff09e0 8d fe 03                            sta $03fe
ff09e3 a5 00                               lda $00
ff09e5                 IFff09d0_end:
ff09e5                                 ;; IF == 2 {
ff09e5 c9 02                               cmp #$2
ff09e7 d0 0d                               bne +13               ; IFff09e5_end [ff09f6]
ff09e9                       ;; M@$6 = 0 
ff09e9 85 00                               sta $00
ff09eb a9 00                               lda #$0
ff09ed 85 06                               sta $06
ff09ef a5 00                               lda $00
ff09f1 4f 20 cd 07 ff                      jsr.a24 $ff07cd       ; NextLine
ff09f6                 IFff09e5_end:
ff09f6                 IFff09bb_end:
ff09f6 e6 04                               inc $04               ; I
ff09f8 a5 04                               lda $04               ; I
ff09fa                                 ;; WHILE < 15
ff09fa c9 0f                               cmp #$f
ff09fc b0 02                               bcs +2                ; DOff0997_end [ff0a00]
ff09fe 80 97                               bra -105              ; DOff0997_loop [ff0997]
ff0a00                 DOff0997_end:
ff0a00 4f 20 cd 07 ff                      jsr.a24 $ff07cd       ; NextLine
ff0a05 4f 20 cd 07 ff                      jsr.a24 $ff07cd       ; NextLine
ff0a0a 4f 60                               rts.a24

ff0a0c ; SUB DoAscii:
00d000          ; VAR @ARGN
000004          ; VAR @I
000005          ; VAR @J
000003          ; VAR @C
ff0a0c 4f 20 cd 07 ff                      jsr.a24 $ff07cd       ; NextLine
ff0a11 2f a9 44 80 ff                      lda.t #$ff8044        ; ASCIIHeaderStr
ff0a16 2f 8d 00 d7                         sta.t $00d700
ff0a1a 4f 20 8e 06 ff                      jsr.a24 $ff068e       ; PrintString
ff0a1f 4f 20 cd 07 ff                      jsr.a24 $ff07cd       ; NextLine
ff0a24 2f a9 57 80 ff                      lda.t #$ff8057        ; ASCIIDashesStr
ff0a29 2f 8d 00 d7                         sta.t $00d700
ff0a2d 4f 20 8e 06 ff                      jsr.a24 $ff068e       ; PrintString
ff0a32 4f 20 cd 07 ff                      jsr.a24 $ff07cd       ; NextLine
ff0a37                 FORff0a37_start:
ff0a37                                 ;; FOR @I = 0 TO 15 {
ff0a37 a2 00                               ldx #$0
ff0a39 86 04                               stx $04
ff0a3b                 FORff0a37_loop:
ff0a3b a5 04                               lda $04               ; I
ff0a3d 4f 20 90 05 ff                      jsr.a24 $ff0590       ; PrintHexDigit
ff0a42 a9 ad                               lda #$ad
ff0a44 4f 20 cf 06 ff                      jsr.a24 $ff06cf       ; PrintChar
ff0a49                 FORff0a49_start:
ff0a49                                 ;; FOR @J = 0 TO 15 {
ff0a49 a2 00                               ldx #$0
ff0a4b 86 05                               stx $05
ff0a4d                 FORff0a49_loop:
ff0a4d a5 03                               lda $03               ; C
ff0a4f 4f 20 cf 06 ff                      jsr.a24 $ff06cf       ; PrintChar
ff0a54 e6 03                               inc $03               ; C
ff0a56 e6 05                               inc $05
ff0a58 a6 05                               ldx $05
ff0a5a e0 10                               cpx #$10
ff0a5c d0 ef                               bne -17               ; FORff0a49_loop [ff0a4d]
ff0a5e                 FORff0a49_end:
ff0a5e 4f 20 cd 07 ff                      jsr.a24 $ff07cd       ; NextLine
ff0a63 e6 04                               inc $04
ff0a65 a6 04                               ldx $04
ff0a67 e0 10                               cpx #$10
ff0a69 d0 d0                               bne -48               ; FORff0a37_loop [ff0a3b]
ff0a6b                 FORff0a37_end:
ff0a6b 2f a9 57 80 ff                      lda.t #$ff8057        ; ASCIIDashesStr
ff0a70 2f 8d 00 d7                         sta.t $00d700
ff0a74 4f 20 8e 06 ff                      jsr.a24 $ff068e       ; PrintString
ff0a79 4f 20 cd 07 ff                      jsr.a24 $ff07cd       ; NextLine
ff0a7e 4f 60                               rts.a24

ff0a80 ; SUB DoCatalog:
00d000          ; VAR @ARGN
ff0a80 4f 20 cd 07 ff                      jsr.a24 $ff07cd       ; NextLine
ff0a85 2f a9 6a 80 ff                      lda.t #$ff806a        ; CatalogHeaderStr
ff0a8a 2f 8d 00 d7                         sta.t $00d700
ff0a8e 4f 20 8e 06 ff                      jsr.a24 $ff068e       ; PrintString
ff0a93 4f 20 c0 08 ff                      jsr.a24 $ff08c0       ; Disk4Name
ff0a98 2f 8e 00 d7                         stx.t $00d700
ff0a9c 4f 20 8e 06 ff                      jsr.a24 $ff068e       ; PrintString
ff0aa1 4f 20 cd 07 ff                      jsr.a24 $ff07cd       ; NextLine
ff0aa6 4f 20 d3 08 ff                      jsr.a24 $ff08d3       ; Disk4CatalogStart
ff0aab                                 ;; IF != {
ff0aab f0 07                               beq +7                ; IFff0aab_end [ff0ab4]
ff0aad 4f 20 35 09 ff                      jsr.a24 $ff0935       ; Disk4PrintError
ff0ab2 4f 60                               rts.a24
ff0ab4                 IFff0aab_end:
ff0ab4 4f 20 cd 07 ff                      jsr.a24 $ff07cd       ; NextLine
ff0ab9                 LOOPff0ab9_start:
ff0ab9                                 ;; LOOP {
ff0ab9                 LOOPff0ab9_loop:
ff0ab9 4f 20 dd 08 ff                      jsr.a24 $ff08dd       ; Disk4CatalogNext
ff0abe                                 ;; IF != {
ff0abe f0 04                               beq +4                ; IFff0abe_end [ff0ac4]
ff0ac0                                 ;; BREAK
ff0ac0 4f 80 4f 00                         bra.a24 +79           ; loopff0ab9_end [ff0b13]
ff0ac4                 IFff0abe_end:
ff0ac4 2f 8e 00 d7                         stx.t $00d700
ff0ac8 a9 02                               lda #$2
ff0aca 8d fe 03                            sta $03fe             ; TXTPOS
ff0acd ad 00 c8                            lda $c800             ; DISK4_RAM
ff0ad0 4f 20 cf 06 ff                      jsr.a24 $ff06cf       ; PrintChar
ff0ad5 ad 01 c8                            lda $c801             ; DISK4_RAM
ff0ad8 4f 20 cf 06 ff                      jsr.a24 $ff06cf       ; PrintChar
ff0add ad 02 c8                            lda $c802             ; DISK4_RAM
ff0ae0 4f 20 cf 06 ff                      jsr.a24 $ff06cf       ; PrintChar
ff0ae5 a9 06                               lda #$6
ff0ae7 8d fe 03                            sta $03fe             ; TXTPOS
ff0aea ad 03 c8                            lda $c803             ; DISK4_RAM
ff0aed 4f 20 cf 06 ff                      jsr.a24 $ff06cf       ; PrintChar
ff0af2 ad 04 c8                            lda $c804             ; DISK4_RAM
ff0af5 4f 20 cf 06 ff                      jsr.a24 $ff06cf       ; PrintChar
ff0afa ad 05 c8                            lda $c805             ; DISK4_RAM
ff0afd 4f 20 cf 06 ff                      jsr.a24 $ff06cf       ; PrintChar
ff0b02 a9 0a                               lda #$a
ff0b04 8d fe 03                            sta $03fe             ; TXTPOS
ff0b07 4f 20 8e 06 ff                      jsr.a24 $ff068e       ; PrintString
ff0b0c 4f 20 cd 07 ff                      jsr.a24 $ff07cd       ; NextLine
ff0b11 80 a6                               bra -90               ; LOOPff0ab9_loop [ff0ab9]
ff0b13                 LOOPff0ab9_end:
ff0b13 4f 20 cd 07 ff                      jsr.a24 $ff07cd       ; NextLine
ff0b18 4f 60                               rts.a24

ff0b1a ; SUB DoClear:
00d000          ; VAR @ARGN
ff0b1a ad fd 03                            lda $03fd             ; DISPMODE
ff0b1d                                 ;; IF == {
ff0b1d d0 13                               bne +19               ; IFff0b1d_end [ff0b32]
ff0b1f a2 02                               ldx #$2
ff0b21 4f 20 a2 07 ff                      jsr.a24 $ff07a2       ; ClearScreen
ff0b26 a9 02                               lda #$2
ff0b28 8d ff 03                            sta $03ff             ; TXTROW
ff0b2b a9 00                               lda #$0
ff0b2d 8d fe 03                            sta $03fe             ; TXTPOS
ff0b30 4f 60                               rts.a24
ff0b32                 IFff0b1d_end:
ff0b32                                 ;; IF == 1 {
ff0b32 c9 01                               cmp #$1
ff0b34 d0 07                               bne +7                ; IFff0b32_end [ff0b3d]
ff0b36 a2 00                               ldx #$0
ff0b38 4f 20 a2 07 ff                      jsr.a24 $ff07a2       ; ClearScreen
ff0b3d                 IFff0b32_end:
ff0b3d 4f 60                               rts.a24

ff0b3f ; SUB DoEcho:
00d000          ; VAR @ARGN
000200          ; VAR @INPUT
ff0b3f 1f a9 00 02                         lda.w #$200           ; INPUT
ff0b43 2f 8d 00 d7                         sta.t $00d700
ff0b47 4f 20 8e 06 ff                      jsr.a24 $ff068e       ; PrintString
ff0b4c 4f 20 cd 07 ff                      jsr.a24 $ff07cd       ; NextLine
ff0b51 4f 60                               rts.a24

ff0b53 ; SUB DoLoad:
00d000          ; VAR @ARGN
00d001          ; VAR @CMD
00d004          ; VAR @FILENAME
00d007          ; VAR @ADDRESS
000009          ; VAR @FN
000003-000005   ; VAR @R_IDX
000006-000007   ; VAR @ACTUAL
000008-000009   ; VAR @C_IDX
ff0b53 4f 20 cd 07 ff                      jsr.a24 $ff07cd       ; NextLine
ff0b58 ad 00 d0                            lda $d000             ; ARGN
ff0b5b                                 ;; IF < 1 {
ff0b5b c9 01                               cmp #$1
ff0b5d b0 10                               bcs +16               ; IFff0b5b_end [ff0b6f]
ff0b5f 2f a9 77 80 ff                      lda.t #$ff8077        ; NoFilenameErrStr
ff0b64 2f 8d 00 d7                         sta.t $00d700
ff0b68 4f 20 b9 06 ff                      jsr.a24 $ff06b9       ; PrintError
ff0b6d 4f 60                               rts.a24
ff0b6f                 IFff0b5b_end:
ff0b6f ad 00 d0                            lda $d000             ; ARGN
ff0b72                                 ;; IF < 2 {
ff0b72 c9 02                               cmp #$2
ff0b74 b0 10                               bcs +16               ; IFff0b72_end [ff0b86]
ff0b76 2f a9 96 80 ff                      lda.t #$ff8096        ; NoAddressErrStr
ff0b7b 2f 8d 00 d7                         sta.t $00d700
ff0b7f 4f 20 b9 06 ff                      jsr.a24 $ff06b9       ; PrintError
ff0b84 4f 60                               rts.a24
ff0b86                 IFff0b72_end:
ff0b86 2f ad 07 d0                         lda.t $00d007         ; ADDRESS
ff0b8a 2f 8d 00 d7                         sta.t $00d700
ff0b8e 4f 20 a8 05 ff                      jsr.a24 $ff05a8       ; ParseNumber
ff0b93 2f 8d 07 d0                         sta.t $00d007         ; ADDRESS
ff0b97 2f ad 04 d0                         lda.t $00d004         ; FILENAME
ff0b9b                                 ;; IF == {
ff0b9b d0 0d                               bne +13               ; IFff0b9b_end [ff0baa]
ff0b9d 2f a9                               lda.t #$ff8077        ; NoFilenameErrStr
ff0b9f 2f 8d 00 d7                         sta.t $00d700
ff0ba3 4f 20 b9 06 ff                      jsr.a24 $ff06b9       ; PrintError
ff0ba8 4f 60                               rts.a24
ff0baa                 IFff0b9b_end:
ff0baa 2f 8d 00 d6                         sta.t $00d600
ff0bae 4f 20 01 09 ff                      jsr.a24 $ff0901       ; Disk4Open
ff0bb3                                 ;; IF != {
ff0bb3 f0 07                               beq +7                ; IFff0bb3_end [ff0bbc]
ff0bb5 4f 20 35 09 ff                      jsr.a24 $ff0935       ; Disk4PrintError
ff0bba 4f 60                               rts.a24
ff0bbc                 IFff0bb3_end:
ff0bbc 86 09                               stx $09               ; FN
ff0bbe 2f 64 03                            stz.t $03             ; R_IDX
ff0bc1                 LOOPff0bc1_start:
ff0bc1                                 ;; LOOP {
ff0bc1                 LOOPff0bc1_loop:
ff0bc1 4f 20 24 09 ff                      jsr.a24 $ff0924       ; Disk4Read
ff0bc6                                 ;; IF == 2 {
ff0bc6 c9 02                               cmp #$2
ff0bc8 d0 04                               bne +4                ; IFff0bc6_end [ff0bce]
ff0bca                                 ;; BREAK
ff0bca 4f 80 38 00                         bra.a24 +56           ; loopff0bc1_end [ff0c06]
ff0bce                 IFff0bc6_end:
ff0bce 2f ad f7 c0                         lda.t $00c0f7         ; DISK4_RET0
ff0bd2                                 ;; IF == {
ff0bd2 d0 04                               bne +4                ; IFff0bd2_end [ff0bd8]
ff0bd4                                 ;; BREAK
ff0bd4 4f 80 2e 00                         bra.a24 +46           ; loopff0bc1_end [ff0c06]
ff0bd8                 IFff0bd2_end:
ff0bd8 2f 85 06                            sta.t $06             ; ACTUAL
ff0bdb 1f 64 08                            stz.w $08             ; C_IDX
ff0bde                 LOOPff0bde_start:
ff0bde                                 ;; LOOP {
ff0bde                 LOOPff0bde_loop:
ff0bde 1f a2 00 c8                         ldx.w #$c800          ; DISK4_RAM
ff0be2 1f a4 08                            ldy.w $08             ; C_IDX
ff0be5 4f ab                               lda.a24 XY
ff0be7 2f e6 08                            inc.t $08             ; C_IDX
ff0bea 2f ae 07 d0                         ldx.t $00d007         ; ADDRESS
ff0bee 2f a4 03                            ldy.t $03             ; R_IDX
ff0bf1 4f bb                               sta.a24 XY
ff0bf3 2f e6 03                            inc.t $03             ; R_IDX
ff0bf6 1f a4 08                            ldy.w $08             ; C_IDX
ff0bf9 1f c4 06                            cpy.w $06             ; ACTUAL
ff0bfc                                 ;; IF == {
ff0bfc d0 04                               bne +4                ; IFff0bfc_end [ff0c02]
ff0bfe                                 ;; BREAK
ff0bfe 4f 80 02 00                         bra.a24 +2            ; loopff0bde_end [ff0c04]
ff0c02                 IFff0bfc_end:
ff0c02 80 da                               bra -38               ; LOOPff0bde_loop [ff0bde]
ff0c04                 LOOPff0bde_end:
ff0c04 80 bb                               bra -69               ; LOOPff0bc1_loop [ff0bc1]
ff0c06                 LOOPff0bc1_end:
ff0c06 a5 09                               lda $09               ; FN
ff0c08 4f 20 17 09 ff                      jsr.a24 $ff0917       ; Disk4Close
ff0c0d 2f a9 d0 80 ff                      lda.t #$ff80d0        ; LoadedStr
ff0c12 2f 8d 00 d7                         sta.t $00d700
ff0c16 4f 20 8e 06 ff                      jsr.a24 $ff068e       ; PrintString
ff0c1b 2f a5 06                            lda.t $06             ; ACTUAL
ff0c1e 4f 20 3f 05 ff                      jsr.a24 $ff053f       ; PrintHex24
ff0c23 2f a9 d8 80 ff                      lda.t #$ff80d8        ; LoadedBytesToStr
ff0c28 2f 8d 00 d7                         sta.t $00d700
ff0c2c 4f 20 8e 06 ff                      jsr.a24 $ff068e       ; PrintString
ff0c31 2f ad 07 d0                         lda.t $00d007         ; ADDRESS
ff0c35 4f 20 3f 05 ff                      jsr.a24 $ff053f       ; PrintHex24
ff0c3a 4f 20 cd 07 ff                      jsr.a24 $ff07cd       ; NextLine
ff0c3f 4f 20 cd 07 ff                      jsr.a24 $ff07cd       ; NextLine
ff0c44 4f 60                               rts.a24

ff0c46 ; SUB DoView:
00d000          ; VAR @ARGN
00d001          ; VAR @CMD
00d004          ; VAR @FILENAME
00000b          ; VAR @FN
000003-000005   ; VAR @R_IDX
000006-000008   ; VAR @ACTUAL
00d0ff          ; VAR @LINENUM
ff0c46 4f 20 cd 07 ff                      jsr.a24 $ff07cd       ; NextLine
ff0c4b ad 00 d0                            lda $d000             ; ARGN
ff0c4e                                 ;; IF < 1 {
ff0c4e c9 01                               cmp #$1
ff0c50 b0 10                               bcs +16               ; IFff0c4e_end [ff0c62]
ff0c52 2f a9 77 80 ff                      lda.t #$ff8077        ; NoFilenameErrStr
ff0c57 2f 8d 00 d7                         sta.t $00d700
ff0c5b 4f 20 b9 06 ff                      jsr.a24 $ff06b9       ; PrintError
ff0c60 4f 60                               rts.a24
ff0c62                 IFff0c4e_end:
ff0c62 2f ad 04 d0                         lda.t $00d004         ; FILENAME
ff0c66 2f 8d 00 d6                         sta.t $00d600
ff0c6a 4f 20 01 09 ff                      jsr.a24 $ff0901       ; Disk4Open
ff0c6f                                 ;; IF != {
ff0c6f f0 07                               beq +7                ; IFff0c6f_end [ff0c78]
ff0c71 4f 20 35 09 ff                      jsr.a24 $ff0935       ; Disk4PrintError
ff0c76 4f 60                               rts.a24
ff0c78                 IFff0c6f_end:
ff0c78 86 0b                               stx $0b               ; FN
ff0c7a 9c ff d0                            stz $d0ff             ; LINENUM
ff0c7d                 LOOPff0c7d_start:
ff0c7d                                 ;; LOOP {
ff0c7d                 LOOPff0c7d_loop:
ff0c7d 4f 20 24 09 ff                      jsr.a24 $ff0924       ; Disk4Read
ff0c82                                 ;; IF == 2 {
ff0c82 c9 02                               cmp #$2
ff0c84 d0 04                               bne +4                ; IFff0c82_end [ff0c8a]
ff0c86                                 ;; BREAK
ff0c86 4f 80 58 00                         bra.a24 +88           ; loopff0c7d_end [ff0ce2]
ff0c8a                 IFff0c82_end:
ff0c8a 2f ad f7 c0                         lda.t $00c0f7         ; DISK4_RET0
ff0c8e                                 ;; IF == {
ff0c8e d0 04                               bne +4                ; IFff0c8e_end [ff0c94]
ff0c90                                 ;; BREAK
ff0c90 4f 80 4e 00                         bra.a24 +78           ; loopff0c7d_end [ff0ce2]
ff0c94                 IFff0c8e_end:
ff0c94 2f 85 06                            sta.t $06             ; ACTUAL
ff0c97 2f 64 03                            stz.t $03             ; R_IDX
ff0c9a                 LOOPff0c9a_start:
ff0c9a                                 ;; LOOP {
ff0c9a                 LOOPff0c9a_loop:
ff0c9a 1f a2 00 c8                         ldx.w #$c800          ; DISK4_RAM
ff0c9e 1f a4 03                            ldy.w $03             ; R_IDX
ff0ca1 4f ab                               lda.a24 XY
ff0ca3                                 ;; IF == 10 {
ff0ca3 c9 0a                               cmp #$a
ff0ca5 d0 0b                               bne +11               ; IFff0ca3_end [ff0cb2]
ff0ca7 4f 20 fc 0c ff                      jsr.a24 $ff0cfc       ; View_Paginate
ff0cac                                 ;; IF != {
ff0cac f0 04                               beq +4                ; IFff0cac_end [ff0cb2]
ff0cae                                 ;; BREAK
ff0cae 4f 80 2e 00                         bra.a24 +46           ; loopff0c9a_end [ff0ce0]
ff0cb2                 IFff0cac_end:
ff0cb2                 IFff0ca3_end:
ff0cb2                                 ;; IF >= 32 {
ff0cb2 c9 20                               cmp #$20
ff0cb4 90 19                               bcc +25               ; IFff0cb2_end [ff0ccf]
ff0cb6 ac fe 03                            ldy $03fe             ; TXTPOS
ff0cb9 c0 28                               cpy #$28
ff0cbb                                 ;; IF >= {
ff0cbb 90 0b                               bcc +11               ; IFff0cbb_end [ff0cc8]
ff0cbd 4f 20 fc 0c ff                      jsr.a24 $ff0cfc       ; View_Paginate
ff0cc2                                 ;; IF != {
ff0cc2 f0 02                               beq +2                ; IFff0cc2_end [ff0cc6]
ff0cc4 80 1c                               bra +28               ; done [ff0ce2]
ff0cc6                 IFff0cc2_end:
ff0cc6                                 ;; CONTINUE
ff0cc6 80 d2                               bra -46               ; loopff0c9a_start [ff0c9a]
ff0cc8                 IFff0cbb_end:
ff0cc8 09 80                               ora #$80
ff0cca 91 fe                               sta ($fe),Y           ; TXTPTR
ff0ccc ee fe 03                            inc $03fe             ; TXTPOS
ff0ccf                 IFff0cb2_end:
ff0ccf 2f e6 03                            inc.t $03             ; R_IDX
ff0cd2 2f a5 03                            lda.t $03             ; R_IDX
ff0cd5 2f c5 06                            cmp.t $06             ; ACTUAL
ff0cd8                                 ;; IF == {
ff0cd8 d0 04                               bne +4                ; IFff0cd8_end [ff0cde]
ff0cda                                 ;; BREAK
ff0cda 4f 80 02 00                         bra.a24 +2            ; loopff0c9a_end [ff0ce0]
ff0cde                 IFff0cd8_end:
ff0cde 80 ba                               bra -70               ; LOOPff0c9a_loop [ff0c9a]
ff0ce0                 LOOPff0c9a_end:
ff0ce0 80 9b                               bra -101              ; LOOPff0c7d_loop [ff0c7d]
ff0ce2                 LOOPff0c7d_end:
ff0ce2                 done:
ff0ce2 a5 0b                               lda $0b               ; FN
ff0ce4 4f 20 17 09 ff                      jsr.a24 $ff0917       ; Disk4Close
ff0ce9 ad ff d0                            lda $d0ff             ; LINENUM
ff0cec                                 ;; IF == 21 {
ff0cec c9 15                               cmp #$15
ff0cee d0 05                               bne +5                ; IFff0cec_end [ff0cf5]
ff0cf0 4f 20 98 08 ff                      jsr.a24 $ff0898       ; GetChar
ff0cf5                 IFff0cec_end:
ff0cf5 4f 20 cd 07 ff                      jsr.a24 $ff07cd       ; NextLine
ff0cfa 4f 60                               rts.a24

ff0cfc ; SUB View_Paginate:
00d0ff          ; VAR @LINENUM
ff0cfc ee ff d0                            inc $d0ff             ; LINENUM
ff0cff ad ff d0                            lda $d0ff             ; LINENUM
ff0d02                                 ;; IF == 22 {
ff0d02 c9 16                               cmp #$16
ff0d04 d0 18                               bne +24               ; IFff0d02_end [ff0d1e]
ff0d06 4f 20 98 08 ff                      jsr.a24 $ff0898       ; GetChar
ff0d0b                                 ;; IF == 131 {
ff0d0b c9 83                               cmp #$83
ff0d0d d0 04                               bne +4                ; IFff0d0b_end [ff0d13]
ff0d0f a9 01                               lda #$1
ff0d11 4f 60                               rts.a24
ff0d13                 IFff0d0b_end:
ff0d13                                 ;; IF == 155 {
ff0d13 c9 9b                               cmp #$9b
ff0d15 d0 04                               bne +4                ; IFff0d13_end [ff0d1b]
ff0d17 a9 01                               lda #$1
ff0d19 4f 60                               rts.a24
ff0d1b                 IFff0d13_end:
ff0d1b 9c ff d0                            stz $d0ff             ; LINENUM
ff0d1e                 IFff0d02_end:
ff0d1e 4f 20 cd 07 ff                      jsr.a24 $ff07cd       ; NextLine
ff0d23 9c fe 03                            stz $03fe             ; TXTPOS
ff0d26 ac fe 03                            ldy $03fe             ; TXTPOS
ff0d29 a9 00                               lda #$0
ff0d2b 4f 60                               rts.a24

ff0d2d ; SUB DoPeek:
00d000          ; VAR @ARGN
00d001          ; VAR @CMD
00d004          ; VAR @START_ADDR
00d007          ; VAR @END_ADDR
00d0ff          ; VAR @LINENUM
00d0fc-00d0fe   ; VAR @CUR_ADDR
000003-000005   ; VAR @ADDR
ff0d2d ad 00 d0                            lda $d000             ; ARGN
ff0d30                                 ;; IF < 1 {
ff0d30 c9 01                               cmp #$1
ff0d32 b0 10                               bcs +16               ; IFff0d30_end [ff0d44]
ff0d34 2f a9 96 80 ff                      lda.t #$ff8096        ; NoAddressErrStr
ff0d39 2f 8d 00 d7                         sta.t $00d700
ff0d3d 4f 20 b9 06 ff                      jsr.a24 $ff06b9       ; PrintError
ff0d42 4f 60                               rts.a24
ff0d44                 IFff0d30_end:
ff0d44 2f ad 04 d0                         lda.t $00d004         ; START_ADDR
ff0d48 2f 8d 00 d7                         sta.t $00d700
ff0d4c 4f 20 a8 05 ff                      jsr.a24 $ff05a8       ; ParseNumber
ff0d51 2f 29 f0 ff ff                      and.t #$fffff0
ff0d56 2f 8d 04 d0                         sta.t $00d004         ; START_ADDR
ff0d5a ad 00 d0                            lda $d000             ; ARGN
ff0d5d                                 ;; IF >= 2 {
ff0d5d c9 02                               cmp #$2
ff0d5f 90 32                               bcc +50               ; IFff0d5d_else [ff0d93]
ff0d61 2f ae 07 d0                         ldx.t $00d007         ; END_ADDR
ff0d65 4f 7b                               lda.a24 X
ff0d67 c9 2b                               cmp #$2b
ff0d69                                 ;; IF == {
ff0d69 d0 19                               bne +25               ; IFff0d69_else [ff0d84]
ff0d6b 2f e8                               inx.t
ff0d6d 2f 8e 00 d7                         stx.t $00d700
ff0d71 4f 20 a8 05 ff                      jsr.a24 $ff05a8       ; ParseNumber
ff0d76 2f aa                               tax.t
ff0d78 2f ad 04 d0                         lda.t $00d004         ; START_ADDR
ff0d7c 2f db                               adx.t
ff0d7e 2f 8d 07 d0                         sta.t $00d007         ; END_ADDR
ff0d82 80 0d                               bra +13               ; IFff0d69_end [ff0d91]
ff0d84                 IFff0d69_else:
ff0d84                                 ;; ELSE
ff0d84 2f 8e 00 d7                         stx.t $00d700
ff0d88 4f 20 a8 05 ff                      jsr.a24 $ff05a8       ; ParseNumber
ff0d8d 2f 8d 07 d0                         sta.t $00d007         ; END_ADDR
ff0d91                 IFff0d69_end:
ff0d91 80 0e                               bra +14               ; IFff0d5d_end [ff0da1]
ff0d93                 IFff0d5d_else:
ff0d93                                 ;; ELSE
ff0d93 2f ad 04 d0                         lda.t $00d004         ; START_ADDR
ff0d97 18                                  clc
ff0d98 2f 69 40 00 00                      adc.t #$40
ff0d9d 2f 8d 07 d0                         sta.t $00d007         ; END_ADDR
ff0da1                 IFff0d5d_end:
ff0da1 9c ff d0                            stz $d0ff             ; LINENUM
ff0da4 2f ad 04 d0                         lda.t $00d004         ; START_ADDR
ff0da8 2f 8d fc d0                         sta.t $00d0fc         ; CUR_ADDR
ff0dac                 LOOPff0dac_start:
ff0dac                                 ;; LOOP {
ff0dac                 LOOPff0dac_loop:
ff0dac 4f 20 d8 0d ff                      jsr.a24 $ff0dd8       ; Draw_Peek_Line
ff0db1 4f 20 37 0e ff                      jsr.a24 $ff0e37       ; Loop_Paginate
ff0db6                                 ;; IF != {
ff0db6 f0 04                               beq +4                ; IFff0db6_end [ff0dbc]
ff0db8                                 ;; BREAK
ff0db8 4f 80 1a 00                         bra.a24 +26           ; loopff0dac_end [ff0dd6]
ff0dbc                 IFff0db6_end:
ff0dbc 2f ad fc d0                         lda.t $00d0fc         ; CUR_ADDR
ff0dc0 18                                  clc
ff0dc1 2f 69 08 00 00                      adc.t #$8
ff0dc6 2f 8d fc d0                         sta.t $00d0fc         ; CUR_ADDR
ff0dca 2f cd 07 d0                         cmp.t $00d007         ; END_ADDR
ff0dce                                 ;; IF >= {
ff0dce 90 04                               bcc +4                ; IFff0dce_end [ff0dd4]
ff0dd0                                 ;; BREAK
ff0dd0 4f 80 02 00                         bra.a24 +2            ; loopff0dac_end [ff0dd6]
ff0dd4                 IFff0dce_end:
ff0dd4 80 d6                               bra -42               ; LOOPff0dac_loop [ff0dac]
ff0dd6                 LOOPff0dac_end:
ff0dd6 4f 60                               rts.a24

ff0dd8 ; SUB Draw_Peek_Line:
00d0fc-00d0fe   ; VAR @CUR_ADDR
000000          ; VAR @IDX
000003-000005   ; VAR @ADDR
ff0dd8 2f ad fc d0                         lda.t $00d0fc         ; CUR_ADDR
ff0ddc 2f 85 03                            sta.t $03             ; ADDR
ff0ddf a9 a4                               lda #$a4
ff0de1 4f 20 cf 06 ff                      jsr.a24 $ff06cf       ; PrintChar
ff0de6 2f a5 03                            lda.t $03             ; ADDR
ff0de9 4f 20 3f 05 ff                      jsr.a24 $ff053f       ; PrintHex24
ff0dee a9 ad                               lda #$ad
ff0df0 4f 20 cf 06 ff                      jsr.a24 $ff06cf       ; PrintChar
ff0df5                 FORff0df5_start:
ff0df5                                 ;; FOR @IDX = 0 TO 7 {
ff0df5 a2 00                               ldx #$0
ff0df7 86 00                               stx $00
ff0df9                 FORff0df5_loop:
ff0df9 a4 00                               ldy $00               ; IDX
ff0dfb 4f b1 03                            lda.a24 ($03),Y       ; ADDR
ff0dfe 4f 20 78 05 ff                      jsr.a24 $ff0578       ; PrintHexByte
ff0e03 4f 20 e0 06 ff                      jsr.a24 $ff06e0       ; PrintSpace
ff0e08 e6 00                               inc $00
ff0e0a a6 00                               ldx $00
ff0e0c e0 08                               cpx #$8
ff0e0e d0 e9                               bne -23               ; FORff0df5_loop [ff0df9]
ff0e10                 FORff0df5_end:
ff0e10                 FORff0e10_start:
ff0e10                                 ;; FOR @IDX = 0 TO 7 {
ff0e10 a2 00                               ldx #$0
ff0e12 86 00                               stx $00
ff0e14                 FORff0e10_loop:
ff0e14 a4 00                               ldy $00               ; IDX
ff0e16 4f b1 03                            lda.a24 ($03),Y       ; ADDR
ff0e19                                 ;; IF < 128 {
ff0e19 c9 80                               cmp #$80
ff0e1b b0 0b                               bcs +11               ; IFff0e19_end [ff0e28]
ff0e1d                                 ;; IF == 0 {
ff0e1d c9 00                               cmp #$0
ff0e1f d0 04                               bne +4                ; IFff0e1d_else [ff0e25]
ff0e21 a9 ae                               lda #$ae
ff0e23 80 03                               bra +3                ; IFff0e1d_end [ff0e28]
ff0e25                 IFff0e1d_else:
ff0e25                                 ;; ELSE
ff0e25 18                                  clc
ff0e26 69 80                               adc #$80
ff0e28                 IFff0e1d_end:
ff0e28                 IFff0e19_end:
ff0e28 4f 20 cf 06 ff                      jsr.a24 $ff06cf       ; PrintChar
ff0e2d e6 00                               inc $00
ff0e2f a6 00                               ldx $00
ff0e31 e0 08                               cpx #$8
ff0e33 d0 df                               bne -33               ; FORff0e10_loop [ff0e14]
ff0e35                 FORff0e10_end:
ff0e35 4f 60                               rts.a24

ff0e37 ; SUB Loop_Paginate:
00d0ff          ; VAR @LINENUM
ff0e37 ee ff d0                            inc $d0ff             ; LINENUM
ff0e3a ad ff d0                            lda $d0ff             ; LINENUM
ff0e3d                                 ;; IF == 22 {
ff0e3d c9 16                               cmp #$16
ff0e3f d0 18                               bne +24               ; IFff0e3d_end [ff0e59]
ff0e41 4f 20 98 08 ff                      jsr.a24 $ff0898       ; GetChar
ff0e46                                 ;; IF == 131 {
ff0e46 c9 83                               cmp #$83
ff0e48 d0 04                               bne +4                ; IFff0e46_end [ff0e4e]
ff0e4a a9 01                               lda #$1
ff0e4c 4f 60                               rts.a24
ff0e4e                 IFff0e46_end:
ff0e4e                                 ;; IF == 155 {
ff0e4e c9 9b                               cmp #$9b
ff0e50 d0 04                               bne +4                ; IFff0e4e_end [ff0e56]
ff0e52 a9 01                               lda #$1
ff0e54 4f 60                               rts.a24
ff0e56                 IFff0e4e_end:
ff0e56 9c ff d0                            stz $d0ff             ; LINENUM
ff0e59                 IFff0e3d_end:
ff0e59 4f 20 cd 07 ff                      jsr.a24 $ff07cd       ; NextLine
ff0e5e 9c fe 03                            stz $03fe             ; TXTPOS
ff0e61 a9 00                               lda #$0
ff0e63 4f 60                               rts.a24

ff0e65 ; SUB DoPoke:
00d000          ; VAR @ARGN
00d001          ; VAR @CMD
00d004          ; VAR @ADDRESS
00d007          ; VAR @VALUE
00d0fc-00d0fe   ; VAR @CUR_ADDR
ff0e65 ad 00 d0                            lda $d000             ; ARGN
ff0e68                                 ;; IF < 1 {
ff0e68 c9 01                               cmp #$1
ff0e6a b0 10                               bcs +16               ; IFff0e68_end [ff0e7c]
ff0e6c 2f a9 96 80 ff                      lda.t #$ff8096        ; NoAddressErrStr
ff0e71 2f 8d 00 d7                         sta.t $00d700
ff0e75 4f 20 b9 06 ff                      jsr.a24 $ff06b9       ; PrintError
ff0e7a 4f 60                               rts.a24
ff0e7c                 IFff0e68_end:
ff0e7c 2f ad 04 d0                         lda.t $00d004         ; ADDRESS
ff0e80 2f 8d 00 d7                         sta.t $00d700
ff0e84 4f 20 a8 05 ff                      jsr.a24 $ff05a8       ; ParseNumber
ff0e89 2f 8d 04 d0                         sta.t $00d004         ; ADDRESS
ff0e8d ad 00 d0                            lda $d000             ; ARGN
ff0e90                                 ;; IF < 2 {
ff0e90 c9 02                               cmp #$2
ff0e92 b0 10                               bcs +16               ; IFff0e90_end [ff0ea4]
ff0e94 2f a9 b4 80 ff                      lda.t #$ff80b4        ; NoValueErrStr
ff0e99 2f 8d 00 d7                         sta.t $00d700
ff0e9d 4f 20 b9 06 ff                      jsr.a24 $ff06b9       ; PrintError
ff0ea2 4f 60                               rts.a24
ff0ea4                 IFff0e90_end:
ff0ea4 2f ad 07 d0                         lda.t $00d007         ; VALUE
ff0ea8 2f 8d 00 d7                         sta.t $00d700
ff0eac 4f 20 a8 05 ff                      jsr.a24 $ff05a8       ; ParseNumber
ff0eb1 2f 8d 07 d0                         sta.t $00d007         ; VALUE
ff0eb5 4f 20 cd 07 ff                      jsr.a24 $ff07cd       ; NextLine
ff0eba 2f ae 04 d0                         ldx.t $00d004         ; ADDRESS
ff0ebe 2f ad 07 d0                         lda.t $00d007         ; VALUE
ff0ec2 2f c9 ff 00 00                      cmp.t #$ff
ff0ec7                                 ;; IF < {
ff0ec7 b0 04                               bcs +4                ; IFff0ec7_end [ff0ecd]
ff0ec9 4f 8b                               sta.a24 X
ff0ecb 80 0d                               bra +13               ; skip [ff0eda]
ff0ecd                 IFff0ec7_end:
ff0ecd 2f c9 ff ff 00                      cmp.t #$ffff
ff0ed2                                 ;; IF < {
ff0ed2 b0 04                               bcs +4                ; IFff0ed2_else [ff0ed8]
ff0ed4 5f 8b                               sta.w.a24 X
ff0ed6 80 02                               bra +2                ; IFff0ed2_end [ff0eda]
ff0ed8                 IFff0ed2_else:
ff0ed8                                 ;; ELSE
ff0ed8 6f 8b                               sta.t.a24 X
ff0eda                 IFff0ed2_end:
ff0eda                 skip:
ff0eda 2f ad 04 d0                         lda.t $00d004         ; ADDRESS
ff0ede 2f 29 f0 ff ff                      and.t #$fffff0
ff0ee3 2f 8d fc d0                         sta.t $00d0fc         ; CUR_ADDR
ff0ee7 4f 20 d8 0d ff                      jsr.a24 $ff0dd8       ; Draw_Peek_Line
ff0eec 4f 20 cd 07 ff                      jsr.a24 $ff07cd       ; NextLine
ff0ef1 4f 20 cd 07 ff                      jsr.a24 $ff07cd       ; NextLine
ff0ef6 4f 60                               rts.a24

ff0ef8 ; SUB DoRun:
00d000          ; VAR @ARGN
00d001          ; VAR @CMD
00d004          ; VAR @FILENAME
000009          ; VAR @FN
000003-000005   ; VAR @R_IDX
000006-000007   ; VAR @ACTUAL
000008-000009   ; VAR @C_IDX
ff0ef8 4f 20 cd 07 ff                      jsr.a24 $ff07cd       ; NextLine
ff0efd ad 00 d0                            lda $d000             ; ARGN
ff0f00                                 ;; IF < 1 {
ff0f00 c9 01                               cmp #$1
ff0f02 b0 10                               bcs +16               ; IFff0f00_end [ff0f14]
ff0f04 2f a9 77 80 ff                      lda.t #$ff8077        ; NoFilenameErrStr
ff0f09 2f 8d 00 d7                         sta.t $00d700
ff0f0d 4f 20 b9 06 ff                      jsr.a24 $ff06b9       ; PrintError
ff0f12 4f 60                               rts.a24
ff0f14                 IFff0f00_end:
ff0f14 2f ad 04 d0                         lda.t $00d004         ; FILENAME
ff0f18                                 ;; IF == {
ff0f18 d0 0d                               bne +13               ; IFff0f18_end [ff0f27]
ff0f1a 2f a9                               lda.t #$ff8077        ; NoFilenameErrStr
ff0f1c 2f 8d 00 d7                         sta.t $00d700
ff0f20 4f 20 b9 06 ff                      jsr.a24 $ff06b9       ; PrintError
ff0f25 4f 60                               rts.a24
ff0f27                 IFff0f18_end:
ff0f27 2f 8d 00 d6                         sta.t $00d600
ff0f2b 4f 20 f2 08 ff                      jsr.a24 $ff08f2       ; Disk4Exists
ff0f30                                 ;; IF != {
ff0f30 f0 07                               beq +7                ; IFff0f30_end [ff0f39]
ff0f32 4f 20 35 09 ff                      jsr.a24 $ff0935       ; Disk4PrintError
ff0f37 4f 60                               rts.a24
ff0f39                 IFff0f30_end:
ff0f39 2f ad 00 c8                         lda.t $00c800         ; DISK4_RAM
ff0f3d 2f c9 d2 d5 ce                      cmp.t #$ced5d2
ff0f42                                 ;; IF != {
ff0f42 f0 10                               beq +16               ; IFff0f42_end [ff0f54]
ff0f44 2f a9 e4 80 ff                      lda.t #$ff80e4        ; NotRUNFileError
ff0f49 2f 8d 00 d7                         sta.t $00d700
ff0f4d 4f 20 b9 06 ff                      jsr.a24 $ff06b9       ; PrintError
ff0f52 4f 60                               rts.a24
ff0f54                 IFff0f42_end:
ff0f54 4f 20 01 09 ff                      jsr.a24 $ff0901       ; Disk4Open
ff0f59                                 ;; IF != {
ff0f59 f0 07                               beq +7                ; IFff0f59_end [ff0f62]
ff0f5b 4f 20 35 09 ff                      jsr.a24 $ff0935       ; Disk4PrintError
ff0f60 4f 60                               rts.a24
ff0f62                 IFff0f59_end:
ff0f62 86 09                               stx $09               ; FN
ff0f64 2f 64 03                            stz.t $03             ; R_IDX
ff0f67                 LOOPff0f67_start:
ff0f67                                 ;; LOOP {
ff0f67                 LOOPff0f67_loop:
ff0f67 4f 20 24 09 ff                      jsr.a24 $ff0924       ; Disk4Read
ff0f6c                                 ;; IF == 2 {
ff0f6c c9 02                               cmp #$2
ff0f6e d0 04                               bne +4                ; IFff0f6c_end [ff0f74]
ff0f70                                 ;; BREAK
ff0f70 4f 80 39 00                         bra.a24 +57           ; loopff0f67_end [ff0fad]
ff0f74                 IFff0f6c_end:
ff0f74 2f ad f7 c0                         lda.t $00c0f7         ; DISK4_RET0
ff0f78                                 ;; IF == {
ff0f78 d0 04                               bne +4                ; IFff0f78_end [ff0f7e]
ff0f7a                                 ;; BREAK
ff0f7a 4f 80 2f 00                         bra.a24 +47           ; loopff0f67_end [ff0fad]
ff0f7e                 IFff0f78_end:
ff0f7e 2f 85 06                            sta.t $06             ; ACTUAL
ff0f81 1f 64 08                            stz.w $08             ; C_IDX
ff0f84                 LOOPff0f84_start:
ff0f84                                 ;; LOOP {
ff0f84                 LOOPff0f84_loop:
ff0f84 1f a2 00 c8                         ldx.w #$c800          ; DISK4_RAM
ff0f88 1f a4 08                            ldy.w $08             ; C_IDX
ff0f8b 4f ab                               lda.a24 XY
ff0f8d 2f e6 08                            inc.t $08             ; C_IDX
ff0f90 2f a2 00 00 01                      ldx.t #$10000
ff0f95 2f a4 03                            ldy.t $03             ; R_IDX
ff0f98 4f bb                               sta.a24 XY
ff0f9a 2f e6 03                            inc.t $03             ; R_IDX
ff0f9d 1f a4 08                            ldy.w $08             ; C_IDX
ff0fa0 1f c4 06                            cpy.w $06             ; ACTUAL
ff0fa3                                 ;; IF == {
ff0fa3 d0 04                               bne +4                ; IFff0fa3_end [ff0fa9]
ff0fa5                                 ;; BREAK
ff0fa5 4f 80 02 00                         bra.a24 +2            ; loopff0f84_end [ff0fab]
ff0fa9                 IFff0fa3_end:
ff0fa9 80 d9                               bra -39               ; LOOPff0f84_loop [ff0f84]
ff0fab                 LOOPff0f84_end:
ff0fab 80 ba                               bra -70               ; LOOPff0f67_loop [ff0f67]
ff0fad                 LOOPff0f67_end:
ff0fad a5 09                               lda $09               ; FN
ff0faf 4f 20 17 09 ff                      jsr.a24 $ff0917       ; Disk4Close
ff0fb4 4f 20 cd 07 ff                      jsr.a24 $ff07cd       ; NextLine
ff0fb9 ce 00 d0                            dec $d000             ; ARGN
ff0fbc ad 00 d0                            lda $d000             ; ARGN
ff0fbf 85 00                               sta $00
ff0fc1 18                                  clc
ff0fc2 65 00                               adc $00
ff0fc4 65 00                               adc $00
ff0fc6 2f 69 01 d0 00                      adc.t #$d001
ff0fcb 2f 85 00                            sta.t $00
ff0fce 2f a2 01 d0 00                      ldx.t #$d001
ff0fd3                 LOOPff0fd3_start:
ff0fd3                                 ;; LOOP {
ff0fd3                 LOOPff0fd3_loop:
ff0fd3 a0 03                               ldy #$3
ff0fd5 2f ab                               lda.t XY
ff0fd7 2f 8b                               sta.t X
ff0fd9 2f e8                               inx.t
ff0fdb 2f e8                               inx.t
ff0fdd 2f e8                               inx.t
ff0fdf 2f e4 00                            cpx.t $00
ff0fe2                                 ;; IF >= {
ff0fe2 90 04                               bcc +4                ; IFff0fe2_end [ff0fe8]
ff0fe4                                 ;; BREAK
ff0fe4 4f 80 02 00                         bra.a24 +2            ; loopff0fd3_end [ff0fea]
ff0fe8                 IFff0fe2_end:
ff0fe8 80 e9                               bra -23               ; LOOPff0fd3_loop [ff0fd3]
ff0fea                 LOOPff0fd3_end:
ff0fea 4f 20 00 00 01                      jsr.a24 $010000
ff0fef 4f 60                               rts.a24

ff0ff1 ; SUB DoReset:
00d000          ; VAR @ARGN
ff0ff1 ea                                  nop
ff0ff2 4f 4c 00 02 ff                      jmp.a24 $ff0200       ; Reset

ff0ff7 ; SUB DoText:
00d000          ; VAR @ARGN
00d001          ; VAR @CMD
00d004          ; VAR @WHERE
ff0ff7 ad 00 d0                            lda $d000             ; ARGN
ff0ffa                                 ;; IF < 1 {
ff0ffa c9 01                               cmp #$1
ff0ffc b0 08                               bcs +8                ; IFff0ffa_end [ff1006]
ff0ffe ad 54 c0                            lda $c054             ; TXTPAGE1
ff1001 9c fd 03                            stz $03fd             ; DISPMODE
ff1004 4f 60                               rts.a24
ff1006                 IFff0ffa_end:
ff1006 2f ae 04 d0                         ldx.t $00d004         ; WHERE
ff100a 4f 7b                               lda.a24 X
ff100c c9 38                               cmp #$38
ff100e                                 ;; IF == {
ff100e d0 1e                               bne +30               ; IFff100e_end [ff102e]
ff1010 a0 01                               ldy #$1
ff1012 4f ab                               lda.a24 XY
ff1014 c9 30                               cmp #$30
ff1016                                 ;; IF == {
ff1016 d0 06                               bne +6                ; IFff1016_end [ff101e]
ff1018 a0 02                               ldy #$2
ff101a 4f ab                               lda.a24 XY
ff101c                                 ;; IF == {
ff101c d0 00                               bne +0                ; IFff101c_end [ff101e]
ff101e                 IFff101c_end:
ff101e                 IFff1016_end:
ff101e 2f a9 00 81 ff                      lda.t #$ff8100        ; InvalidValue
ff1023 2f 8d 00 d7                         sta.t $00d700
ff1027 4f 20 b9 06 ff                      jsr.a24 $ff06b9       ; PrintError
ff102c 4f 60                               rts.a24
ff102e                 IFff100e_end:
ff102e c9 31                               cmp #$31
ff1030                                 ;; IF == {
ff1030 d0 0e                               bne +14               ; IFff1030_end [ff1040]
ff1032 a0 01                               ldy #$1
ff1034 4f ab                               lda.a24 XY
ff1036                                 ;; IF == {
ff1036 d0 08                               bne +8                ; IFff1036_end [ff1040]
ff1038 ad 54 c0                            lda $c054             ; TXTPAGE1
ff103b 9c fd 03                            stz $03fd             ; DISPMODE
ff103e 4f 60                               rts.a24
ff1040                 IFff1036_end:
ff1040                 IFff1030_end:
ff1040 c9 32                               cmp #$32
ff1042                                 ;; IF == {
ff1042 d0 10                               bne +16               ; IFff1042_end [ff1054]
ff1044 a0 01                               ldy #$1
ff1046 4f ab                               lda.a24 XY
ff1048                                 ;; IF == {
ff1048 d0 0a                               bne +10               ; IFff1048_end [ff1054]
ff104a ad 55 c0                            lda $c055             ; TXTPAGE2
ff104d a9 01                               lda #$1               ; DISP_TEXT_2
ff104f 8d fd 03                            sta $03fd             ; DISPMODE
ff1052 4f 60                               rts.a24
ff1054                 IFff1048_end:
ff1054                 IFff1042_end:
ff1054 2f a9 00 81 ff                      lda.t #$ff8100        ; InvalidValue
ff1059 2f 8d 00 d7                         sta.t $00d700
ff105d 4f 20 b9 06 ff                      jsr.a24 $ff06b9       ; PrintError
ff1062 4f 60                               rts.a24

ff1064 ; SUB Do2Plus:
00d000          ; VAR @ARGN
ff1064 8d 82 c0                            sta $c082             ; LANGCLR
ff1067 fc                                  sws
ff1068 a2 ff                               ldx #$ff
ff106a 9a                                  txs
ff106b a9 00                               lda #$0
ff106d 8d f4 03                            sta $03f4             ; PWREDUP
ff1070 6c fc ff                            jmp ($fffc)           ; RSTVECTOR

; 28557 BYTES of FILLER

ff8000 ; DATA TextScreenBase:
ff8000 00 04
ff8002 80 04
ff8004 00 05
ff8006 80 05
ff8008 00 06
ff800a 80 06
ff800c 00 07
ff800e 80 07
ff8010 28 04
ff8012 a8 04
ff8014 28 05
ff8016 a8 05
ff8018 28 06
ff801a a8 06
ff801c 28 07
ff801e a8 07
ff8020 50 04
ff8022 d0 04
ff8024 50 05
ff8026 d0 05
ff8028 50 06
ff802a d0 06
ff802c 50 07
ff802e d0 07

ff8030 ; DATA Hello:
ff8030 41 70 70 6c 65 20 5d 5b 34 00

ff803a ; DATA CommandListStr:
ff803a 43 4f 4d 4d 41 4e 44 53 3a 00

ff8044 ; DATA ASCIIHeaderStr:
ff8044 20 20 30 31 32 33 34 35 36 37 38 39 41 42 43 44 45 46 00

ff8057 ; DATA ASCIIDashesStr:
ff8057 20 20 2d 2d 2d 2d 2d 2d 2d 2d 2d 2d 2d 2d 2d 2d 2d 2d 00

ff806a ; DATA CatalogHeaderStr:
ff806a 43 41 54 41 4c 4f 47 20 66 6f 72 20 00

ff8077 ; DATA NoFilenameErrStr:
ff8077 2a 2a 2a 20 46 49 4c 45 4e 41 4d 45 20 6d 75 73 74 20 62 65 20 73 70 65 63 69 66 69 65 64 00

ff8096 ; DATA NoAddressErrStr:
ff8096 2a 2a 2a 20 41 44 44 52 45 53 53 20 6d 75 73 74 20 62 65 20 73 70 65 63 69 66 69 65 64 00

ff80b4 ; DATA NoValueErrStr:
ff80b4 2a 2a 2a 20 56 41 4c 55 45 20 6d 75 73 74 20 62 65 20 73 70 65 63 69 66 69 65 64 00

ff80d0 ; DATA LoadedStr:
ff80d0 4c 4f 41 44 45 44 20 00

ff80d8 ; DATA LoadedBytesToStr:
ff80d8 20 62 79 74 65 73 20 74 6f 20 24 00

ff80e4 ; DATA NotRUNFileError:
ff80e4 2a 2a 2a 20 46 49 4c 45 20 4d 75 73 74 20 62 65 20 61 20 52 55 4e 20 66 69 6c 65 00

ff8100 ; DATA InvalidValue:
ff8100 2a 2a 2a 20 49 4e 56 41 4c 49 44 20 56 41 4c 55 45 00

ff8112 ; DATA Disk4ErrorStr:
ff8112 2a 2a 2a 20 44 49 53 4b 34 20 45 52 52 4f 52 00

ff8122 ; DATA Disk4ErrorNotFoundStr:
ff8122 2a 2a 2a 20 44 49 53 4b 34 3a 20 46 49 4c 45 20 4e 4f 54 20 46 4f 55 4e 44 00

ff813c ; DATA Disk4ErrorReadStr:
ff813c 2a 2a 2a 20 44 49 53 4b 34 3a 20 52 45 41 44 20 45 52 52 4f 52 00

ff8152 ; DATA BeepTimes:
ff8152 dc
ff8153 dc
ff8154 dc
ff8155 3c
ff8156 3c
ff8157 3c
ff8158 3c
ff8159 3c

ff815a ; DATA CMD_Help:
ff815a 3f 00

ff815c ; DATA CMD_Ascii:
ff815c 61 73 63 69 69 00

ff8162 ; DATA CMD_Beep:
ff8162 62 65 65 70 00

ff8167 ; DATA CMD_Catalog:
ff8167 63 61 74 61 6c 6f 67 00

ff816f ; DATA CMD_Clear:
ff816f 63 6c 65 61 72 00

ff8175 ; DATA CMD_Echo:
ff8175 65 63 68 6f 00

ff817a ; DATA CMD_Load:
ff817a 6c 6f 61 64 00

ff817f ; DATA CMD_Peek:
ff817f 70 65 65 6b 00

ff8184 ; DATA CMD_Poke:
ff8184 70 6f 6b 65 00

ff8189 ; DATA CMD_Reset:
ff8189 72 65 73 65 74 00

ff818f ; DATA CMD_Run:
ff818f 72 75 6e 00

ff8193 ; DATA CMD_Text:
ff8193 74 65 78 74 00

ff8198 ; DATA CMD_Wait:
ff8198 77 61 69 74 00

ff819d ; DATA CMD_View:
ff819d 76 69 65 77 00

ff81a2 ; DATA CMD_2Plus:
ff81a2 32 2b 00

ff81a5 ; DATA CommandList:
ff81a5 5a 81 ff
ff81a8 6b 09 ff
ff81ab 5c 81 ff
ff81ae 0c 0a ff
ff81b1 67 81 ff
ff81b4 80 0a ff
ff81b7 62 81 ff
ff81ba 13 07 ff
ff81bd 6f 81 ff
ff81c0 1a 0b ff
ff81c3 75 81 ff
ff81c6 3f 0b ff
ff81c9 7a 81 ff
ff81cc 53 0b ff
ff81cf 7f 81 ff
ff81d2 2d 0d ff
ff81d5 84 81 ff
ff81d8 65 0e ff
ff81db 89 81 ff
ff81de f1 0f ff
ff81e1 8f 81 ff
ff81e4 f8 0e ff
ff81e7 93 81 ff
ff81ea f7 0f ff
ff81ed 9d 81 ff
ff81f0 46 0c ff
ff81f3 98 81 ff
ff81f6 30 07 ff
ff81f9 a2 81 ff
ff81fc 64 10 ff

; 32248 BYTES of FILLER

fffff7 ; DATA Vectors:
fffff7 00 00 00
fffffa 00 00 ff
fffffd 00 00 00

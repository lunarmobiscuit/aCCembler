0000fe          ; GLOBAL @TXTPTR
0003ff          ; GLOBAL @TXTROW
0003fe          ; GLOBAL @TXTPOS
000200          ; GLOBAL @TXTBUFFER
000000          ; GLOBAL @ARG0

ff0000 ; SUB Start:
ff0000 4f 4c 00 02 ff                      jmp.a24 $ff0200       ; Reset

ff0005 ; DATA ROMVectors:
ff0005 39 04 ff
ff0008 55 04 ff
ff000b 7e 04 ff
ff000e ba 03 ff
ff0011 a0 03 ff
ff0014 58 05 ff

; 489 BYTES of FILLER

ff0200 ; SUB Reset:
ff0200 d8                                  cld
ff0201 a2 ff                               ldx #$ff
ff0203 9a                                  txs
ff0204 ad 51 c0                            lda $c051             ; TXTSET
ff0207 ad 54 c0                            lda $c054             ; TXTPAGE1
ff020a ad 58 c0                            lda $c058             ; SETAN0
ff020d ad 5a c0                            lda $c05a             ; SETAN1
ff0210 ad 5d c0                            lda $c05d             ; CLRAN2
ff0213 ad 5f c0                            lda $c05f             ; CLRAN3
ff0216 ad ff cf                            lda $cfff             ; CLRROM
ff0219 2c 10 c0                            bit $c010             ; KBDSTRB
ff021c a2 00                               ldx #$0
ff021e 4f 20 39 04 ff                      jsr.a24 $ff0439       ; ClearScreen
ff0223 4f 20 58 05 ff                      jsr.a24 $ff0558       ; AppleII4
ff0228 a9 02                               lda #$2
ff022a 8d ff 03                            sta $03ff             ; TXTROW
ff022d a9 00                               lda #$0
ff022f 8d fe 03                            sta $03fe             ; TXTPOS

ff0232 ; SUB EchoKeys:
ff0232 4f 20 b9 04 ff                      jsr.a24 $ff04b9       ; ClearInputBuffer
ff0237                 LOOPff0237_start:
ff0237                                 ;; LOOP {
ff0237                 LOOPff0237_loop:
ff0237 4f 20 2b 04 ff                      jsr.a24 $ff042b       ; ScreenBase
ff023c ad fe 03                            lda $03fe             ; TXTPOS
ff023f                                 ;; IF == {
ff023f d0 0e                               bne +14               ; IFff023f_end [ff024f]
ff0241 a9 3a                               lda #$3a
ff0243 4f 20 ba 03 ff                      jsr.a24 $ff03ba       ; PrintChar
ff0248 a9 df                               lda #$df
ff024a 4f 20 c8 03 ff                      jsr.a24 $ff03c8       ; PrintCursor
ff024f                 IFff023f_end:
ff024f                 LOOPff024f_start:
ff024f                                 ;; LOOP {
ff024f                 LOOPff024f_loop:
ff024f 2c 00 c0                            bit $c000             ; KBD
ff0252                                 ;; IF - {
ff0252 10 04                               bpl +4                ; IFff0252_end [ff0258]
ff0254                                 ;; BREAK
ff0254 4f 80 02 00                         bra.a24 +2            ; loopff024f_end [ff025a]
ff0258                 IFff0252_end:
ff0258 80 f5                               bra -11               ; LOOPff024f_loop [ff024f]
ff025a                 LOOPff024f_end:
ff025a ad 00 c0                            lda $c000             ; KBD
ff025d 2c 10 c0                            bit $c010             ; KBDSTRB
ff0260                                 ;; IF == 141 {
ff0260 c9 8d                               cmp #$8d
ff0262 d0 15                               bne +21               ; IFff0260_end [ff0279]
ff0264 a9 a0                               lda #$a0
ff0266 91 fe                               sta ($fe),Y           ; TXTPTR
ff0268 4f 20 55 04 ff                      jsr.a24 $ff0455       ; NextLine
ff026d 4f 20 cb 02 ff                      jsr.a24 $ff02cb       ; CommandLine
ff0272 4f 20 b9 04 ff                      jsr.a24 $ff04b9       ; ClearInputBuffer
ff0277                                 ;; CONTINUE
ff0277 80 be                               bra -66               ; loopff0237_start [ff0237]
ff0279                 IFff0260_end:
ff0279                                 ;; IF == 136 {
ff0279 c9 88                               cmp #$88
ff027b d0 14                               bne +20               ; IFff0279_end [ff0291]
ff027d ad fe 03                            lda $03fe             ; TXTPOS
ff0280                                 ;; IF > 1 {
ff0280 c9 01                               cmp #$1
ff0282 f0 0b                               beq +11               ; IFff0280_end [ff028f]
ff0284 90 09                               bcc +9                ; IFff0280_end [ff028f]
ff0286 a8                                  tay
ff0287 88                                  dey
ff0288 8c fe 03                            sty $03fe             ; TXTPOS
ff028b a9 a0                               lda #$a0
ff028d 91 fe                               sta ($fe),Y           ; TXTPTR
ff028f                 IFff0280_end:
ff028f                                 ;; CONTINUE
ff028f 80 a6                               bra -90               ; loopff0237_start [ff0237]
ff0291                 IFff0279_end:
ff0291                                 ;; IF == 155 {
ff0291 c9 9b                               cmp #$9b
ff0293 d0 13                               bne +19               ; IFff0291_end [ff02a8]
ff0295 a2 02                               ldx #$2
ff0297 4f 20 39 04 ff                      jsr.a24 $ff0439       ; ClearScreen
ff029c a9 02                               lda #$2
ff029e 8d ff 03                            sta $03ff             ; TXTROW
ff02a1 a9 00                               lda #$0
ff02a3 8d fe 03                            sta $03fe             ; TXTPOS
ff02a6                                 ;; CONTINUE
ff02a6 80 8f                               bra -113              ; loopff0237_start [ff0237]
ff02a8                 IFff0291_end:
ff02a8                                 ;; IF > 159 {
ff02a8 c9 9f                               cmp #$9f
ff02aa f0 1b                               beq +27               ; IFff02a8_end [ff02c7]
ff02ac 90 19                               bcc +25               ; IFff02a8_end [ff02c7]
ff02ae ac fe 03                            ldy $03fe             ; TXTPOS
ff02b1 4f 20 ba 03 ff                      jsr.a24 $ff03ba       ; PrintChar
ff02b6 c0 28                               cpy #$28
ff02b8                                 ;; IF < {
ff02b8 b0 0d                               bcs +13               ; IFff02b8_end [ff02c7]
ff02ba 29 7f                               and #$7f
ff02bc 88                                  dey
ff02bd 99 00 02                            sta $0200,Y           ; TXTBUFFER
ff02c0 a9 df                               lda #$df
ff02c2 4f 20 c8 03 ff                      jsr.a24 $ff03c8       ; PrintCursor
ff02c7                 IFff02b8_end:
ff02c7                 IFff02a8_end:
ff02c7 4f 80 6c ff                         bra.a24 -148          ; LOOPff0237_loop [ff0237]
ff02cb                 LOOPff0237_end:

ff02cb ; SUB CommandLine:
000004          ; VAR @I
000005          ; VAR @I6
ff02cb                 FORff02cb_start:
ff02cb                                 ;; FOR @I = 0 TO 5 {
ff02cb a2 00                               ldx #$0
ff02cd 86 04                               stx $04
ff02cf                 FORff02cb_loop:
ff02cf a5 04                               lda $04               ; I
ff02d1                       ;; A <<= 2 
ff02d1 0a                                  asl
ff02d2 0a                                  asl
ff02d3 85 05                               sta $05               ; I6
ff02d5 a5 04                               lda $04               ; I
ff02d7                       ;; A <<= 1 
ff02d7 0a                                  asl
ff02d8 18                                  clc
ff02d9 65 05                               adc $05               ; I6
ff02db 85 05                               sta $05               ; I6
ff02dd aa                                  tax
ff02de 6f bd 5a 80 ff                      lda.t.a24 $ff805a,X   ; CommandList
ff02e3 2f 85 00                            sta.t $00             ; ARG0
ff02e6 4f 20 08 03 ff                      jsr.a24 $ff0308       ; CompareText
ff02eb                                 ;; IF - {
ff02eb 10 11                               bpl +17               ; IFff02eb_end [ff02fe]
ff02ed a6 05                               ldx $05               ; I6
ff02ef 6f bd 5d 80 ff                      lda.t.a24 $ff805d,X   ; CommandList
ff02f4 2f 85 00                            sta.t $00             ; ARG0
ff02f7 4f 5c 00 00 00                      jsr.a24 ($00)         ; ARG0
ff02fc 4f 60                               rts.a24
ff02fe                 IFff02eb_end:
ff02fe e6 04                               inc $04
ff0300 a6 04                               ldx $04
ff0302 e0 05                               cpx #$5
ff0304 d0 c9                               bne -55               ; FORff02cb_loop [ff02cf]
ff0306                 FORff02cb_end:
ff0306 4f 60                               rts.a24

ff0308 ; SUB CompareText:
ff0308                 FORff0308_start:
ff0308                                 ;; FOR Y = 0 TO 39 {
ff0308 a0 00                               ldy #$0
ff030a                 FORff0308_loop:
ff030a b9 00 02                            lda $0200,Y           ; TXTBUFFER
ff030d 4f d1 00                            cmp.a24 ($00),Y       ; ARG0
ff0310                                 ;; IF != {
ff0310 f0 04                               beq +4                ; IFff0310_end [ff0316]
ff0312 a9 00                               lda #$0
ff0314 4f 60                               rts.a24
ff0316                 IFff0310_end:
ff0316                                 ;; IF == 0 {
ff0316 c9 00                               cmp #$0
ff0318 d0 0f                               bne +15               ; IFff0316_end [ff0329]
ff031a 4f b1 00                            lda.a24 ($00),Y       ; ARG0
ff031d                                 ;; IF == 0 {
ff031d c9 00                               cmp #$0
ff031f d0 04                               bne +4                ; IFff031d_end [ff0325]
ff0321 a9 ff                               lda #$ff
ff0323 4f 60                               rts.a24
ff0325                 IFff031d_end:
ff0325 a9 00                               lda #$0
ff0327 4f 60                               rts.a24
ff0329                 IFff0316_end:
ff0329 c8                                  iny
ff032a c0 27                               cpy #$27
ff032c d0 dc                               bne -36               ; FORff0308_loop [ff030a]
ff032e                 FORff0308_end:
ff032e a9 00                               lda #$0
ff0330 4f 60                               rts.a24

ff0332 ; SUB DoClear:
ff0332 a2 02                               ldx #$2
ff0334 4f 20 39 04 ff                      jsr.a24 $ff0439       ; ClearScreen
ff0339 a9 02                               lda #$2
ff033b 8d ff 03                            sta $03ff             ; TXTROW
ff033e a9 00                               lda #$0
ff0340 8d fe 03                            sta $03fe             ; TXTPOS
ff0343 4f 60                               rts.a24

ff0345 ; SUB DoMemory:
ff0345 4f 20 55 04 ff                      jsr.a24 $ff0455       ; NextLine
ff034a a9 00                               lda #$0
ff034c 4f 20 77 03 ff                      jsr.a24 $ff0377       ; PrintHexByte
ff0351 a9 ad                               lda #$ad
ff0353 4f 20 ba 03 ff                      jsr.a24 $ff03ba       ; PrintChar
ff0358 4f 20 d3 03 ff                      jsr.a24 $ff03d3       ; PrintSpace
ff035d a2 00                               ldx #$0
ff035f                 loop_memory:
ff035f b5 00                               lda $00,X
ff0361 4f 20 77 03 ff                      jsr.a24 $ff0377       ; PrintHexByte
ff0366 4f 20 d3 03 ff                      jsr.a24 $ff03d3       ; PrintSpace
ff036b e8                                  inx
ff036c e0 08                               cpx #$8
ff036e d0 ef                               bne -17               ; loop_memory [ff035f]
ff0370 4f 20 55 04 ff                      jsr.a24 $ff0455       ; NextLine
ff0375 4f 60                               rts.a24

ff0377 ; SUB PrintHexByte:
ff0377 48                                  pha
ff0378 4a                                  lsr
ff0379 4a                                  lsr
ff037a 4a                                  lsr
ff037b 4a                                  lsr
ff037c 4f 20 8b 03 ff                      jsr.a24 $ff038b       ; PrintHexDigit
ff0381 68                                  pla
ff0382 29 0f                               and #$f
ff0384 4f 20 8b 03 ff                      jsr.a24 $ff038b       ; PrintHexDigit
ff0389 4f 60                               rts.a24

ff038b ; SUB PrintHexDigit:
ff038b c9 0a                               cmp #$a
ff038d 90 05                               bcc +5                ; print_hex_digit_09 [ff0394]
ff038f 18                                  clc
ff0390 69 b7                               adc #$b7
ff0392 80 02                               bra +2                ; print_hex_digit [ff0396]
ff0394                 print_hex_digit_09:
ff0394 69 b0                               adc #$b0
ff0396                 print_hex_digit:
ff0396 ac fe 03                            ldy $03fe             ; TXTPOS
ff0399 91 fe                               sta ($fe),Y           ; TXTPTR
ff039b ee fe 03                            inc $03fe             ; TXTPOS
ff039e 4f 60                               rts.a24

ff03a0 ; SUB PrintString:
ff03a0                 FORff03a0_start:
ff03a0                                 ;; FOR Y = 0 TO 255 {
ff03a0 a0 00                               ldy #$0
ff03a2                 FORff03a0_loop:
ff03a2 2f b1 00                            lda.t ($00),Y         ; ARG0
ff03a5 f0 11                               beq +17               ; forff03a0_end [ff03b8]
ff03a7 84 02                               sty $02
ff03a9 ac fe 03                            ldy $03fe             ; TXTPOS
ff03ac 91 fe                               sta ($fe),Y           ; TXTPTR
ff03ae ee fe 03                            inc $03fe             ; TXTPOS
ff03b1 a4 02                               ldy $02
ff03b3 c8                                  iny
ff03b4 c0 ff                               cpy #$ff
ff03b6 d0 ea                               bne -22               ; FORff03a0_loop [ff03a2]
ff03b8                 FORff03a0_end:
ff03b8 4f 60                               rts.a24

ff03ba ; SUB PrintChar:
ff03ba ac fe 03                            ldy $03fe             ; TXTPOS
ff03bd c0 28                               cpy #$28
ff03bf                                 ;; IF < {
ff03bf b0 05                               bcs +5                ; IFff03bf_end [ff03c6]
ff03c1 91 fe                               sta ($fe),Y           ; TXTPTR
ff03c3 ee fe 03                            inc $03fe             ; TXTPOS
ff03c6                 IFff03bf_end:
ff03c6 4f 60                               rts.a24

ff03c8 ; SUB PrintCursor:
ff03c8 ac fe 03                            ldy $03fe             ; TXTPOS
ff03cb c0 28                               cpy #$28
ff03cd                                 ;; IF < {
ff03cd b0 02                               bcs +2                ; IFff03cd_end [ff03d1]
ff03cf 91 fe                               sta ($fe),Y           ; TXTPTR
ff03d1                 IFff03cd_end:
ff03d1 4f 60                               rts.a24

ff03d3 ; SUB PrintSpace:
ff03d3 a9 a0                               lda #$a0
ff03d5 ac fe 03                            ldy $03fe             ; TXTPOS
ff03d8 91 fe                               sta ($fe),Y           ; TXTPTR
ff03da ee fe 03                            inc $03fe             ; TXTPOS
ff03dd 4f 60                               rts.a24

ff03df ; SUB PrintDebugValue:
ff03df 48                                  pha
ff03e0 48                                  pha
ff03e1                       ;; A >>= 4 
ff03e1 4a                                  lsr
ff03e2 4a                                  lsr
ff03e3 4a                                  lsr
ff03e4 4a                                  lsr
ff03e5                                 ;; IF >= 10 {
ff03e5 c9 0a                               cmp #$a
ff03e7 90 05                               bcc +5                ; IFff03e5_else [ff03ee]
ff03e9                       ;; A += 183 
ff03e9 18                                  clc
ff03ea 69 b7                               adc #$b7
ff03ec 80 03                               bra +3                ; IFff03e5_end [ff03f1]
ff03ee                 IFff03e5_else:
ff03ee                                 ;; ELSE
ff03ee                       ;; A += 176 
ff03ee 18                                  clc
ff03ef 69 b0                               adc #$b0
ff03f1                 IFff03e5_end:
ff03f1 8d 26 04                            sta $0426
ff03f4 68                                  pla
ff03f5                       ;; A &= 15 
ff03f5 29 0f                               and #$f
ff03f7                                 ;; IF >= 10 {
ff03f7 c9 0a                               cmp #$a
ff03f9 90 05                               bcc +5                ; IFff03f7_else [ff0400]
ff03fb                       ;; A += 183 
ff03fb 18                                  clc
ff03fc 69 b7                               adc #$b7
ff03fe 80 03                               bra +3                ; IFff03f7_end [ff0403]
ff0400                 IFff03f7_else:
ff0400                                 ;; ELSE
ff0400                       ;; A += 176 
ff0400 18                                  clc
ff0401 69 b0                               adc #$b0
ff0403                 IFff03f7_end:
ff0403 8d 27 04                            sta $0427
ff0406 68                                  pla
ff0407 4f 60                               rts.a24

ff0409 ; SUB PrintDebugChar:
ff0409 8d 27 04                            sta $0427
ff040c a9 a0                               lda #$a0
ff040e 8d 26 04                            sta $0426
ff0411 4f 60                               rts.a24

ff0413 ; SUB PrintDebug2Chars:
ff0413 1f 8d 26 04                         sta.w $000426
ff0417 4f 60                               rts.a24

ff0419 ; SUB DoReset:
ff0419 ea                                  nop
ff041a 4f 4c 00 02 ff                      jmp.a24 $ff0200       ; Reset

ff041f ; SUB Do2Plus:
ff041f fc                                  sws
ff0420 a2 ff                               ldx #$ff
ff0422 9a                                  txs
ff0423 a9 00                               lda #$0
ff0425 8d f4 03                            sta $03f4             ; PWREDUP
ff0428 6c fc ff                            jmp ($fffc)           ; RSTVECTOR

ff042b ; SUB ScreenBase:
ff042b                       ;; X = M@$3ff 
ff042b ae ff 03                            ldx $03ff
ff042e 2b                                  xsl
ff042f 5f bd 00 80 ff                      lda.w.a24 $ff8000,X   ; TextScreenBase
ff0434 1f 85 fe                            sta.w $fe             ; TXTPTR
ff0437 4f 60                               rts.a24

ff0439 ; SUB ClearScreen:
ff0439 2b                                  xsl
ff043a                 loop_clear_line:
ff043a 5f bd 00 80 ff                      lda.w.a24 $ff8000,X   ; TextScreenBase
ff043f 1f 85 fe                            sta.w $fe             ; TXTPTR
ff0442 a9 a0                               lda #$a0
ff0444 a0 00                               ldy #$0
ff0446                 loop_clear_char:
ff0446 91 fe                               sta ($fe),Y           ; TXTPTR
ff0448 c8                                  iny
ff0449 c0 28                               cpy #$28
ff044b d0 f9                               bne -7                ; loop_clear_char [ff0446]
ff044d e8                                  inx
ff044e e8                                  inx
ff044f e0 30                               cpx #$30
ff0451 d0 e7                               bne -25               ; loop_clear_line [ff043a]
ff0453 4f 60                               rts.a24

ff0455 ; SUB NextLine:
ff0455 ad ff 03                            lda $03ff             ; TXTROW
ff0458 c9 17                               cmp #$17
ff045a f0 0f                               beq +15               ; next_line_scroll [ff046b]
ff045c                 next_line_next_row:
ff045c ee ff 03                            inc $03ff             ; TXTROW
ff045f 4f 20 2b 04 ff                      jsr.a24 $ff042b       ; ScreenBase
ff0464 a9 00                               lda #$0
ff0466 8d fe 03                            sta $03fe             ; TXTPOS
ff0469 4f 60                               rts.a24
ff046b                 next_line_scroll:
ff046b a2 02                               ldx #$2
ff046d 4f 20 7e 04 ff                      jsr.a24 $ff047e       ; ScrollScreen
ff0472 a9 17                               lda #$17
ff0474 8d ff 03                            sta $03ff             ; TXTROW
ff0477 a9 00                               lda #$0
ff0479 8d fe 03                            sta $03fe             ; TXTPOS
ff047c 4f 60                               rts.a24

ff047e ; SUB ScrollScreen:
ff047e 2b                                  xsl
ff047f                 loop_scroll_line:
ff047f 5f bd 00 80 ff                      lda.w.a24 $ff8000,X   ; TextScreenBase
ff0484 1f 85 fe                            sta.w $fe             ; TXTPTR
ff0487 5f bd 02 80 ff                      lda.w.a24 $ff8002,X   ; TextScreenBase
ff048c 1f 85 00                            sta.w $00
ff048f a0 00                               ldy #$0
ff0491                 loop_scroll_char:
ff0491 b1 00                               lda ($00),Y
ff0493 91 fe                               sta ($fe),Y           ; TXTPTR
ff0495 c8                                  iny
ff0496 c0 28                               cpy #$28
ff0498 d0 f7                               bne -9                ; loop_scroll_char [ff0491]
ff049a e8                                  inx
ff049b e8                                  inx
ff049c e0 2e                               cpx #$2e
ff049e d0 df                               bne -33               ; loop_scroll_line [ff047f]
ff04a0                 scroll_clear_last_line:
ff04a0 5f bd 00 80 ff                      lda.w.a24 $ff8000,X   ; TextScreenBase
ff04a5 1f 85 fe                            sta.w $fe             ; TXTPTR
ff04a8 1f a9 a0 a0                         lda.w #$a0a0
ff04ac a0 00                               ldy #$0
ff04ae                 loop_scroll_clear_line:
ff04ae 1f 91 fe                            sta.w ($fe),Y         ; TXTPTR
ff04b1 c8                                  iny
ff04b2 c8                                  iny
ff04b3 c0 28                               cpy #$28
ff04b5 d0 f7                               bne -9                ; loop_scroll_clear_line [ff04ae]
ff04b7                 done_with_scroll:
ff04b7 4f 60                               rts.a24

ff04b9 ; SUB ClearInputBuffer:
ff04b9 a9 00                               lda #$0
ff04bb a2 ff                               ldx #$ff
ff04bd                 loop_clear_buffer:
ff04bd 9d 00 02                            sta $0200,X           ; TXTBUFFER
ff04c0 ca                                  dex
ff04c1 d0 fa                               bne -6                ; loop_clear_buffer [ff04bd]
ff04c3 8d 00 02                            sta $0200
ff04c6 4f 60                               rts.a24

ff04c8 ; SUB DoC081:
ff04c8 ad 81 c0                            lda $c081
ff04cb ad 81 c0                            lda $c081
ff04ce 4f 20 55 04 ff                      jsr.a24 $ff0455       ; NextLine
ff04d3 a9 aa                               lda #$aa
ff04d5 8d 00 e0                            sta $e000
ff04d8 a9 e0                               lda #$e0
ff04da 4f 20 77 03 ff                      jsr.a24 $ff0377       ; PrintHexByte
ff04df a9 00                               lda #$0
ff04e1 4f 20 77 03 ff                      jsr.a24 $ff0377       ; PrintHexByte
ff04e6 a9 ad                               lda #$ad
ff04e8 4f 20 ba 03 ff                      jsr.a24 $ff03ba       ; PrintChar
ff04ed 4f 20 d3 03 ff                      jsr.a24 $ff03d3       ; PrintSpace
ff04f2 a2 00                               ldx #$0
ff04f4                 loop_c081:
ff04f4 bd 00 e0                            lda $e000,X
ff04f7 4f 20 77 03 ff                      jsr.a24 $ff0377       ; PrintHexByte
ff04fc 4f 20 d3 03 ff                      jsr.a24 $ff03d3       ; PrintSpace
ff0501 e8                                  inx
ff0502 e0 08                               cpx #$8
ff0504 d0 ee                               bne -18               ; loop_c081 [ff04f4]
ff0506 4f 20 55 04 ff                      jsr.a24 $ff0455       ; NextLine
ff050b 4f 60                               rts.a24

ff050d ; SUB DoC083:
ff050d ad 83 c0                            lda $c083
ff0510 ad 83 c0                            lda $c083
ff0513 4f 20 55 04 ff                      jsr.a24 $ff0455       ; NextLine
ff0518 ad fe 03                            lda $03fe             ; TXTPOS
ff051b 8d 00 e0                            sta $e000
ff051e a5 04                               lda $04
ff0520 8d 01 e0                            sta $e001
ff0523 a9 e0                               lda #$e0
ff0525 4f 20 77 03 ff                      jsr.a24 $ff0377       ; PrintHexByte
ff052a a9 00                               lda #$0
ff052c 4f 20 77 03 ff                      jsr.a24 $ff0377       ; PrintHexByte
ff0531 a9 ad                               lda #$ad
ff0533 4f 20 ba 03 ff                      jsr.a24 $ff03ba       ; PrintChar
ff0538 4f 20 d3 03 ff                      jsr.a24 $ff03d3       ; PrintSpace
ff053d a2 00                               ldx #$0
ff053f                 loop_c083:
ff053f bd 00 e0                            lda $e000,X
ff0542 4f 20 77 03 ff                      jsr.a24 $ff0377       ; PrintHexByte
ff0547 4f 20 d3 03 ff                      jsr.a24 $ff03d3       ; PrintSpace
ff054c e8                                  inx
ff054d e0 08                               cpx #$8
ff054f d0 ee                               bne -18               ; loop_c083 [ff053f]
ff0551 4f 20 55 04 ff                      jsr.a24 $ff0455       ; NextLine
ff0556 4f 60                               rts.a24

ff0558 ; SUB AppleII4:
ff0558                 FORff0558_start:
ff0558                                 ;; FOR X = 0 TO 255 {
ff0558 a2 00                               ldx #$0
ff055a                 FORff0558_loop:
ff055a 4f bd 30 80 ff                      lda.a24 $ff8030,X     ; Hello
ff055f f0 0a                               beq +10               ; forff0558_end [ff056b]
ff0561 09 80                               ora #$80
ff0563 9d 00 04                            sta $0400,X
ff0566 e8                                  inx
ff0567 e0 ff                               cpx #$ff
ff0569 d0 ef                               bne -17               ; FORff0558_loop [ff055a]
ff056b                 FORff0558_end:
ff056b 4f 60                               rts.a24

; 31379 BYTES of FILLER

ff8000 ; DATA TextScreenBase:
ff8000 00 04
ff8002 80 04
ff8004 00 05
ff8006 80 05
ff8008 00 06
ff800a 80 06
ff800c 00 07
ff800e 80 07
ff8010 28 04
ff8012 a8 04
ff8014 28 05
ff8016 a8 05
ff8018 28 06
ff801a a8 06
ff801c 28 07
ff801e a8 07
ff8020 50 04
ff8022 d0 04
ff8024 50 05
ff8026 d0 05
ff8028 50 06
ff802a d0 06
ff802c 50 07
ff802e d0 07

ff8030 ; DATA Hello:
ff8030 41 70 70 6c 65 20 5d 5b 34 00

ff803a ; DATA CMD_Clear:
ff803a 63 6c 65 61 72 00

ff8040 ; DATA CMD_Memory:
ff8040 6d 65 6d 6f 72 79 00

ff8047 ; DATA CMD_Reset:
ff8047 72 65 73 65 74 00

ff804d ; DATA CMD_2Plus:
ff804d 32 2b 00

ff8050 ; DATA CMD_C081:
ff8050 63 30 38 31 00

ff8055 ; DATA CMD_C083:
ff8055 63 30 38 33 00

ff805a ; DATA CommandList:
ff805a 3a 80 ff
ff805d 32 03 ff
ff8060 40 80 ff
ff8063 45 03 ff
ff8066 47 80 ff
ff8069 19 04 ff
ff806c 4d 80 ff
ff806f 1f 04 ff
ff8072 50 80 ff
ff8075 c8 04 ff
ff8078 55 80 ff
ff807b 0d 05 ff
ff807e 40 80 ff
ff8081 45 03 ff

; 32627 BYTES of FILLER

fffff7 ; DATA Vectors:
fffff7 00 00 00
fffffa 00 00 ff
fffffd 00 00 00

0000fe          ; GLOBAL @TXTPTR
0003ff          ; GLOBAL @TXTROW
0003fe          ; GLOBAL @TXTPOS
000200          ; GLOBAL @TXTBUFFER
000280          ; GLOBAL @TXTBUFFER2
0003fd          ; GLOBAL @DISPMODE

ff0000 ; SUB Start:
ff0000 4f 4c 00 02 ff                      jmp.a24 $ff0200       ; Reset

ff0005 ; DATA ROMVectors:
ff0005 05 07 ff
ff0008 77 07 ff
ff000b a2 07 ff
ff000e cb 07 ff
ff0011 a4 06 ff
ff0014 b5 06 ff
ff0017 63 06 ff
ff001a e8 06 ff
ff001d 8c 04 ff
ff0020 80 08 ff

; 477 BYTES of FILLER

ff0200 ; SUB Reset:
ff0200 d8                                  cld
ff0201 8d 83 c0                            sta $c083             ; LANGSET
ff0204 8d 83 c0                            sta $c083             ; LANGSET
ff0207 1f                                  r16
ff0208 fc                                  sws
ff0209 1f a2 ff fe                         ldx.w #$feff          ; TOP_OF_STACK
ff020d 1f 9a                               txs.w
ff020f ad 51 c0                            lda $c051             ; TXTSET
ff0212 ad 54 c0                            lda $c054             ; TXTPAGE1
ff0215 ad 58 c0                            lda $c058             ; SETAN0
ff0218 ad 5a c0                            lda $c05a             ; SETAN1
ff021b ad 5d c0                            lda $c05d             ; CLRAN2
ff021e ad 5f c0                            lda $c05f             ; CLRAN3
ff0221 ad ff cf                            lda $cfff             ; CLRROM
ff0224 2c 10 c0                            bit $c010             ; KBDSTRB
ff0227 a9 02                               lda #$2
ff0229 8d ff 03                            sta $03ff             ; TXTROW
ff022c 9c fe 03                            stz $03fe             ; TXTPOS
ff022f a2 00                               ldx #$0
ff0231 a9 01                               lda #$1               ; DISP_TEXT_2
ff0233 8d fd 03                            sta $03fd             ; DISPMODE
ff0236 4f 20 77 07 ff                      jsr.a24 $ff0777       ; ClearScreen
ff023b 9c fd 03                            stz $03fd             ; DISPMODE
ff023e a2 00                               ldx #$0
ff0240 4f 20 77 07 ff                      jsr.a24 $ff0777       ; ClearScreen
ff0245 4f 20 80 08 ff                      jsr.a24 $ff0880       ; AppleII4

ff024a ; SUB EchoKeys:
ff024a 4f 20 06 08 ff                      jsr.a24 $ff0806       ; ClearInputBuffers
ff024f                 LOOPff024f_start:
ff024f                                 ;; LOOP {
ff024f                 LOOPff024f_loop:
ff024f 4f 20 7e 04 ff                      jsr.a24 $ff047e       ; ScreenBase
ff0254 ad fe 03                            lda $03fe             ; TXTPOS
ff0257                                 ;; IF == {
ff0257 d0 0c                               bne +12               ; IFff0257_end [ff0265]
ff0259 a9 ba                               lda #$ba
ff025b 4f 20 a4 06 ff                      jsr.a24 $ff06a4       ; PrintChar
ff0260 4f 20 c8 06 ff                      jsr.a24 $ff06c8       ; PrintCursor
ff0265                 IFff0257_end:
ff0265                 LOOPff0265_start:
ff0265                                 ;; LOOP {
ff0265                 LOOPff0265_loop:
ff0265 2c 00 c0                            bit $c000             ; KBD
ff0268                                 ;; IF - {
ff0268 10 04                               bpl +4                ; IFff0268_end [ff026e]
ff026a                                 ;; BREAK
ff026a 4f 80 02 00                         bra.a24 +2            ; loopff0265_end [ff0270]
ff026e                 IFff0268_end:
ff026e 80 f5                               bra -11               ; LOOPff0265_loop [ff0265]
ff0270                 LOOPff0265_end:
ff0270 ad 00 c0                            lda $c000             ; KBD
ff0273 2c 10 c0                            bit $c010             ; KBDSTRB
ff0276                                 ;; IF == 141 {
ff0276 c9 8d                               cmp #$8d
ff0278 d0 1b                               bne +27               ; IFff0276_end [ff0295]
ff027a 4f 20 d8 06 ff                      jsr.a24 $ff06d8       ; ClearCursor
ff027f 4f 20 a2 07 ff                      jsr.a24 $ff07a2       ; NextLine
ff0284 4f 20 31 08 ff                      jsr.a24 $ff0831       ; CurrentToPrevInputBuffer
ff0289 4f 20 2a 03 ff                      jsr.a24 $ff032a       ; CommandLine
ff028e 4f 20 14 08 ff                      jsr.a24 $ff0814       ; ClearCurrentInputBuffer
ff0293                                 ;; CONTINUE
ff0293 80 ba                               bra -70               ; loopff024f_start [ff024f]
ff0295                 IFff0276_end:
ff0295                                 ;; IF == 136 {
ff0295 c9 88                               cmp #$88
ff0297 d0 23                               bne +35               ; IFff0295_end [ff02bc]
ff0299                                 ;; IF > 1 {
ff0299 c9 01                               cmp #$1
ff029b f0 1d                               beq +29               ; IFff0299_end [ff02ba]
ff029d 90 1b                               bcc +27               ; IFff0299_end [ff02ba]
ff029f 4f 20 d8 06 ff                      jsr.a24 $ff06d8       ; ClearCursor
ff02a4 a9 a0                               lda #$a0
ff02a6 ac fe 03                            ldy $03fe             ; TXTPOS
ff02a9 88                                  dey
ff02aa 91 fe                               sta ($fe),Y           ; TXTPTR
ff02ac 88                                  dey
ff02ad a9 00                               lda #$0
ff02af 99 00 02                            sta $0200,Y           ; TXTBUFFER
ff02b2 ce fe 03                            dec $03fe             ; TXTPOS
ff02b5 4f 20 c8 06 ff                      jsr.a24 $ff06c8       ; PrintCursor
ff02ba                 IFff0299_end:
ff02ba                                 ;; CONTINUE
ff02ba 80 93                               bra -109              ; loopff024f_start [ff024f]
ff02bc                 IFff0295_end:
ff02bc                                 ;; IF == 149 {
ff02bc c9 95                               cmp #$95
ff02be d0 0d                               bne +13               ; IFff02bc_end [ff02cd]
ff02c0                                 ;; IF > 1 {
ff02c0 c9 01                               cmp #$1
ff02c2 f0 07                               beq +7                ; IFff02c0_end [ff02cb]
ff02c4 90 05                               bcc +5                ; IFff02c0_end [ff02cb]
ff02c6 4f 20 18 04 ff                      jsr.a24 $ff0418       ; CompleteCommand
ff02cb                 IFff02c0_end:
ff02cb                                 ;; CONTINUE
ff02cb 80 82                               bra -126              ; loopff024f_start [ff024f]
ff02cd                 IFff02bc_end:
ff02cd                                 ;; IF == 139 {
ff02cd c9 8b                               cmp #$8b
ff02cf d0 13                               bne +19               ; IFff02cd_end [ff02e4]
ff02d1 4f 20 22 08 ff                      jsr.a24 $ff0822       ; PrevToCurrentInputBuffer
ff02d6 4f 20 40 08 ff                      jsr.a24 $ff0840       ; InputBufferToTextScreen
ff02db 4f 20 c8 06 ff                      jsr.a24 $ff06c8       ; PrintCursor
ff02e0                                 ;; CONTINUE
ff02e0 4f 80 6b ff                         bra.a24 -149          ; loopff024f_start [ff024f]
ff02e4                 IFff02cd_end:
ff02e4                                 ;; IF == 155 {
ff02e4 c9 9b                               cmp #$9b
ff02e6 d0 21                               bne +33               ; IFff02e4_end [ff0309]
ff02e8 ae ff 03                            ldx $03ff             ; TXTROW
ff02eb 4f 20 5f 07 ff                      jsr.a24 $ff075f       ; ClearRow
ff02f0 4f 20 14 08 ff                      jsr.a24 $ff0814       ; ClearCurrentInputBuffer
ff02f5 a9 00                               lda #$0
ff02f7 8d fe 03                            sta $03fe             ; TXTPOS
ff02fa ad fd 03                            lda $03fd             ; DISPMODE
ff02fd                                 ;; IF != {
ff02fd f0 06                               beq +6                ; IFff02fd_end [ff0305]
ff02ff ad 54 c0                            lda $c054             ; TXTPAGE1
ff0302 9c fd 03                            stz $03fd             ; DISPMODE
ff0305                 IFff02fd_end:
ff0305                                 ;; CONTINUE
ff0305 4f 80 46 ff                         bra.a24 -186          ; loopff024f_start [ff024f]
ff0309                 IFff02e4_end:
ff0309                                 ;; IF > 159 {
ff0309 c9 9f                               cmp #$9f
ff030b f0 19                               beq +25               ; IFff0309_end [ff0326]
ff030d 90 17                               bcc +23               ; IFff0309_end [ff0326]
ff030f ac fe 03                            ldy $03fe             ; TXTPOS
ff0312 4f 20 a4 06 ff                      jsr.a24 $ff06a4       ; PrintChar
ff0317 c0 28                               cpy #$28
ff0319                                 ;; IF < {
ff0319 b0 0b                               bcs +11               ; IFff0319_end [ff0326]
ff031b 29 7f                               and #$7f
ff031d 88                                  dey
ff031e 99 00 02                            sta $0200,Y           ; TXTBUFFER
ff0321 4f 20 c8 06 ff                      jsr.a24 $ff06c8       ; PrintCursor
ff0326                 IFff0319_end:
ff0326                 IFff0309_end:
ff0326 4f 80 25 ff                         bra.a24 -219          ; LOOPff024f_loop [ff024f]
ff032a                 LOOPff024f_end:

ff032a ; SUB CommandLine:
000004          ; VAR @I
000005          ; VAR @I6
ff032a 1f a9 00 02                         lda.w #$200           ; TXTBUFFER
ff032e 2f 8d 01 d0                         sta.t $00d001
ff0332 a9 00                               lda #$0
ff0334 8d 00 d0                            sta $d000
ff0337 a0 03                               ldy #$3
ff0339 a2 00                               ldx #$0
ff033b                 LOOPff033b_start:
ff033b                                 ;; LOOP {
ff033b                 LOOPff033b_loop:
ff033b bd 00 02                            lda $0200,X           ; TXTBUFFER
ff033e                                 ;; IF == 0 {
ff033e c9 00                               cmp #$0
ff0340 d0 04                               bne +4                ; IFff033e_end [ff0346]
ff0342                                 ;; BREAK
ff0342 4f 80 40 00                         bra.a24 +64           ; loopff033b_end [ff0386]
ff0346                 IFff033e_end:
ff0346 c9 20                               cmp #$20
ff0348                                 ;; IF == {
ff0348 d0 31                               bne +49               ; IFff0348_end [ff037b]
ff034a                 LOOPff034a_start:
ff034a                                 ;; LOOP {
ff034a                 LOOPff034a_loop:
ff034a bd 00 02                            lda $0200,X           ; TXTBUFFER
ff034d                                 ;; IF == 0 {
ff034d c9 00                               cmp #$0
ff034f d0 04                               bne +4                ; IFff034d_end [ff0355]
ff0351                                 ;; BREAK
ff0351 4f 80 10 00                         bra.a24 +16           ; loopff034a_end [ff0365]
ff0355                 IFff034d_end:
ff0355 c9 20                               cmp #$20
ff0357                                 ;; IF == {
ff0357 d0 06                               bne +6                ; IFff0357_end [ff035f]
ff0359 a9 00                               lda #$0
ff035b 9d 00 02                            sta $0200,X           ; TXTBUFFER
ff035e e8                                  inx
ff035f                 IFff0357_end:
ff035f                                 ;; BREAK
ff035f 4f 80 02 00                         bra.a24 +2            ; loopff034a_end [ff0365]
ff0363 80 e5                               bra -27               ; LOOPff034a_loop [ff034a]
ff0365                 LOOPff034a_end:
ff0365 1f a9 00 02                         lda.w #$200           ; TXTBUFFER
ff0369 18                                  clc
ff036a 1f db                               adx.w
ff036c 2f 99 01 d0                         sta.t $00d001,Y
ff0370 c8                                  iny
ff0371 c8                                  iny
ff0372 c8                                  iny
ff0373 ee 00 d0                            inc $d000
ff0376 e8                                  inx
ff0377                                 ;; BREAK
ff0377 4f 80 0b 00                         bra.a24 +11           ; loopff033b_end [ff0386]
ff037b                 IFff0348_end:
ff037b e8                                  inx
ff037c e0 7f                               cpx #$7f
ff037e                                 ;; IF >= {
ff037e 90 04                               bcc +4                ; IFff037e_end [ff0384]
ff0380                                 ;; BREAK
ff0380 4f 80 02 00                         bra.a24 +2            ; loopff033b_end [ff0386]
ff0384                 IFff037e_end:
ff0384 80 b5                               bra -75               ; LOOPff033b_loop [ff033b]
ff0386                 LOOPff033b_end:
ff0386                 LOOPff0386_start:
ff0386                                 ;; LOOP {
ff0386                 LOOPff0386_loop:
ff0386 bd 00 02                            lda $0200,X           ; TXTBUFFER
ff0389                                 ;; IF == 0 {
ff0389 c9 00                               cmp #$0
ff038b d0 04                               bne +4                ; IFff0389_end [ff0391]
ff038d                                 ;; BREAK
ff038d 4f 80 41 00                         bra.a24 +65           ; loopff0386_end [ff03d2]
ff0391                 IFff0389_end:
ff0391 c9 2c                               cmp #$2c
ff0393                                 ;; IF == {
ff0393 d0 32                               bne +50               ; IFff0393_end [ff03c7]
ff0395 a9 00                               lda #$0
ff0397 9d 00 02                            sta $0200,X           ; TXTBUFFER
ff039a e8                                  inx
ff039b                 LOOPff039b_start:
ff039b                                 ;; LOOP {
ff039b                 LOOPff039b_loop:
ff039b bd 00 02                            lda $0200,X           ; TXTBUFFER
ff039e                                 ;; IF == 0 {
ff039e c9 00                               cmp #$0
ff03a0 d0 04                               bne +4                ; IFff039e_end [ff03a6]
ff03a2                                 ;; BREAK
ff03a2 4f 80 10 00                         bra.a24 +16           ; loopff039b_end [ff03b6]
ff03a6                 IFff039e_end:
ff03a6 c9 20                               cmp #$20
ff03a8                                 ;; IF == {
ff03a8 d0 06                               bne +6                ; IFff03a8_end [ff03b0]
ff03aa a9 00                               lda #$0
ff03ac 9d 00 02                            sta $0200,X           ; TXTBUFFER
ff03af e8                                  inx
ff03b0                 IFff03a8_end:
ff03b0                                 ;; BREAK
ff03b0 4f 80 02 00                         bra.a24 +2            ; loopff039b_end [ff03b6]
ff03b4 80 e5                               bra -27               ; LOOPff039b_loop [ff039b]
ff03b6                 LOOPff039b_end:
ff03b6 1f a9 00 02                         lda.w #$200           ; TXTBUFFER
ff03ba 18                                  clc
ff03bb 1f db                               adx.w
ff03bd 2f 99 01 d0                         sta.t $00d001,Y
ff03c1 c8                                  iny
ff03c2 c8                                  iny
ff03c3 c8                                  iny
ff03c4 ee 00 d0                            inc $d000
ff03c7                 IFff0393_end:
ff03c7 e8                                  inx
ff03c8 e0 7f                               cpx #$7f
ff03ca                                 ;; IF >= {
ff03ca 90 04                               bcc +4                ; IFff03ca_end [ff03d0]
ff03cc                                 ;; BREAK
ff03cc 4f 80 02 00                         bra.a24 +2            ; loopff0386_end [ff03d2]
ff03d0                 IFff03ca_end:
ff03d0 80 b4                               bra -76               ; LOOPff0386_loop [ff0386]
ff03d2                 LOOPff0386_end:
ff03d2 2f ad 01 d0                         lda.t $00d001
ff03d6 2f 8d 00 d7                         sta.t $00d700
ff03da                 FORff03da_start:
ff03da                                 ;; FOR @I = 0 TO 13 {
ff03da a2 00                               ldx #$0
ff03dc 86 04                               stx $04
ff03de                 FORff03da_loop:
ff03de a5 04                               lda $04               ; I
ff03e0                       ;; A <<= 2 
ff03e0 0a                                  asl
ff03e1 0a                                  asl
ff03e2 85 05                               sta $05               ; I6
ff03e4 a5 04                               lda $04               ; I
ff03e6                       ;; A <<= 1 
ff03e6 0a                                  asl
ff03e7 18                                  clc
ff03e8 65 05                               adc $05               ; I6
ff03ea 85 05                               sta $05               ; I6
ff03ec aa                                  tax
ff03ed 6f bd 85 81 ff                      lda.t.a24 $ff8185,X   ; CommandList
ff03f2 2f 8d 03 d7                         sta.t $00d703
ff03f6 4f 20 8c 04 ff                      jsr.a24 $ff048c       ; CompareText
ff03fb                                 ;; IF - {
ff03fb 10 11                               bpl +17               ; IFff03fb_end [ff040e]
ff03fd a6 05                               ldx $05               ; I6
ff03ff 6f bd 88 81 ff                      lda.t.a24 $ff8188,X   ; CommandList
ff0404 2f 85 00                            sta.t $00
ff0407 4f 5c 00 00 00                      jsr.a24 ($00)
ff040c 4f 60                               rts.a24
ff040e                 IFff03fb_end:
ff040e e6 04                               inc $04
ff0410 a6 04                               ldx $04
ff0412 e0 0e                               cpx #$e
ff0414 d0 c8                               bne -56               ; FORff03da_loop [ff03de]
ff0416                 FORff03da_end:
ff0416 4f 60                               rts.a24

ff0418 ; SUB CompleteCommand:
000004          ; VAR @I
000005          ; VAR @I6
ff0418 1f a9 00 02                         lda.w #$200           ; TXTBUFFER
ff041c 2f 8d 00 d7                         sta.t $00d700
ff0420                 FORff0420_start:
ff0420                                 ;; FOR @I = 0 TO 13 {
ff0420 a2 00                               ldx #$0
ff0422 86 04                               stx $04
ff0424                 FORff0420_loop:
ff0424 a5 04                               lda $04               ; I
ff0426                       ;; A <<= 2 
ff0426 0a                                  asl
ff0427 0a                                  asl
ff0428 85 05                               sta $05               ; I6
ff042a a5 04                               lda $04               ; I
ff042c                       ;; A <<= 1 
ff042c 0a                                  asl
ff042d 18                                  clc
ff042e 65 05                               adc $05               ; I6
ff0430 85 05                               sta $05               ; I6
ff0432 aa                                  tax
ff0433 6f bd 85 81 ff                      lda.t.a24 $ff8185,X   ; CommandList
ff0438 2f 8d 03 d7                         sta.t $00d703
ff043c 4f 20 bb 04 ff                      jsr.a24 $ff04bb       ; CompareStartOfText
ff0441                                 ;; IF - {
ff0441 10 31                               bpl +49               ; IFff0441_end [ff0474]
ff0443 a6 05                               ldx $05               ; I6
ff0445 6f bd 85 81 ff                      lda.t.a24 $ff8185,X   ; CommandList
ff044a 2f 8d 00 d7                         sta.t $00d700
ff044e 1f a9 00 02                         lda.w #$200           ; TXTBUFFER
ff0452 2f 8d 03 d7                         sta.t $00d703
ff0456 4f 20 e0 04 ff                      jsr.a24 $ff04e0       ; CopyString
ff045b 1f a5 fe                            lda.w $fe             ; TXTPTR
ff045e 1f 1a                               inc.w
ff0460 2f 8d 03 d7                         sta.t $00d703
ff0464 4f 20 f9 04 ff                      jsr.a24 $ff04f9       ; CopyStringHigh
ff0469 c8                                  iny
ff046a 8c fe 03                            sty $03fe             ; TXTPOS
ff046d 4f 20 c8 06 ff                      jsr.a24 $ff06c8       ; PrintCursor
ff0472 4f 60                               rts.a24
ff0474                 IFff0441_end:
ff0474 e6 04                               inc $04
ff0476 a6 04                               ldx $04
ff0478 e0 0e                               cpx #$e
ff047a d0 a8                               bne -88               ; FORff0420_loop [ff0424]
ff047c                 FORff0420_end:
ff047c 4f 60                               rts.a24

ff047e ; SUB ScreenBase:
ff047e                       ;; X = M@$3ff 
ff047e ae ff 03                            ldx $03ff
ff0481 2b                                  xsl
ff0482 5f bd 00 80 ff                      lda.w.a24 $ff8000,X   ; TextScreenBase
ff0487 1f 85 fe                            sta.w $fe             ; TXTPTR
ff048a 4f 60                               rts.a24

ff048c ; SUB CompareText:
00d700-00d702   ; VAR @STR_A
00d703-00d705   ; VAR @STR_B
ff048c                 FORff048c_start:
ff048c                                 ;; FOR Y = 0 TO 127 {
ff048c a0 00                               ldy #$0
ff048e                 FORff048c_loop:
ff048e 2f ae 00 d7                         ldx.t $00d700         ; STR_A
ff0492 4f ab                               lda.a24 XY
ff0494 2f ae 03 d7                         ldx.t $00d703         ; STR_B
ff0498 4f cb                               cmp.a24 XY
ff049a                                 ;; IF != {
ff049a f0 04                               beq +4                ; IFff049a_end [ff04a0]
ff049c a9 00                               lda #$0
ff049e 4f 60                               rts.a24
ff04a0                 IFff049a_end:
ff04a0                                 ;; IF == 0 {
ff04a0 c9 00                               cmp #$0
ff04a2 d0 0e                               bne +14               ; IFff04a0_end [ff04b2]
ff04a4 4f ab                               lda.a24 XY
ff04a6                                 ;; IF == 0 {
ff04a6 c9 00                               cmp #$0
ff04a8 d0 04                               bne +4                ; IFff04a6_end [ff04ae]
ff04aa a9 ff                               lda #$ff
ff04ac 4f 60                               rts.a24
ff04ae                 IFff04a6_end:
ff04ae a9 00                               lda #$0
ff04b0 4f 60                               rts.a24
ff04b2                 IFff04a0_end:
ff04b2 c8                                  iny
ff04b3 c0 80                               cpy #$80
ff04b5 d0 d7                               bne -41               ; FORff048c_loop [ff048e]
ff04b7                 FORff048c_end:
ff04b7 a9 00                               lda #$0
ff04b9 4f 60                               rts.a24

ff04bb ; SUB CompareStartOfText:
00d700-00d702   ; VAR @STR_A
00d703-00d705   ; VAR @STR_B
ff04bb                 FORff04bb_start:
ff04bb                                 ;; FOR Y = 0 TO 127 {
ff04bb a0 00                               ldy #$0
ff04bd                 FORff04bb_loop:
ff04bd 2f ae 00 d7                         ldx.t $00d700         ; STR_A
ff04c1 4f ab                               lda.a24 XY
ff04c3                                 ;; IF == 0 {
ff04c3 c9 00                               cmp #$0
ff04c5 d0 04                               bne +4                ; IFff04c3_end [ff04cb]
ff04c7 a9 ff                               lda #$ff
ff04c9 4f 60                               rts.a24
ff04cb                 IFff04c3_end:
ff04cb 2f ae 03 d7                         ldx.t $00d703         ; STR_B
ff04cf 4f cb                               cmp.a24 XY
ff04d1                                 ;; IF != {
ff04d1 f0 04                               beq +4                ; IFff04d1_end [ff04d7]
ff04d3 a9 00                               lda #$0
ff04d5 4f 60                               rts.a24
ff04d7                 IFff04d1_end:
ff04d7 c8                                  iny
ff04d8 c0 80                               cpy #$80
ff04da d0 e1                               bne -31               ; FORff04bb_loop [ff04bd]
ff04dc                 FORff04bb_end:
ff04dc a9 00                               lda #$0
ff04de 4f 60                               rts.a24

ff04e0 ; SUB CopyString:
00d700-00d702   ; VAR @STR_FROM
00d703-00d705   ; VAR @STR_TO
ff04e0                 FORff04e0_start:
ff04e0                                 ;; FOR Y = 0 TO 127 {
ff04e0 a0 00                               ldy #$0
ff04e2                 FORff04e0_loop:
ff04e2 2f ae 00 d7                         ldx.t $00d700         ; STR_FROM
ff04e6 4f ab                               lda.a24 XY
ff04e8                                 ;; IF == {
ff04e8 d0 02                               bne +2                ; IFff04e8_end [ff04ec]
ff04ea 4f 60                               rts.a24
ff04ec                 IFff04e8_end:
ff04ec 2f ae 03 d7                         ldx.t $00d703         ; STR_TO
ff04f0 4f bb                               sta.a24 XY
ff04f2 c8                                  iny
ff04f3 c0 80                               cpy #$80
ff04f5 d0 eb                               bne -21               ; FORff04e0_loop [ff04e2]
ff04f7                 FORff04e0_end:
ff04f7 4f 60                               rts.a24

ff04f9 ; SUB CopyStringHigh:
00d700-00d702   ; VAR @STR_FROM
00d703-00d705   ; VAR @STR_TO
ff04f9                 FORff04f9_start:
ff04f9                                 ;; FOR Y = 0 TO 127 {
ff04f9 a0 00                               ldy #$0
ff04fb                 FORff04f9_loop:
ff04fb 2f ae 00 d7                         ldx.t $00d700         ; STR_FROM
ff04ff 4f ab                               lda.a24 XY
ff0501                                 ;; IF == {
ff0501 d0 02                               bne +2                ; IFff0501_end [ff0505]
ff0503 4f 60                               rts.a24
ff0505                 IFff0501_end:
ff0505 09 80                               ora #$80
ff0507 2f ae 03 d7                         ldx.t $00d703         ; STR_TO
ff050b 4f bb                               sta.a24 XY
ff050d c8                                  iny
ff050e c0 80                               cpy #$80
ff0510 d0 e9                               bne -23               ; FORff04f9_loop [ff04fb]
ff0512                 FORff04f9_end:
ff0512 4f 60                               rts.a24

ff0514 ; SUB PrintHex24:
ff0514 2f 8d fc d7                         sta.t $00d7fc
ff0518 2f 1b                               sr8.t
ff051a 2f 1b                               sr8.t
ff051c 4f 20 4d 05 ff                      jsr.a24 $ff054d       ; PrintHexByte
ff0521 2f ad fc d7                         lda.t $00d7fc
ff0525 1f 1b                               sr8.w
ff0527 4f 20 4d 05 ff                      jsr.a24 $ff054d       ; PrintHexByte
ff052c 2f ad fc d7                         lda.t $00d7fc
ff0530 4f 20 4d 05 ff                      jsr.a24 $ff054d       ; PrintHexByte
ff0535 4f 60                               rts.a24

ff0537 ; SUB PrintHexWord:
ff0537 1f 8d fd d7                         sta.w $00d7fd
ff053b 1f 1b                               sr8.w
ff053d 4f 20 4d 05 ff                      jsr.a24 $ff054d       ; PrintHexByte
ff0542 1f ad fd d7                         lda.w $00d7fd
ff0546 4f 20 4d 05 ff                      jsr.a24 $ff054d       ; PrintHexByte
ff054b 4f 60                               rts.a24

ff054d ; SUB PrintHexByte:
ff054d 8d ff d7                            sta $d7ff
ff0550 4a                                  lsr
ff0551 4a                                  lsr
ff0552 4a                                  lsr
ff0553 4a                                  lsr
ff0554 4f 20 65 05 ff                      jsr.a24 $ff0565       ; PrintHexDigit
ff0559 ad ff d7                            lda $d7ff
ff055c 29 0f                               and #$f
ff055e 4f 20 65 05 ff                      jsr.a24 $ff0565       ; PrintHexDigit
ff0563 4f 60                               rts.a24

ff0565 ; SUB PrintHexDigit:
ff0565 c9 0a                               cmp #$a
ff0567                                 ;; IF < {
ff0567 b0 04                               bcs +4                ; IFff0567_else [ff056d]
ff0569 69 b0                               adc #$b0
ff056b 80 03                               bra +3                ; IFff0567_end [ff0570]
ff056d                 IFff0567_else:
ff056d                                 ;; ELSE
ff056d 18                                  clc
ff056e 69 b7                               adc #$b7
ff0570                 IFff0567_end:
ff0570 1f a6 fe                            ldx.w $fe             ; TXTPTR
ff0573 ac fe 03                            ldy $03fe             ; TXTPOS
ff0576 4f bb                               sta.a24 XY
ff0578 ee fe 03                            inc $03fe             ; TXTPOS
ff057b 4f 60                               rts.a24

ff057d ; SUB ParseNumber:
00d700-00d702   ; VAR @STR
ff057d 2f ae 00 d7                         ldx.t $00d700         ; STR
ff0581 4f 7b                               lda.a24 X
ff0583 c9 24                               cmp #$24
ff0585                                 ;; IF == {
ff0585 d0 07                               bne +7                ; IFff0585_else [ff058e]
ff0587 4f 4c 93 05 ff                      jmp.a24 $ff0593       ; ParseHexNumber
ff058c 80 05                               bra +5                ; IFff0585_end [ff0593]
ff058e                 IFff0585_else:
ff058e                                 ;; ELSE
ff058e 4f 4c 00 06 ff                      jmp.a24 $ff0600       ; ParseDecimalNumber
ff0593                 IFff0585_end:

ff0593 ; SUB ParseHexNumber:
000000-000002   ; VAR @VAL
ff0593 2f 64 00                            stz.t $00             ; VAL
ff0596 a0 01                               ldy #$1
ff0598                 LOOPff0598_start:
ff0598                                 ;; LOOP {
ff0598                 LOOPff0598_loop:
ff0598 4f ab                               lda.a24 XY
ff059a                                 ;; IF == {
ff059a d0 04                               bne +4                ; IFff059a_end [ff05a0]
ff059c                                 ;; BREAK
ff059c 4f 80 5b 00                         bra.a24 +91           ; loopff0598_end [ff05fb]
ff05a0                 IFff059a_end:
ff05a0 2f a5 00                            lda.t $00             ; VAL
ff05a3 2f 0a                               asl.t
ff05a5 2f 0a                               asl.t
ff05a7 2f 0a                               asl.t
ff05a9 2f 0a                               asl.t
ff05ab 2f 85 00                            sta.t $00             ; VAL
ff05ae 4f ab                               lda.a24 XY
ff05b0 c9 30                               cmp #$30
ff05b2                                 ;; IF >= {
ff05b2 90 41                               bcc +65               ; IFff05b2_end [ff05f5]
ff05b4 c9 39                               cmp #$39
ff05b6                                 ;; IF <= {
ff05b6 f0 02                               beq +2                ; IFff05b6_end_eq [ff05ba]
ff05b8 b0 0d                               bcs +13               ; IFff05b6_end [ff05c7]
ff05ba                 IFff05b6_end_eq:
ff05ba 38                                  sec
ff05bb e9 30                               sbc #$30
ff05bd 18                                  clc
ff05be 2f 65 00                            adc.t $00             ; VAL
ff05c1 2f 85 00                            sta.t $00             ; VAL
ff05c4 c8                                  iny
ff05c5                                 ;; CONTINUE
ff05c5 80 d1                               bra -47               ; loopff0598_start [ff0598]
ff05c7                 IFff05b6_end:
ff05c7 c9 41                               cmp #$41
ff05c9                                 ;; IF >= {
ff05c9 90 2a                               bcc +42               ; IFff05c9_end [ff05f5]
ff05cb c9 47                               cmp #$47
ff05cd                                 ;; IF <= {
ff05cd f0 02                               beq +2                ; IFff05cd_end_eq [ff05d1]
ff05cf b0 0d                               bcs +13               ; IFff05cd_end [ff05de]
ff05d1                 IFff05cd_end_eq:
ff05d1 38                                  sec
ff05d2 e9 37                               sbc #$37
ff05d4 18                                  clc
ff05d5 2f 65 00                            adc.t $00             ; VAL
ff05d8 2f 85 00                            sta.t $00             ; VAL
ff05db c8                                  iny
ff05dc                                 ;; CONTINUE
ff05dc 80 ba                               bra -70               ; loopff0598_start [ff0598]
ff05de                 IFff05cd_end:
ff05de c9 61                               cmp #$61
ff05e0                                 ;; IF >= {
ff05e0 90 13                               bcc +19               ; IFff05e0_end [ff05f5]
ff05e2 c9 67                               cmp #$67
ff05e4                                 ;; IF <= {
ff05e4 f0 02                               beq +2                ; IFff05e4_end_eq [ff05e8]
ff05e6 b0 0d                               bcs +13               ; IFff05e4_end [ff05f5]
ff05e8                 IFff05e4_end_eq:
ff05e8 38                                  sec
ff05e9 e9 57                               sbc #$57
ff05eb 18                                  clc
ff05ec 2f 65 00                            adc.t $00             ; VAL
ff05ef 2f 85 00                            sta.t $00             ; VAL
ff05f2 c8                                  iny
ff05f3                                 ;; CONTINUE
ff05f3 80 a3                               bra -93               ; loopff0598_start [ff0598]
ff05f5                 IFff05e4_end:
ff05f5                 IFff05e0_end:
ff05f5                 IFff05c9_end:
ff05f5                 IFff05b2_end:
ff05f5                                 ;; BREAK
ff05f5 4f 80 02 00                         bra.a24 +2            ; loopff0598_end [ff05fb]
ff05f9 80 9d                               bra -99               ; LOOPff0598_loop [ff0598]
ff05fb                 LOOPff0598_end:
ff05fb 2f a5 00                            lda.t $00             ; VAL
ff05fe 4f 60                               rts.a24

ff0600 ; SUB ParseDecimalNumber:
000000-000002   ; VAR @VAL
000003-000005   ; VAR @STR
ff0600 2f 64 00                            stz.t $00             ; VAL
ff0603 2f 86 03                            stx.t $03             ; STR
ff0606 a0 00                               ldy #$0
ff0608                 LOOPff0608_start:
ff0608                                 ;; LOOP {
ff0608                 LOOPff0608_loop:
ff0608 4f ab                               lda.a24 XY
ff060a                                 ;; IF == {
ff060a d0 04                               bne +4                ; IFff060a_end [ff0610]
ff060c                                 ;; BREAK
ff060c 4f 80 2d 00                         bra.a24 +45           ; loopff0608_end [ff063d]
ff0610                 IFff060a_end:
ff0610 2f a5 00                            lda.t $00             ; VAL
ff0613 4f 20 42 06 ff                      jsr.a24 $ff0642       ; Times10
ff0618 2f 85 00                            sta.t $00             ; VAL
ff061b 2f a6 03                            ldx.t $03             ; STR
ff061e 4f ab                               lda.a24 XY
ff0620 c9 30                               cmp #$30
ff0622                                 ;; IF >= {
ff0622 90 17                               bcc +23               ; IFff0622_end [ff063b]
ff0624 c9 39                               cmp #$39
ff0626                                 ;; IF <= {
ff0626 f0 02                               beq +2                ; IFff0626_end_eq [ff062a]
ff0628 b0 0d                               bcs +13               ; IFff0626_end [ff0637]
ff062a                 IFff0626_end_eq:
ff062a 38                                  sec
ff062b e9 30                               sbc #$30
ff062d 18                                  clc
ff062e 2f 65 00                            adc.t $00             ; VAL
ff0631 2f 85 00                            sta.t $00             ; VAL
ff0634 c8                                  iny
ff0635                                 ;; CONTINUE
ff0635 80 d1                               bra -47               ; loopff0608_start [ff0608]
ff0637                 IFff0626_end:
ff0637                                 ;; BREAK
ff0637 4f 80 02 00                         bra.a24 +2            ; loopff0608_end [ff063d]
ff063b                 IFff0622_end:
ff063b 80 cb                               bra -53               ; LOOPff0608_loop [ff0608]
ff063d                 LOOPff0608_end:
ff063d 2f a5 00                            lda.t $00             ; VAL
ff0640 4f 60                               rts.a24

ff0642 ; SUB Times10:
ff0642 2f 0a                               asl.t
ff0644 2f aa                               tax.t
ff0646 2f 0a                               asl.t
ff0648 2f 0a                               asl.t
ff064a 18                                  clc
ff064b 2f db                               adx.t
ff064d 4f 60                               rts.a24

ff064f ; SUB Modulo:
00000c-00000e   ; VAR @MODULO
ff064f 2f 86 0c                            stx.t $0c             ; MODULO
ff0652 a0 00                               ldy #$0
ff0654                 LOOPff0654_start:
ff0654                                 ;; LOOP {
ff0654                 LOOPff0654_loop:
ff0654 38                                  sec
ff0655 2f e5 0c                            sbc.t $0c             ; MODULO
ff0658                                 ;; IF - {
ff0658 10 06                               bpl +6                ; IFff0658_end [ff0660]
ff065a 18                                  clc
ff065b 2f 65 0c                            adc.t $0c             ; MODULO
ff065e 4f 60                               rts.a24
ff0660                 IFff0658_end:
ff0660 c8                                  iny
ff0661 80 f1                               bra -15               ; LOOPff0654_loop [ff0654]
ff0663                 LOOPff0654_end:

ff0663 ; SUB PrintString:
00d700-00d702   ; VAR @STR
000000          ; VAR @IDX
ff0663                 FORff0663_start:
ff0663                                 ;; FOR @IDX = 0 TO 39 {
ff0663 a2 00                               ldx #$0
ff0665 86 00                               stx $00
ff0667                 FORff0663_loop:
ff0667 2f ae 00 d7                         ldx.t $00d700         ; STR
ff066b a4 00                               ldy $00               ; IDX
ff066d 4f ab                               lda.a24 XY
ff066f                                 ;; IF == {
ff066f d0 02                               bne +2                ; IFff066f_end [ff0673]
ff0671 4f 60                               rts.a24
ff0673                 IFff066f_end:
ff0673 09 80                               ora #$80
ff0675 1f a6 fe                            ldx.w $fe             ; TXTPTR
ff0678 ac fe 03                            ldy $03fe             ; TXTPOS
ff067b c0 28                               cpy #$28
ff067d                                 ;; IF < {
ff067d b0 05                               bcs +5                ; IFff067d_end [ff0684]
ff067f 4f bb                               sta.a24 XY
ff0681 ee fe 03                            inc $03fe             ; TXTPOS
ff0684                 IFff067d_end:
ff0684 e6 00                               inc $00
ff0686 a6 00                               ldx $00
ff0688 e0 28                               cpx #$28
ff068a d0 db                               bne -37               ; FORff0663_loop [ff0667]
ff068c                 FORff0663_end:
ff068c 4f 60                               rts.a24

ff068e ; SUB PrintError:
00d700          ; VAR @ERR_STR
ff068e 4f 20 a2 07 ff                      jsr.a24 $ff07a2       ; NextLine
ff0693 4f 20 63 06 ff                      jsr.a24 $ff0663       ; PrintString
ff0698 4f 20 a2 07 ff                      jsr.a24 $ff07a2       ; NextLine
ff069d 4f 20 a2 07 ff                      jsr.a24 $ff07a2       ; NextLine
ff06a2 4f 60                               rts.a24

ff06a4 ; SUB PrintChar:
ff06a4 1f a6 fe                            ldx.w $fe             ; TXTPTR
ff06a7 ac fe 03                            ldy $03fe             ; TXTPOS
ff06aa c0 28                               cpy #$28
ff06ac                                 ;; IF < {
ff06ac b0 05                               bcs +5                ; IFff06ac_end [ff06b3]
ff06ae 4f bb                               sta.a24 XY
ff06b0 ee fe 03                            inc $03fe             ; TXTPOS
ff06b3                 IFff06ac_end:
ff06b3 4f 60                               rts.a24

ff06b5 ; SUB PrintSpace:
ff06b5 a9 a0                               lda #$a0
ff06b7 1f a6 fe                            ldx.w $fe             ; TXTPTR
ff06ba ac fe 03                            ldy $03fe             ; TXTPOS
ff06bd c0 28                               cpy #$28
ff06bf                                 ;; IF < {
ff06bf b0 05                               bcs +5                ; IFff06bf_end [ff06c6]
ff06c1 4f bb                               sta.a24 XY
ff06c3 ee fe 03                            inc $03fe             ; TXTPOS
ff06c6                 IFff06bf_end:
ff06c6 4f 60                               rts.a24

ff06c8 ; SUB PrintCursor:
ff06c8 1f a6 fe                            ldx.w $fe             ; TXTPTR
ff06cb ac fe 03                            ldy $03fe             ; TXTPOS
ff06ce c0 28                               cpy #$28
ff06d0                                 ;; IF < {
ff06d0 b0 04                               bcs +4                ; IFff06d0_end [ff06d6]
ff06d2 a9 df                               lda #$df
ff06d4 4f bb                               sta.a24 XY
ff06d6                 IFff06d0_end:
ff06d6 4f 60                               rts.a24

ff06d8 ; SUB ClearCursor:
ff06d8 ac fe 03                            ldy $03fe             ; TXTPOS
ff06db c0 28                               cpy #$28
ff06dd                                 ;; IF < {
ff06dd b0 07                               bcs +7                ; IFff06dd_end [ff06e6]
ff06df a9 a0                               lda #$a0
ff06e1 1f a6 fe                            ldx.w $fe             ; TXTPTR
ff06e4 4f bb                               sta.a24 XY
ff06e6                 IFff06dd_end:
ff06e6 4f 60                               rts.a24

ff06e8 ; SUB PlayBeep:
ff06e8                 FORff06e8_start:
ff06e8                                 ;; FOR X = 0 TO 8 {
ff06e8 a2 00                               ldx #$0
ff06ea                 FORff06e8_loop:
ff06ea 4f bd 36 81 ff                      lda.a24 $ff8136,X     ; BeepTimes
ff06ef                 FORff06ef_start:
ff06ef                                 ;; FOR Y = 0 TO 16 {
ff06ef a0 00                               ldy #$0
ff06f1                 FORff06ef_loop:
ff06f1 4f 20 05 07 ff                      jsr.a24 $ff0705       ; Wait
ff06f6 2c 30 c0                            bit $c030             ; SPKR
ff06f9 c8                                  iny
ff06fa c0 11                               cpy #$11
ff06fc d0 f3                               bne -13               ; FORff06ef_loop [ff06f1]
ff06fe                 FORff06ef_end:
ff06fe e8                                  inx
ff06ff e0 09                               cpx #$9
ff0701 d0 e7                               bne -25               ; FORff06e8_loop [ff06ea]
ff0703                 FORff06e8_end:
ff0703 4f 60                               rts.a24

ff0705 ; SUB Wait:
ff0705 2f da                               phx.t
ff0707 2f 48                               pha.t
ff0709                 FORff0709_start:
ff0709                                 ;; FOR X = 1 TO 3 {
ff0709 a2 01                               ldx #$1
ff070b                 FORff0709_loop:
ff070b 2f 68                               pla.t
ff070d 2f 48                               pha.t
ff070f                 DOff070f_start:
ff070f                                 ;; DO {
ff070f                 DOff070f_loop:
ff070f 2f 3a                               dec.t
ff0711 2f c9 00 00 00                      cmp.t #$0
ff0716                                 ;; WHILE !=
ff0716 f0 02                               beq +2                ; DOff070f_end [ff071a]
ff0718 80 f5                               bra -11               ; DOff070f_loop [ff070f]
ff071a                 DOff070f_end:
ff071a e8                                  inx
ff071b e0 04                               cpx #$4
ff071d d0 ec                               bne -20               ; FORff0709_loop [ff070b]
ff071f                 FORff0709_end:
ff071f 2f 68                               pla.t
ff0721 2f fa                               plx.t
ff0723 4f 60                               rts.a24

ff0725 ; SUB PrintDebugValue:
ff0725 48                                  pha
ff0726 48                                  pha
ff0727                       ;; A >>= 4 
ff0727 4a                                  lsr
ff0728 4a                                  lsr
ff0729 4a                                  lsr
ff072a 4a                                  lsr
ff072b                                 ;; IF >= 10 {
ff072b c9 0a                               cmp #$a
ff072d 90 05                               bcc +5                ; IFff072b_else [ff0734]
ff072f                       ;; A += 183 
ff072f 18                                  clc
ff0730 69 b7                               adc #$b7
ff0732 80 03                               bra +3                ; IFff072b_end [ff0737]
ff0734                 IFff072b_else:
ff0734                                 ;; ELSE
ff0734                       ;; A += 176 
ff0734 18                                  clc
ff0735 69 b0                               adc #$b0
ff0737                 IFff072b_end:
ff0737 8d 26 04                            sta $0426
ff073a 68                                  pla
ff073b                       ;; A &= 15 
ff073b 29 0f                               and #$f
ff073d                                 ;; IF >= 10 {
ff073d c9 0a                               cmp #$a
ff073f 90 05                               bcc +5                ; IFff073d_else [ff0746]
ff0741                       ;; A += 183 
ff0741 18                                  clc
ff0742 69 b7                               adc #$b7
ff0744 80 03                               bra +3                ; IFff073d_end [ff0749]
ff0746                 IFff073d_else:
ff0746                                 ;; ELSE
ff0746                       ;; A += 176 
ff0746 18                                  clc
ff0747 69 b0                               adc #$b0
ff0749                 IFff073d_end:
ff0749 8d 27 04                            sta $0427
ff074c 68                                  pla
ff074d 4f 60                               rts.a24

ff074f ; SUB PrintDebugChar:
ff074f 8d 27 04                            sta $0427
ff0752 a9 a0                               lda #$a0
ff0754 8d 26 04                            sta $0426
ff0757 4f 60                               rts.a24

ff0759 ; SUB PrintDebug2Chars:
ff0759 1f 8d 26 04                         sta.w $000426
ff075d 4f 60                               rts.a24

ff075f ; SUB ClearRow:
ff075f 2b                                  xsl
ff0760 5f bd 00 80 ff                      lda.w.a24 $ff8000,X   ; TextScreenBase
ff0765 1f 85 fe                            sta.w $fe             ; TXTPTR
ff0768 1f aa                               tax.w
ff076a a9 a0                               lda #$a0
ff076c a0 00                               ldy #$0
ff076e                 loop_clear_char:
ff076e 4f bb                               sta.a24 XY
ff0770 c8                                  iny
ff0771 c0 28                               cpy #$28
ff0773 d0 f9                               bne -7                ; loop_clear_char [ff076e]
ff0775 4f 60                               rts.a24

ff0777 ; SUB ClearScreen:
000000-000002   ; VAR @ROWPTR
ff0777 2b                                  xsl
ff0778                 DOff0778_start:
ff0778                                 ;; DO {
ff0778                 DOff0778_loop:
ff0778 6f bd 00 80 ff                      lda.t.a24 $ff8000,X   ; TextScreenBase
ff077d ac fd 03                            ldy $03fd             ; DISPMODE
ff0780 c0 01                               cpy #$1               ; DISP_TEXT_2
ff0782                                 ;; IF == {
ff0782 d0 06                               bne +6                ; IFff0782_end [ff078a]
ff0784 18                                  clc
ff0785 2f 69 00 04 00                      adc.t #$400
ff078a                 IFff0782_end:
ff078a 1f 85 00                            sta.w $00             ; ROWPTR
ff078d a9 a0                               lda #$a0
ff078f                 FORff078f_start:
ff078f                                 ;; FOR Y = 0 TO 39 {
ff078f a0 00                               ldy #$0
ff0791                 FORff078f_loop:
ff0791 91 00                               sta ($00),Y           ; ROWPTR
ff0793 c8                                  iny
ff0794 c0 28                               cpy #$28
ff0796 d0 f9                               bne -7                ; FORff078f_loop [ff0791]
ff0798                 FORff078f_end:
ff0798 e8                                  inx
ff0799 e8                                  inx
ff079a e0 30                               cpx #$30
ff079c                                 ;; WHILE !=
ff079c f0 02                               beq +2                ; DOff0778_end [ff07a0]
ff079e 80 d8                               bra -40               ; DOff0778_loop [ff0778]
ff07a0                 DOff0778_end:
ff07a0 4f 60                               rts.a24

ff07a2 ; SUB NextLine:
ff07a2 ad ff 03                            lda $03ff             ; TXTROW
ff07a5 c9 17                               cmp #$17
ff07a7                                 ;; IF < {
ff07a7 b0 0f                               bcs +15               ; IFff07a7_else [ff07b8]
ff07a9 ee ff 03                            inc $03ff             ; TXTROW
ff07ac 4f 20 7e 04 ff                      jsr.a24 $ff047e       ; ScreenBase
ff07b1 a9 00                               lda #$0
ff07b3 8d fe 03                            sta $03fe             ; TXTPOS
ff07b6 80 11                               bra +17               ; IFff07a7_end [ff07c9]
ff07b8                 IFff07a7_else:
ff07b8                                 ;; ELSE
ff07b8 a2 02                               ldx #$2
ff07ba 4f 20 cb 07 ff                      jsr.a24 $ff07cb       ; ScrollScreen
ff07bf a9 17                               lda #$17
ff07c1 8d ff 03                            sta $03ff             ; TXTROW
ff07c4 a9 00                               lda #$0
ff07c6 8d fe 03                            sta $03fe             ; TXTPOS
ff07c9                 IFff07a7_end:
ff07c9 4f 60                               rts.a24

ff07cb ; SUB ScrollScreen:
ff07cb 2b                                  xsl
ff07cc                 loop_scroll_line:
ff07cc 5f bd 00 80 ff                      lda.w.a24 $ff8000,X   ; TextScreenBase
ff07d1 1f 85 fe                            sta.w $fe             ; TXTPTR
ff07d4 5f bd 02 80 ff                      lda.w.a24 $ff8002,X   ; TextScreenBase
ff07d9 1f 85 00                            sta.w $00
ff07dc a0 00                               ldy #$0
ff07de                 loop_scroll_char:
ff07de b1 00                               lda ($00),Y
ff07e0 91 fe                               sta ($fe),Y           ; TXTPTR
ff07e2 c8                                  iny
ff07e3 c0 28                               cpy #$28
ff07e5 d0 f7                               bne -9                ; loop_scroll_char [ff07de]
ff07e7 e8                                  inx
ff07e8 e8                                  inx
ff07e9 e0 2e                               cpx #$2e
ff07eb d0 df                               bne -33               ; loop_scroll_line [ff07cc]
ff07ed                 scroll_clear_last_line:
ff07ed 5f bd 00 80 ff                      lda.w.a24 $ff8000,X   ; TextScreenBase
ff07f2 1f 85 fe                            sta.w $fe             ; TXTPTR
ff07f5 1f a9 a0 a0                         lda.w #$a0a0
ff07f9 a0 00                               ldy #$0
ff07fb                 loop_scroll_clear_line:
ff07fb 1f 91 fe                            sta.w ($fe),Y         ; TXTPTR
ff07fe c8                                  iny
ff07ff c8                                  iny
ff0800 c0 28                               cpy #$28
ff0802 d0 f7                               bne -9                ; loop_scroll_clear_line [ff07fb]
ff0804                 done_with_scroll:
ff0804 4f 60                               rts.a24

ff0806 ; SUB ClearInputBuffers:
ff0806 a9 00                               lda #$0
ff0808                 FORff0808_start:
ff0808                                 ;; FOR X = 0 TO 255 {
ff0808 a2 00                               ldx #$0
ff080a                 FORff0808_loop:
ff080a 9d 00 02                            sta $0200,X           ; TXTBUFFER
ff080d e8                                  inx
ff080e e0 00                               cpx #$100
ff0810 d0 f8                               bne -8                ; FORff0808_loop [ff080a]
ff0812                 FORff0808_end:
ff0812 4f 60                               rts.a24

ff0814 ; SUB ClearCurrentInputBuffer:
ff0814 a9 00                               lda #$0
ff0816                 FORff0816_start:
ff0816                                 ;; FOR X = 0 TO 127 {
ff0816 a2 00                               ldx #$0
ff0818                 FORff0816_loop:
ff0818 9d 00 02                            sta $0200,X           ; TXTBUFFER
ff081b e8                                  inx
ff081c e0 80                               cpx #$80
ff081e d0 f8                               bne -8                ; FORff0816_loop [ff0818]
ff0820                 FORff0816_end:
ff0820 4f 60                               rts.a24

ff0822 ; SUB PrevToCurrentInputBuffer:
ff0822                 FORff0822_start:
ff0822                                 ;; FOR X = 0 TO 127 {
ff0822 a2 00                               ldx #$0
ff0824                 FORff0822_loop:
ff0824 bd 80 02                            lda $0280,X           ; TXTBUFFER2
ff0827 9d 00 02                            sta $0200,X           ; TXTBUFFER
ff082a e8                                  inx
ff082b e0 80                               cpx #$80
ff082d d0 f5                               bne -11               ; FORff0822_loop [ff0824]
ff082f                 FORff0822_end:
ff082f 4f 60                               rts.a24

ff0831 ; SUB CurrentToPrevInputBuffer:
ff0831                 FORff0831_start:
ff0831                                 ;; FOR X = 0 TO 127 {
ff0831 a2 00                               ldx #$0
ff0833                 FORff0831_loop:
ff0833 bd 00 02                            lda $0200,X           ; TXTBUFFER
ff0836 9d 80 02                            sta $0280,X           ; TXTBUFFER2
ff0839 e8                                  inx
ff083a e0 80                               cpx #$80
ff083c d0 f5                               bne -11               ; FORff0831_loop [ff0833]
ff083e                 FORff0831_end:
ff083e 4f 60                               rts.a24

ff0840 ; SUB InputBufferToTextScreen:
ff0840 a0 01                               ldy #$1
ff0842                 FORff0842_start:
ff0842                                 ;; FOR X = 0 TO 39 {
ff0842 a2 00                               ldx #$0
ff0844                 FORff0842_loop:
ff0844 bd 00 02                            lda $0200,X           ; TXTBUFFER
ff0847                                 ;; IF == 0 {
ff0847 c9 00                               cmp #$0
ff0849 d0 07                               bne +7                ; IFff0847_end [ff0852]
ff084b 8c fe 03                            sty $03fe             ; TXTPOS
ff084e                                 ;; BREAK
ff084e 4f 80 0a 00                         bra.a24 +10           ; forff0842_end [ff085c]
ff0852                 IFff0847_end:
ff0852 09 80                               ora #$80
ff0854 91 fe                               sta ($fe),Y           ; TXTPTR
ff0856 c8                                  iny
ff0857 e8                                  inx
ff0858 e0 28                               cpx #$28
ff085a d0 e8                               bne -24               ; FORff0842_loop [ff0844]
ff085c                 FORff0842_end:
ff085c a9 a0                               lda #$a0
ff085e                 LOOPff085e_start:
ff085e                                 ;; LOOP {
ff085e                 LOOPff085e_loop:
ff085e c0 28                               cpy #$28
ff0860                                 ;; IF == {
ff0860 d0 04                               bne +4                ; IFff0860_end [ff0866]
ff0862                                 ;; BREAK
ff0862 4f 80 05 00                         bra.a24 +5            ; loopff085e_end [ff086b]
ff0866                 IFff0860_end:
ff0866 91 fe                               sta ($fe),Y           ; TXTPTR
ff0868 c8                                  iny
ff0869 80 f3                               bra -13               ; LOOPff085e_loop [ff085e]
ff086b                 LOOPff085e_end:
ff086b 4f 60                               rts.a24

ff086d ; SUB GetChar:
ff086d                 LOOPff086d_start:
ff086d                                 ;; LOOP {
ff086d                 LOOPff086d_loop:
ff086d 2c 00 c0                            bit $c000             ; KBD
ff0870                                 ;; IF - {
ff0870 10 04                               bpl +4                ; IFff0870_end [ff0876]
ff0872                                 ;; BREAK
ff0872 4f 80 02 00                         bra.a24 +2            ; loopff086d_end [ff0878]
ff0876                 IFff0870_end:
ff0876 80 f5                               bra -11               ; LOOPff086d_loop [ff086d]
ff0878                 LOOPff086d_end:
ff0878 ad 00 c0                            lda $c000             ; KBD
ff087b 2c 10 c0                            bit $c010             ; KBDSTRB
ff087e 4f 60                               rts.a24

ff0880 ; SUB AppleII4:
ff0880                 FORff0880_start:
ff0880                                 ;; FOR X = 0 TO 39 {
ff0880 a2 00                               ldx #$0
ff0882                 FORff0880_loop:
ff0882 4f bd 30 80 ff                      lda.a24 $ff8030,X     ; Hello
ff0887 f0 0a                               beq +10               ; forff0880_end [ff0893]
ff0889 09 80                               ora #$80
ff088b 9d 00 04                            sta $0400,X
ff088e e8                                  inx
ff088f e0 28                               cpx #$28
ff0891 d0 ef                               bne -17               ; FORff0880_loop [ff0882]
ff0893                 FORff0880_end:
ff0893 4f 60                               rts.a24

ff0895 ; SUB Disk4Name:
ff0895 a9 00                               lda #$0               ; DISK4_VOLUME_NAME
ff0897 8d f0 c0                            sta $c0f0             ; DISK4_CMD
ff089a ad ff c0                            lda $c0ff             ; DISK4_GO
ff089d 85 00                               sta $00
ff089f ad 00 c7                            lda $c700             ; SLOT_7_ROM
ff08a2 1f a2 00 c8                         ldx.w #$c800          ; PR_RAM
ff08a6 4f 60                               rts.a24

ff08a8 ; SUB Disk4CatalogStart:
ff08a8 a9 01                               lda #$1               ; DISK4_CATALOG
ff08aa 8d f0 c0                            sta $c0f0             ; DISK4_CMD
ff08ad ad ff c0                            lda $c0ff             ; DISK4_GO
ff08b0 4f 60                               rts.a24

ff08b2 ; SUB Disk4CatalogNext:
ff08b2 a9 02                               lda #$2               ; DISK4_CATALOG_NEXT
ff08b4 8d f0 c0                            sta $c0f0             ; DISK4_CMD
ff08b7 ad ff c0                            lda $c0ff             ; DISK4_GO
ff08ba 85 00                               sta $00
ff08bc ad 00 c7                            lda $c700             ; SLOT_7_ROM
ff08bf 1f a2 06 c8                         ldx.w #$c806          ; PR_RAM
ff08c3 a5 00                               lda $00
ff08c5 4f 60                               rts.a24

ff08c7 ; SUB Disk4Open:
00d600          ; VAR @FILENAME
ff08c7 ad 00 c7                            lda $c700             ; SLOT_7_ROM
ff08ca 2f ae 00 d6                         ldx.t $00d600
ff08ce                 FORff08ce_start:
ff08ce                                 ;; FOR Y = 0 TO 16 {
ff08ce a0 00                               ldy #$0
ff08d0                 FORff08ce_loop:
ff08d0 4f ab                               lda.a24 XY
ff08d2 99 00 c8                            sta $c800,Y           ; PR_RAM
ff08d5                                 ;; IF == {
ff08d5 d0 04                               bne +4                ; IFff08d5_end [ff08db]
ff08d7                                 ;; BREAK
ff08d7 4f 80 05 00                         bra.a24 +5            ; forff08ce_end [ff08e0]
ff08db                 IFff08d5_end:
ff08db c8                                  iny
ff08dc c0 11                               cpy #$11
ff08de d0 f0                               bne -16               ; FORff08ce_loop [ff08d0]
ff08e0                 FORff08ce_end:
ff08e0 a9 05                               lda #$5               ; DISK4_OPEN
ff08e2 8d f0 c0                            sta $c0f0             ; DISK4_CMD
ff08e5 ad ff c0                            lda $c0ff             ; DISK4_GO
ff08e8 85 00                               sta $00
ff08ea ae f7 c0                            ldx $c0f7             ; DISK4_RET0
ff08ed a5 00                               lda $00
ff08ef 4f 60                               rts.a24

ff08f1 ; SUB Disk4Close:
ff08f1 8d f1 c0                            sta $c0f1             ; DISK4_ARG0
ff08f4 a9 0a                               lda #$a               ; DISK4_CLOSE
ff08f6 8d f0 c0                            sta $c0f0             ; DISK4_CMD
ff08f9 ad ff c0                            lda $c0ff             ; DISK4_GO
ff08fc 4f 60                               rts.a24

ff08fe ; SUB Disk4Read:
ff08fe a9 06                               lda #$6               ; DISK4_READ
ff0900 8d f0 c0                            sta $c0f0             ; DISK4_CMD
ff0903 ad ff c0                            lda $c0ff             ; DISK4_GO
ff0906                                 ;; IF != {
ff0906 f0 02                               beq +2                ; IFff0906_end [ff090a]
ff0908 4f 60                               rts.a24
ff090a                 IFff0906_end:
ff090a ad 00 c7                            lda $c700             ; SLOT_7_ROM
ff090d 4f 60                               rts.a24

ff090f ; SUB Disk4PrintError:
ff090f                                 ;; IF == 3 {
ff090f c9 03                               cmp #$3
ff0911 d0 07                               bne +7                ; IFff090f_else [ff091a]
ff0913 2f a9 06 81 ff                      lda.t #$ff8106        ; Disk4ErrorNotFoundStr
ff0918 80 05                               bra +5                ; IFff090f_end [ff091f]
ff091a                 IFff090f_else:
ff091a                                 ;; ELSE
ff091a 2f a9 f6 80 ff                      lda.t #$ff80f6        ; Disk4ErrorStr
ff091f                 IFff090f_end:
ff091f 2f 8d 00 d7                         sta.t $00d700
ff0923 4f 20 8e 06 ff                      jsr.a24 $ff068e       ; PrintError
ff0928 4f 60                               rts.a24

ff092a ; SUB DoHelp:
00d000          ; VAR @ARGN
000004          ; VAR @I
000005          ; VAR @I6
000006          ; VAR @COL
ff092a 4f 20 a2 07 ff                      jsr.a24 $ff07a2       ; NextLine
ff092f 2f a9 3a 80 ff                      lda.t #$ff803a        ; CommandListStr
ff0934 2f 8d 00 d7                         sta.t $00d700
ff0938 4f 20 63 06 ff                      jsr.a24 $ff0663       ; PrintString
ff093d 4f 20 a2 07 ff                      jsr.a24 $ff07a2       ; NextLine
ff0942                       ;; M@$4 = 1 
ff0942 2f 85 00                            sta.t $00
ff0945 a9 01                               lda #$1
ff0947 85 04                               sta $04
ff0949 2f a5 00                            lda.t $00
ff094c                       ;; M@$6 = 0 
ff094c 2f 85 00                            sta.t $00
ff094f a9 00                               lda #$0
ff0951 85 06                               sta $06
ff0953 2f a5 00                            lda.t $00
ff0956                 DOff0956_start:
ff0956                                 ;; DO {
ff0956                 DOff0956_loop:
ff0956 4f 20 b5 06 ff                      jsr.a24 $ff06b5       ; PrintSpace
ff095b a5 04                               lda $04               ; I
ff095d                       ;; A <<= 2 
ff095d 0a                                  asl
ff095e 0a                                  asl
ff095f 85 05                               sta $05               ; I6
ff0961 a5 04                               lda $04               ; I
ff0963                       ;; A <<= 1 
ff0963 0a                                  asl
ff0964 18                                  clc
ff0965 65 05                               adc $05               ; I6
ff0967 85 05                               sta $05               ; I6
ff0969 aa                                  tax
ff096a 6f bd 85 81 ff                      lda.t.a24 $ff8185,X   ; CommandList
ff096f 2f 8d 00 d7                         sta.t $00d700
ff0973 4f 20 63 06 ff                      jsr.a24 $ff0663       ; PrintString
ff0978 a5 06                               lda $06               ; COL
ff097a                                 ;; IF == {
ff097a d0 13                               bne +19               ; IFff097a_else [ff098f]
ff097c                       ;; M@$6 = 1 
ff097c 85 00                               sta $00
ff097e a9 01                               lda #$1
ff0980 85 06                               sta $06
ff0982 a5 00                               lda $00
ff0984                       ;; M@$3fe = 12 
ff0984 85 00                               sta $00
ff0986 a9 0c                               lda #$c
ff0988 8d fe 03                            sta $03fe
ff098b a5 00                               lda $00
ff098d 80 26                               bra +38               ; IFff097a_end [ff09b5]
ff098f                 IFff097a_else:
ff098f                                 ;; ELSE
ff098f                                 ;; IF == 1 {
ff098f c9 01                               cmp #$1
ff0991 d0 11                               bne +17               ; IFff098f_end [ff09a4]
ff0993                       ;; M@$6 = 2 
ff0993 85 00                               sta $00
ff0995 a9 02                               lda #$2
ff0997 85 06                               sta $06
ff0999 a5 00                               lda $00
ff099b                       ;; M@$3fe = 24 
ff099b 85 00                               sta $00
ff099d a9 18                               lda #$18
ff099f 8d fe 03                            sta $03fe
ff09a2 a5 00                               lda $00
ff09a4                 IFff098f_end:
ff09a4                                 ;; IF == 2 {
ff09a4 c9 02                               cmp #$2
ff09a6 d0 0d                               bne +13               ; IFff09a4_end [ff09b5]
ff09a8                       ;; M@$6 = 0 
ff09a8 85 00                               sta $00
ff09aa a9 00                               lda #$0
ff09ac 85 06                               sta $06
ff09ae a5 00                               lda $00
ff09b0 4f 20 a2 07 ff                      jsr.a24 $ff07a2       ; NextLine
ff09b5                 IFff09a4_end:
ff09b5                 IFff097a_end:
ff09b5 e6 04                               inc $04               ; I
ff09b7 a5 04                               lda $04               ; I
ff09b9                                 ;; WHILE < 14
ff09b9 c9 0e                               cmp #$e
ff09bb b0 02                               bcs +2                ; DOff0956_end [ff09bf]
ff09bd 80 97                               bra -105              ; DOff0956_loop [ff0956]
ff09bf                 DOff0956_end:
ff09bf 4f 20 a2 07 ff                      jsr.a24 $ff07a2       ; NextLine
ff09c4 4f 20 a2 07 ff                      jsr.a24 $ff07a2       ; NextLine
ff09c9 4f 60                               rts.a24

ff09cb ; SUB DoAscii:
00d000          ; VAR @ARGN
000004          ; VAR @I
000005          ; VAR @J
000003          ; VAR @C
ff09cb 4f 20 a2 07 ff                      jsr.a24 $ff07a2       ; NextLine
ff09d0 2f a9 44 80 ff                      lda.t #$ff8044        ; ASCIIHeaderStr
ff09d5 2f 8d 00 d7                         sta.t $00d700
ff09d9 4f 20 63 06 ff                      jsr.a24 $ff0663       ; PrintString
ff09de 4f 20 a2 07 ff                      jsr.a24 $ff07a2       ; NextLine
ff09e3 2f a9 57 80 ff                      lda.t #$ff8057        ; ASCIIDashesStr
ff09e8 2f 8d 00 d7                         sta.t $00d700
ff09ec 4f 20 63 06 ff                      jsr.a24 $ff0663       ; PrintString
ff09f1 4f 20 a2 07 ff                      jsr.a24 $ff07a2       ; NextLine
ff09f6                 FORff09f6_start:
ff09f6                                 ;; FOR @I = 0 TO 15 {
ff09f6 a2 00                               ldx #$0
ff09f8 86 04                               stx $04
ff09fa                 FORff09f6_loop:
ff09fa a5 04                               lda $04               ; I
ff09fc 4f 20 65 05 ff                      jsr.a24 $ff0565       ; PrintHexDigit
ff0a01 a9 ad                               lda #$ad
ff0a03 4f 20 a4 06 ff                      jsr.a24 $ff06a4       ; PrintChar
ff0a08                 FORff0a08_start:
ff0a08                                 ;; FOR @J = 0 TO 15 {
ff0a08 a2 00                               ldx #$0
ff0a0a 86 05                               stx $05
ff0a0c                 FORff0a08_loop:
ff0a0c a5 03                               lda $03               ; C
ff0a0e 4f 20 a4 06 ff                      jsr.a24 $ff06a4       ; PrintChar
ff0a13 e6 03                               inc $03               ; C
ff0a15 e6 05                               inc $05
ff0a17 a6 05                               ldx $05
ff0a19 e0 10                               cpx #$10
ff0a1b d0 ef                               bne -17               ; FORff0a08_loop [ff0a0c]
ff0a1d                 FORff0a08_end:
ff0a1d 4f 20 a2 07 ff                      jsr.a24 $ff07a2       ; NextLine
ff0a22 e6 04                               inc $04
ff0a24 a6 04                               ldx $04
ff0a26 e0 10                               cpx #$10
ff0a28 d0 d0                               bne -48               ; FORff09f6_loop [ff09fa]
ff0a2a                 FORff09f6_end:
ff0a2a 2f a9 57 80 ff                      lda.t #$ff8057        ; ASCIIDashesStr
ff0a2f 2f 8d 00 d7                         sta.t $00d700
ff0a33 4f 20 63 06 ff                      jsr.a24 $ff0663       ; PrintString
ff0a38 4f 20 a2 07 ff                      jsr.a24 $ff07a2       ; NextLine
ff0a3d 4f 60                               rts.a24

ff0a3f ; SUB DoCatalog:
00d000          ; VAR @ARGN
ff0a3f 4f 20 a2 07 ff                      jsr.a24 $ff07a2       ; NextLine
ff0a44 2f a9 6a 80 ff                      lda.t #$ff806a        ; CatalogHeaderStr
ff0a49 2f 8d 00 d7                         sta.t $00d700
ff0a4d 4f 20 63 06 ff                      jsr.a24 $ff0663       ; PrintString
ff0a52 4f 20 95 08 ff                      jsr.a24 $ff0895       ; Disk4Name
ff0a57 2f 8e 00 d7                         stx.t $00d700
ff0a5b 4f 20 63 06 ff                      jsr.a24 $ff0663       ; PrintString
ff0a60 4f 20 a2 07 ff                      jsr.a24 $ff07a2       ; NextLine
ff0a65 4f 20 a8 08 ff                      jsr.a24 $ff08a8       ; Disk4CatalogStart
ff0a6a                                 ;; IF != {
ff0a6a f0 07                               beq +7                ; IFff0a6a_end [ff0a73]
ff0a6c 4f 20 0f 09 ff                      jsr.a24 $ff090f       ; Disk4PrintError
ff0a71 4f 60                               rts.a24
ff0a73                 IFff0a6a_end:
ff0a73 4f 20 a2 07 ff                      jsr.a24 $ff07a2       ; NextLine
ff0a78                 LOOPff0a78_start:
ff0a78                                 ;; LOOP {
ff0a78                 LOOPff0a78_loop:
ff0a78 4f 20 b2 08 ff                      jsr.a24 $ff08b2       ; Disk4CatalogNext
ff0a7d                                 ;; IF != {
ff0a7d f0 04                               beq +4                ; IFff0a7d_end [ff0a83]
ff0a7f                                 ;; BREAK
ff0a7f 4f 80 4f 00                         bra.a24 +79           ; loopff0a78_end [ff0ad2]
ff0a83                 IFff0a7d_end:
ff0a83 2f 8e 00 d7                         stx.t $00d700
ff0a87 a9 02                               lda #$2
ff0a89 8d fe 03                            sta $03fe             ; TXTPOS
ff0a8c ad 00 c8                            lda $c800             ; DISK4_RAM
ff0a8f 4f 20 a4 06 ff                      jsr.a24 $ff06a4       ; PrintChar
ff0a94 ad 01 c8                            lda $c801             ; DISK4_RAM
ff0a97 4f 20 a4 06 ff                      jsr.a24 $ff06a4       ; PrintChar
ff0a9c ad 02 c8                            lda $c802             ; DISK4_RAM
ff0a9f 4f 20 a4 06 ff                      jsr.a24 $ff06a4       ; PrintChar
ff0aa4 a9 06                               lda #$6
ff0aa6 8d fe 03                            sta $03fe             ; TXTPOS
ff0aa9 ad 03 c8                            lda $c803             ; DISK4_RAM
ff0aac 4f 20 a4 06 ff                      jsr.a24 $ff06a4       ; PrintChar
ff0ab1 ad 04 c8                            lda $c804             ; DISK4_RAM
ff0ab4 4f 20 a4 06 ff                      jsr.a24 $ff06a4       ; PrintChar
ff0ab9 ad 05 c8                            lda $c805             ; DISK4_RAM
ff0abc 4f 20 a4 06 ff                      jsr.a24 $ff06a4       ; PrintChar
ff0ac1 a9 0a                               lda #$a
ff0ac3 8d fe 03                            sta $03fe             ; TXTPOS
ff0ac6 4f 20 63 06 ff                      jsr.a24 $ff0663       ; PrintString
ff0acb 4f 20 a2 07 ff                      jsr.a24 $ff07a2       ; NextLine
ff0ad0 80 a6                               bra -90               ; LOOPff0a78_loop [ff0a78]
ff0ad2                 LOOPff0a78_end:
ff0ad2 4f 20 a2 07 ff                      jsr.a24 $ff07a2       ; NextLine
ff0ad7 4f 60                               rts.a24

ff0ad9 ; SUB DoClear:
00d000          ; VAR @ARGN
ff0ad9 ad fd 03                            lda $03fd             ; DISPMODE
ff0adc                                 ;; IF == {
ff0adc d0 13                               bne +19               ; IFff0adc_end [ff0af1]
ff0ade a2 02                               ldx #$2
ff0ae0 4f 20 77 07 ff                      jsr.a24 $ff0777       ; ClearScreen
ff0ae5 a9 02                               lda #$2
ff0ae7 8d ff 03                            sta $03ff             ; TXTROW
ff0aea a9 00                               lda #$0
ff0aec 8d fe 03                            sta $03fe             ; TXTPOS
ff0aef 4f 60                               rts.a24
ff0af1                 IFff0adc_end:
ff0af1                                 ;; IF == 1 {
ff0af1 c9 01                               cmp #$1
ff0af3 d0 07                               bne +7                ; IFff0af1_end [ff0afc]
ff0af5 a2 00                               ldx #$0
ff0af7 4f 20 77 07 ff                      jsr.a24 $ff0777       ; ClearScreen
ff0afc                 IFff0af1_end:
ff0afc 4f 60                               rts.a24

ff0afe ; SUB DoEcho:
00d000          ; VAR @ARGN
000200          ; VAR @INPUT
ff0afe 1f a9 00 02                         lda.w #$200           ; INPUT
ff0b02 2f 8d 00 d7                         sta.t $00d700
ff0b06 4f 20 63 06 ff                      jsr.a24 $ff0663       ; PrintString
ff0b0b 4f 20 a2 07 ff                      jsr.a24 $ff07a2       ; NextLine
ff0b10 4f 60                               rts.a24

ff0b12 ; SUB DoLoad:
00d000          ; VAR @ARGN
00d001          ; VAR @CMD
00d004          ; VAR @FILENAME
00d007          ; VAR @ADDRESS
000009          ; VAR @FN
000003-000005   ; VAR @R_IDX
000006-000007   ; VAR @ACTUAL
000008-000009   ; VAR @C_IDX
ff0b12 4f 20 a2 07 ff                      jsr.a24 $ff07a2       ; NextLine
ff0b17 ad 00 d0                            lda $d000             ; ARGN
ff0b1a                                 ;; IF < 1 {
ff0b1a c9 01                               cmp #$1
ff0b1c b0 10                               bcs +16               ; IFff0b1a_end [ff0b2e]
ff0b1e 2f a9 77 80 ff                      lda.t #$ff8077        ; NoFilenameErrStr
ff0b23 2f 8d 00 d7                         sta.t $00d700
ff0b27 4f 20 8e 06 ff                      jsr.a24 $ff068e       ; PrintError
ff0b2c 4f 60                               rts.a24
ff0b2e                 IFff0b1a_end:
ff0b2e ad 00 d0                            lda $d000             ; ARGN
ff0b31                                 ;; IF < 2 {
ff0b31 c9 02                               cmp #$2
ff0b33 b0 10                               bcs +16               ; IFff0b31_end [ff0b45]
ff0b35 2f a9 96 80 ff                      lda.t #$ff8096        ; NoAddressErrStr
ff0b3a 2f 8d 00 d7                         sta.t $00d700
ff0b3e 4f 20 8e 06 ff                      jsr.a24 $ff068e       ; PrintError
ff0b43 4f 60                               rts.a24
ff0b45                 IFff0b31_end:
ff0b45 2f ad 07 d0                         lda.t $00d007         ; ADDRESS
ff0b49 2f 8d 00 d7                         sta.t $00d700
ff0b4d 4f 20 7d 05 ff                      jsr.a24 $ff057d       ; ParseNumber
ff0b52 2f 8d 07 d0                         sta.t $00d007         ; ADDRESS
ff0b56 2f ad 04 d0                         lda.t $00d004         ; FILENAME
ff0b5a                                 ;; IF == {
ff0b5a d0 0d                               bne +13               ; IFff0b5a_end [ff0b69]
ff0b5c 2f a9                               lda.t #$ff8077        ; NoFilenameErrStr
ff0b5e 2f 8d 00 d7                         sta.t $00d700
ff0b62 4f 20 8e 06 ff                      jsr.a24 $ff068e       ; PrintError
ff0b67 4f 60                               rts.a24
ff0b69                 IFff0b5a_end:
ff0b69 2f 8d 00 d6                         sta.t $00d600
ff0b6d 4f 20 c7 08 ff                      jsr.a24 $ff08c7       ; Disk4Open
ff0b72                                 ;; IF != {
ff0b72 f0 07                               beq +7                ; IFff0b72_end [ff0b7b]
ff0b74 4f 20 0f 09 ff                      jsr.a24 $ff090f       ; Disk4PrintError
ff0b79 4f 60                               rts.a24
ff0b7b                 IFff0b72_end:
ff0b7b 86 09                               stx $09               ; FN
ff0b7d 2f 64 03                            stz.t $03             ; R_IDX
ff0b80                 LOOPff0b80_start:
ff0b80                                 ;; LOOP {
ff0b80                 LOOPff0b80_loop:
ff0b80 4f 20 fe 08 ff                      jsr.a24 $ff08fe       ; Disk4Read
ff0b85                                 ;; IF == 2 {
ff0b85 c9 02                               cmp #$2
ff0b87 d0 04                               bne +4                ; IFff0b85_end [ff0b8d]
ff0b89                                 ;; BREAK
ff0b89 4f 80 38 00                         bra.a24 +56           ; loopff0b80_end [ff0bc5]
ff0b8d                 IFff0b85_end:
ff0b8d 2f ad f7 c0                         lda.t $00c0f7         ; DISK4_RET0
ff0b91                                 ;; IF == {
ff0b91 d0 04                               bne +4                ; IFff0b91_end [ff0b97]
ff0b93                                 ;; BREAK
ff0b93 4f 80 2e 00                         bra.a24 +46           ; loopff0b80_end [ff0bc5]
ff0b97                 IFff0b91_end:
ff0b97 2f 85 06                            sta.t $06             ; ACTUAL
ff0b9a 1f 64 08                            stz.w $08             ; C_IDX
ff0b9d                 LOOPff0b9d_start:
ff0b9d                                 ;; LOOP {
ff0b9d                 LOOPff0b9d_loop:
ff0b9d 1f a2 00 c8                         ldx.w #$c800          ; DISK4_RAM
ff0ba1 1f a4 08                            ldy.w $08             ; C_IDX
ff0ba4 4f ab                               lda.a24 XY
ff0ba6 2f e6 08                            inc.t $08             ; C_IDX
ff0ba9 2f ae 07 d0                         ldx.t $00d007         ; ADDRESS
ff0bad 2f a4 03                            ldy.t $03             ; R_IDX
ff0bb0 4f bb                               sta.a24 XY
ff0bb2 2f e6 03                            inc.t $03             ; R_IDX
ff0bb5 1f a4 08                            ldy.w $08             ; C_IDX
ff0bb8 1f c4 06                            cpy.w $06             ; ACTUAL
ff0bbb                                 ;; IF == {
ff0bbb d0 04                               bne +4                ; IFff0bbb_end [ff0bc1]
ff0bbd                                 ;; BREAK
ff0bbd 4f 80 02 00                         bra.a24 +2            ; loopff0b9d_end [ff0bc3]
ff0bc1                 IFff0bbb_end:
ff0bc1 80 da                               bra -38               ; LOOPff0b9d_loop [ff0b9d]
ff0bc3                 LOOPff0b9d_end:
ff0bc3 80 bb                               bra -69               ; LOOPff0b80_loop [ff0b80]
ff0bc5                 LOOPff0b80_end:
ff0bc5 a5 09                               lda $09               ; FN
ff0bc7 4f 20 f1 08 ff                      jsr.a24 $ff08f1       ; Disk4Close
ff0bcc 2f a9 d0 80 ff                      lda.t #$ff80d0        ; LoadedStr
ff0bd1 2f 8d 00 d7                         sta.t $00d700
ff0bd5 4f 20 63 06 ff                      jsr.a24 $ff0663       ; PrintString
ff0bda 2f a5 06                            lda.t $06             ; ACTUAL
ff0bdd 4f 20 14 05 ff                      jsr.a24 $ff0514       ; PrintHex24
ff0be2 2f a9 d8 80 ff                      lda.t #$ff80d8        ; LoadedBytesToStr
ff0be7 2f 8d 00 d7                         sta.t $00d700
ff0beb 4f 20 63 06 ff                      jsr.a24 $ff0663       ; PrintString
ff0bf0 2f ad 07 d0                         lda.t $00d007         ; ADDRESS
ff0bf4 4f 20 14 05 ff                      jsr.a24 $ff0514       ; PrintHex24
ff0bf9 4f 20 a2 07 ff                      jsr.a24 $ff07a2       ; NextLine
ff0bfe 4f 20 a2 07 ff                      jsr.a24 $ff07a2       ; NextLine
ff0c03 4f 60                               rts.a24

ff0c05 ; SUB DoView:
00d000          ; VAR @ARGN
00d001          ; VAR @CMD
00d004          ; VAR @FILENAME
00000b          ; VAR @FN
000003-000005   ; VAR @R_IDX
000006-000008   ; VAR @ACTUAL
00d0ff          ; VAR @LINENUM
ff0c05 4f 20 a2 07 ff                      jsr.a24 $ff07a2       ; NextLine
ff0c0a ad 00 d0                            lda $d000             ; ARGN
ff0c0d                                 ;; IF < 1 {
ff0c0d c9 01                               cmp #$1
ff0c0f b0 10                               bcs +16               ; IFff0c0d_end [ff0c21]
ff0c11 2f a9 77 80 ff                      lda.t #$ff8077        ; NoFilenameErrStr
ff0c16 2f 8d 00 d7                         sta.t $00d700
ff0c1a 4f 20 8e 06 ff                      jsr.a24 $ff068e       ; PrintError
ff0c1f 4f 60                               rts.a24
ff0c21                 IFff0c0d_end:
ff0c21 2f ad 04 d0                         lda.t $00d004         ; FILENAME
ff0c25 2f 8d 00 d6                         sta.t $00d600
ff0c29 4f 20 c7 08 ff                      jsr.a24 $ff08c7       ; Disk4Open
ff0c2e                                 ;; IF != {
ff0c2e f0 07                               beq +7                ; IFff0c2e_end [ff0c37]
ff0c30 4f 20 0f 09 ff                      jsr.a24 $ff090f       ; Disk4PrintError
ff0c35 4f 60                               rts.a24
ff0c37                 IFff0c2e_end:
ff0c37 86 0b                               stx $0b               ; FN
ff0c39 9c ff d0                            stz $d0ff             ; LINENUM
ff0c3c                 LOOPff0c3c_start:
ff0c3c                                 ;; LOOP {
ff0c3c                 LOOPff0c3c_loop:
ff0c3c 4f 20 fe 08 ff                      jsr.a24 $ff08fe       ; Disk4Read
ff0c41                                 ;; IF == 2 {
ff0c41 c9 02                               cmp #$2
ff0c43 d0 04                               bne +4                ; IFff0c41_end [ff0c49]
ff0c45                                 ;; BREAK
ff0c45 4f 80 58 00                         bra.a24 +88           ; loopff0c3c_end [ff0ca1]
ff0c49                 IFff0c41_end:
ff0c49 2f ad f7 c0                         lda.t $00c0f7         ; DISK4_RET0
ff0c4d                                 ;; IF == {
ff0c4d d0 04                               bne +4                ; IFff0c4d_end [ff0c53]
ff0c4f                                 ;; BREAK
ff0c4f 4f 80 4e 00                         bra.a24 +78           ; loopff0c3c_end [ff0ca1]
ff0c53                 IFff0c4d_end:
ff0c53 2f 85 06                            sta.t $06             ; ACTUAL
ff0c56 2f 64 03                            stz.t $03             ; R_IDX
ff0c59                 LOOPff0c59_start:
ff0c59                                 ;; LOOP {
ff0c59                 LOOPff0c59_loop:
ff0c59 1f a2 00 c8                         ldx.w #$c800          ; DISK4_RAM
ff0c5d 1f a4 03                            ldy.w $03             ; R_IDX
ff0c60 4f ab                               lda.a24 XY
ff0c62                                 ;; IF == 10 {
ff0c62 c9 0a                               cmp #$a
ff0c64 d0 0b                               bne +11               ; IFff0c62_end [ff0c71]
ff0c66 4f 20 bb 0c ff                      jsr.a24 $ff0cbb       ; View_Paginate
ff0c6b                                 ;; IF != {
ff0c6b f0 04                               beq +4                ; IFff0c6b_end [ff0c71]
ff0c6d                                 ;; BREAK
ff0c6d 4f 80 2e 00                         bra.a24 +46           ; loopff0c59_end [ff0c9f]
ff0c71                 IFff0c6b_end:
ff0c71                 IFff0c62_end:
ff0c71                                 ;; IF >= 32 {
ff0c71 c9 20                               cmp #$20
ff0c73 90 19                               bcc +25               ; IFff0c71_end [ff0c8e]
ff0c75 ac fe 03                            ldy $03fe             ; TXTPOS
ff0c78 c0 28                               cpy #$28
ff0c7a                                 ;; IF >= {
ff0c7a 90 0b                               bcc +11               ; IFff0c7a_end [ff0c87]
ff0c7c 4f 20 bb 0c ff                      jsr.a24 $ff0cbb       ; View_Paginate
ff0c81                                 ;; IF != {
ff0c81 f0 02                               beq +2                ; IFff0c81_end [ff0c85]
ff0c83 80 1c                               bra +28               ; done [ff0ca1]
ff0c85                 IFff0c81_end:
ff0c85                                 ;; CONTINUE
ff0c85 80 d2                               bra -46               ; loopff0c59_start [ff0c59]
ff0c87                 IFff0c7a_end:
ff0c87 09 80                               ora #$80
ff0c89 91 fe                               sta ($fe),Y           ; TXTPTR
ff0c8b ee fe 03                            inc $03fe             ; TXTPOS
ff0c8e                 IFff0c71_end:
ff0c8e 2f e6 03                            inc.t $03             ; R_IDX
ff0c91 2f a5 03                            lda.t $03             ; R_IDX
ff0c94 2f c5 06                            cmp.t $06             ; ACTUAL
ff0c97                                 ;; IF == {
ff0c97 d0 04                               bne +4                ; IFff0c97_end [ff0c9d]
ff0c99                                 ;; BREAK
ff0c99 4f 80 02 00                         bra.a24 +2            ; loopff0c59_end [ff0c9f]
ff0c9d                 IFff0c97_end:
ff0c9d 80 ba                               bra -70               ; LOOPff0c59_loop [ff0c59]
ff0c9f                 LOOPff0c59_end:
ff0c9f 80 9b                               bra -101              ; LOOPff0c3c_loop [ff0c3c]
ff0ca1                 LOOPff0c3c_end:
ff0ca1                 done:
ff0ca1 a5 0b                               lda $0b               ; FN
ff0ca3 4f 20 f1 08 ff                      jsr.a24 $ff08f1       ; Disk4Close
ff0ca8 ad ff d0                            lda $d0ff             ; LINENUM
ff0cab                                 ;; IF == 21 {
ff0cab c9 15                               cmp #$15
ff0cad d0 05                               bne +5                ; IFff0cab_end [ff0cb4]
ff0caf 4f 20 6d 08 ff                      jsr.a24 $ff086d       ; GetChar
ff0cb4                 IFff0cab_end:
ff0cb4 4f 20 a2 07 ff                      jsr.a24 $ff07a2       ; NextLine
ff0cb9 4f 60                               rts.a24

ff0cbb ; SUB View_Paginate:
00d0ff          ; VAR @LINENUM
ff0cbb ee ff d0                            inc $d0ff             ; LINENUM
ff0cbe ad ff d0                            lda $d0ff             ; LINENUM
ff0cc1                                 ;; IF == 22 {
ff0cc1 c9 16                               cmp #$16
ff0cc3 d0 18                               bne +24               ; IFff0cc1_end [ff0cdd]
ff0cc5 4f 20 6d 08 ff                      jsr.a24 $ff086d       ; GetChar
ff0cca                                 ;; IF == 131 {
ff0cca c9 83                               cmp #$83
ff0ccc d0 04                               bne +4                ; IFff0cca_end [ff0cd2]
ff0cce a9 01                               lda #$1
ff0cd0 4f 60                               rts.a24
ff0cd2                 IFff0cca_end:
ff0cd2                                 ;; IF == 155 {
ff0cd2 c9 9b                               cmp #$9b
ff0cd4 d0 04                               bne +4                ; IFff0cd2_end [ff0cda]
ff0cd6 a9 01                               lda #$1
ff0cd8 4f 60                               rts.a24
ff0cda                 IFff0cd2_end:
ff0cda 9c ff d0                            stz $d0ff             ; LINENUM
ff0cdd                 IFff0cc1_end:
ff0cdd 4f 20 a2 07 ff                      jsr.a24 $ff07a2       ; NextLine
ff0ce2 9c fe 03                            stz $03fe             ; TXTPOS
ff0ce5 ac fe 03                            ldy $03fe             ; TXTPOS
ff0ce8 a9 00                               lda #$0
ff0cea 4f 60                               rts.a24

ff0cec ; SUB DoPeek:
00d000          ; VAR @ARGN
00d001          ; VAR @CMD
00d004          ; VAR @START_ADDR
00d007          ; VAR @END_ADDR
00d0ff          ; VAR @LINENUM
00d0fc-00d0fe   ; VAR @CUR_ADDR
000003-000005   ; VAR @ADDR
ff0cec ad 00 d0                            lda $d000             ; ARGN
ff0cef                                 ;; IF < 1 {
ff0cef c9 01                               cmp #$1
ff0cf1 b0 10                               bcs +16               ; IFff0cef_end [ff0d03]
ff0cf3 2f a9 96 80 ff                      lda.t #$ff8096        ; NoAddressErrStr
ff0cf8 2f 8d 00 d7                         sta.t $00d700
ff0cfc 4f 20 8e 06 ff                      jsr.a24 $ff068e       ; PrintError
ff0d01 4f 60                               rts.a24
ff0d03                 IFff0cef_end:
ff0d03 2f ad 04 d0                         lda.t $00d004         ; START_ADDR
ff0d07 2f 8d 00 d7                         sta.t $00d700
ff0d0b 4f 20 7d 05 ff                      jsr.a24 $ff057d       ; ParseNumber
ff0d10 2f 29 f0 ff ff                      and.t #$fffff0
ff0d15 2f 8d 04 d0                         sta.t $00d004         ; START_ADDR
ff0d19 ad 00 d0                            lda $d000             ; ARGN
ff0d1c                                 ;; IF >= 2 {
ff0d1c c9 02                               cmp #$2
ff0d1e 90 32                               bcc +50               ; IFff0d1c_else [ff0d52]
ff0d20 2f ae 07 d0                         ldx.t $00d007         ; END_ADDR
ff0d24 4f 7b                               lda.a24 X
ff0d26 c9 2b                               cmp #$2b
ff0d28                                 ;; IF == {
ff0d28 d0 19                               bne +25               ; IFff0d28_else [ff0d43]
ff0d2a 2f e8                               inx.t
ff0d2c 2f 8e 00 d7                         stx.t $00d700
ff0d30 4f 20 7d 05 ff                      jsr.a24 $ff057d       ; ParseNumber
ff0d35 2f aa                               tax.t
ff0d37 2f ad 04 d0                         lda.t $00d004         ; START_ADDR
ff0d3b 2f db                               adx.t
ff0d3d 2f 8d 07 d0                         sta.t $00d007         ; END_ADDR
ff0d41 80 0d                               bra +13               ; IFff0d28_end [ff0d50]
ff0d43                 IFff0d28_else:
ff0d43                                 ;; ELSE
ff0d43 2f 8e 00 d7                         stx.t $00d700
ff0d47 4f 20 7d 05 ff                      jsr.a24 $ff057d       ; ParseNumber
ff0d4c 2f 8d 07 d0                         sta.t $00d007         ; END_ADDR
ff0d50                 IFff0d28_end:
ff0d50 80 0e                               bra +14               ; IFff0d1c_end [ff0d60]
ff0d52                 IFff0d1c_else:
ff0d52                                 ;; ELSE
ff0d52 2f ad 04 d0                         lda.t $00d004         ; START_ADDR
ff0d56 18                                  clc
ff0d57 2f 69 40 00 00                      adc.t #$40
ff0d5c 2f 8d 07 d0                         sta.t $00d007         ; END_ADDR
ff0d60                 IFff0d1c_end:
ff0d60 9c ff d0                            stz $d0ff             ; LINENUM
ff0d63 2f ad 04 d0                         lda.t $00d004         ; START_ADDR
ff0d67 2f 8d fc d0                         sta.t $00d0fc         ; CUR_ADDR
ff0d6b                 LOOPff0d6b_start:
ff0d6b                                 ;; LOOP {
ff0d6b                 LOOPff0d6b_loop:
ff0d6b 4f 20 97 0d ff                      jsr.a24 $ff0d97       ; Draw_Peek_Line
ff0d70 4f 20 f6 0d ff                      jsr.a24 $ff0df6       ; Loop_Paginate
ff0d75                                 ;; IF != {
ff0d75 f0 04                               beq +4                ; IFff0d75_end [ff0d7b]
ff0d77                                 ;; BREAK
ff0d77 4f 80 1a 00                         bra.a24 +26           ; loopff0d6b_end [ff0d95]
ff0d7b                 IFff0d75_end:
ff0d7b 2f ad fc d0                         lda.t $00d0fc         ; CUR_ADDR
ff0d7f 18                                  clc
ff0d80 2f 69 08 00 00                      adc.t #$8
ff0d85 2f 8d fc d0                         sta.t $00d0fc         ; CUR_ADDR
ff0d89 2f cd 07 d0                         cmp.t $00d007         ; END_ADDR
ff0d8d                                 ;; IF >= {
ff0d8d 90 04                               bcc +4                ; IFff0d8d_end [ff0d93]
ff0d8f                                 ;; BREAK
ff0d8f 4f 80 02 00                         bra.a24 +2            ; loopff0d6b_end [ff0d95]
ff0d93                 IFff0d8d_end:
ff0d93 80 d6                               bra -42               ; LOOPff0d6b_loop [ff0d6b]
ff0d95                 LOOPff0d6b_end:
ff0d95 4f 60                               rts.a24

ff0d97 ; SUB Draw_Peek_Line:
00d0fc-00d0fe   ; VAR @CUR_ADDR
000000          ; VAR @IDX
000003-000005   ; VAR @ADDR
ff0d97 2f ad fc d0                         lda.t $00d0fc         ; CUR_ADDR
ff0d9b 2f 85 03                            sta.t $03             ; ADDR
ff0d9e a9 a4                               lda #$a4
ff0da0 4f 20 a4 06 ff                      jsr.a24 $ff06a4       ; PrintChar
ff0da5 2f a5 03                            lda.t $03             ; ADDR
ff0da8 4f 20 14 05 ff                      jsr.a24 $ff0514       ; PrintHex24
ff0dad a9 ad                               lda #$ad
ff0daf 4f 20 a4 06 ff                      jsr.a24 $ff06a4       ; PrintChar
ff0db4                 FORff0db4_start:
ff0db4                                 ;; FOR @IDX = 0 TO 7 {
ff0db4 a2 00                               ldx #$0
ff0db6 86 00                               stx $00
ff0db8                 FORff0db4_loop:
ff0db8 a4 00                               ldy $00               ; IDX
ff0dba 4f b1 03                            lda.a24 ($03),Y       ; ADDR
ff0dbd 4f 20 4d 05 ff                      jsr.a24 $ff054d       ; PrintHexByte
ff0dc2 4f 20 b5 06 ff                      jsr.a24 $ff06b5       ; PrintSpace
ff0dc7 e6 00                               inc $00
ff0dc9 a6 00                               ldx $00
ff0dcb e0 08                               cpx #$8
ff0dcd d0 e9                               bne -23               ; FORff0db4_loop [ff0db8]
ff0dcf                 FORff0db4_end:
ff0dcf                 FORff0dcf_start:
ff0dcf                                 ;; FOR @IDX = 0 TO 7 {
ff0dcf a2 00                               ldx #$0
ff0dd1 86 00                               stx $00
ff0dd3                 FORff0dcf_loop:
ff0dd3 a4 00                               ldy $00               ; IDX
ff0dd5 4f b1 03                            lda.a24 ($03),Y       ; ADDR
ff0dd8                                 ;; IF < 128 {
ff0dd8 c9 80                               cmp #$80
ff0dda b0 0b                               bcs +11               ; IFff0dd8_end [ff0de7]
ff0ddc                                 ;; IF == 0 {
ff0ddc c9 00                               cmp #$0
ff0dde d0 04                               bne +4                ; IFff0ddc_else [ff0de4]
ff0de0 a9 ae                               lda #$ae
ff0de2 80 03                               bra +3                ; IFff0ddc_end [ff0de7]
ff0de4                 IFff0ddc_else:
ff0de4                                 ;; ELSE
ff0de4 18                                  clc
ff0de5 69 80                               adc #$80
ff0de7                 IFff0ddc_end:
ff0de7                 IFff0dd8_end:
ff0de7 4f 20 a4 06 ff                      jsr.a24 $ff06a4       ; PrintChar
ff0dec e6 00                               inc $00
ff0dee a6 00                               ldx $00
ff0df0 e0 08                               cpx #$8
ff0df2 d0 df                               bne -33               ; FORff0dcf_loop [ff0dd3]
ff0df4                 FORff0dcf_end:
ff0df4 4f 60                               rts.a24

ff0df6 ; SUB Loop_Paginate:
00d0ff          ; VAR @LINENUM
ff0df6 ee ff d0                            inc $d0ff             ; LINENUM
ff0df9 ad ff d0                            lda $d0ff             ; LINENUM
ff0dfc                                 ;; IF == 22 {
ff0dfc c9 16                               cmp #$16
ff0dfe d0 18                               bne +24               ; IFff0dfc_end [ff0e18]
ff0e00 4f 20 6d 08 ff                      jsr.a24 $ff086d       ; GetChar
ff0e05                                 ;; IF == 131 {
ff0e05 c9 83                               cmp #$83
ff0e07 d0 04                               bne +4                ; IFff0e05_end [ff0e0d]
ff0e09 a9 01                               lda #$1
ff0e0b 4f 60                               rts.a24
ff0e0d                 IFff0e05_end:
ff0e0d                                 ;; IF == 155 {
ff0e0d c9 9b                               cmp #$9b
ff0e0f d0 04                               bne +4                ; IFff0e0d_end [ff0e15]
ff0e11 a9 01                               lda #$1
ff0e13 4f 60                               rts.a24
ff0e15                 IFff0e0d_end:
ff0e15 9c ff d0                            stz $d0ff             ; LINENUM
ff0e18                 IFff0dfc_end:
ff0e18 4f 20 a2 07 ff                      jsr.a24 $ff07a2       ; NextLine
ff0e1d 9c fe 03                            stz $03fe             ; TXTPOS
ff0e20 a9 00                               lda #$0
ff0e22 4f 60                               rts.a24

ff0e24 ; SUB DoPoke:
00d000          ; VAR @ARGN
00d001          ; VAR @CMD
00d004          ; VAR @ADDRESS
00d007          ; VAR @VALUE
00d0fc-00d0fe   ; VAR @CUR_ADDR
ff0e24 ad 00 d0                            lda $d000             ; ARGN
ff0e27                                 ;; IF < 1 {
ff0e27 c9 01                               cmp #$1
ff0e29 b0 10                               bcs +16               ; IFff0e27_end [ff0e3b]
ff0e2b 2f a9 96 80 ff                      lda.t #$ff8096        ; NoAddressErrStr
ff0e30 2f 8d 00 d7                         sta.t $00d700
ff0e34 4f 20 8e 06 ff                      jsr.a24 $ff068e       ; PrintError
ff0e39 4f 60                               rts.a24
ff0e3b                 IFff0e27_end:
ff0e3b 2f ad 04 d0                         lda.t $00d004         ; ADDRESS
ff0e3f 2f 8d 00 d7                         sta.t $00d700
ff0e43 4f 20 7d 05 ff                      jsr.a24 $ff057d       ; ParseNumber
ff0e48 2f 8d 04 d0                         sta.t $00d004         ; ADDRESS
ff0e4c ad 00 d0                            lda $d000             ; ARGN
ff0e4f                                 ;; IF < 2 {
ff0e4f c9 02                               cmp #$2
ff0e51 b0 10                               bcs +16               ; IFff0e4f_end [ff0e63]
ff0e53 2f a9 b4 80 ff                      lda.t #$ff80b4        ; NoValueErrStr
ff0e58 2f 8d 00 d7                         sta.t $00d700
ff0e5c 4f 20 8e 06 ff                      jsr.a24 $ff068e       ; PrintError
ff0e61 4f 60                               rts.a24
ff0e63                 IFff0e4f_end:
ff0e63 2f ad 07 d0                         lda.t $00d007         ; VALUE
ff0e67 2f 8d 00 d7                         sta.t $00d700
ff0e6b 4f 20 7d 05 ff                      jsr.a24 $ff057d       ; ParseNumber
ff0e70 2f 8d 07 d0                         sta.t $00d007         ; VALUE
ff0e74 4f 20 a2 07 ff                      jsr.a24 $ff07a2       ; NextLine
ff0e79 2f ae 04 d0                         ldx.t $00d004         ; ADDRESS
ff0e7d 2f ad 07 d0                         lda.t $00d007         ; VALUE
ff0e81 2f c9 ff 00 00                      cmp.t #$ff
ff0e86                                 ;; IF < {
ff0e86 b0 04                               bcs +4                ; IFff0e86_end [ff0e8c]
ff0e88 4f 8b                               sta.a24 X
ff0e8a 80 0d                               bra +13               ; skip [ff0e99]
ff0e8c                 IFff0e86_end:
ff0e8c 2f c9 ff ff 00                      cmp.t #$ffff
ff0e91                                 ;; IF < {
ff0e91 b0 04                               bcs +4                ; IFff0e91_else [ff0e97]
ff0e93 5f 8b                               sta.w.a24 X
ff0e95 80 02                               bra +2                ; IFff0e91_end [ff0e99]
ff0e97                 IFff0e91_else:
ff0e97                                 ;; ELSE
ff0e97 6f 8b                               sta.t.a24 X
ff0e99                 IFff0e91_end:
ff0e99                 skip:
ff0e99 2f ad 04 d0                         lda.t $00d004         ; ADDRESS
ff0e9d 2f 29 f0 ff ff                      and.t #$fffff0
ff0ea2 2f 8d fc d0                         sta.t $00d0fc         ; CUR_ADDR
ff0ea6 4f 20 97 0d ff                      jsr.a24 $ff0d97       ; Draw_Peek_Line
ff0eab 4f 20 a2 07 ff                      jsr.a24 $ff07a2       ; NextLine
ff0eb0 4f 20 a2 07 ff                      jsr.a24 $ff07a2       ; NextLine
ff0eb5 4f 60                               rts.a24

ff0eb7 ; SUB DoReset:
00d000          ; VAR @ARGN
ff0eb7 ea                                  nop
ff0eb8 4f 4c 00 02 ff                      jmp.a24 $ff0200       ; Reset

ff0ebd ; SUB DoText:
00d000          ; VAR @ARGN
00d001          ; VAR @CMD
00d004          ; VAR @WHERE
ff0ebd ad 00 d0                            lda $d000             ; ARGN
ff0ec0                                 ;; IF < 1 {
ff0ec0 c9 01                               cmp #$1
ff0ec2 b0 08                               bcs +8                ; IFff0ec0_end [ff0ecc]
ff0ec4 ad 54 c0                            lda $c054             ; TXTPAGE1
ff0ec7 9c fd 03                            stz $03fd             ; DISPMODE
ff0eca 4f 60                               rts.a24
ff0ecc                 IFff0ec0_end:
ff0ecc 2f ae 04 d0                         ldx.t $00d004         ; WHERE
ff0ed0 4f 7b                               lda.a24 X
ff0ed2 c9 38                               cmp #$38
ff0ed4                                 ;; IF == {
ff0ed4 d0 1e                               bne +30               ; IFff0ed4_end [ff0ef4]
ff0ed6 a0 01                               ldy #$1
ff0ed8 4f ab                               lda.a24 XY
ff0eda c9 30                               cmp #$30
ff0edc                                 ;; IF == {
ff0edc d0 06                               bne +6                ; IFff0edc_end [ff0ee4]
ff0ede a0 02                               ldy #$2
ff0ee0 4f ab                               lda.a24 XY
ff0ee2                                 ;; IF == {
ff0ee2 d0 00                               bne +0                ; IFff0ee2_end [ff0ee4]
ff0ee4                 IFff0ee2_end:
ff0ee4                 IFff0edc_end:
ff0ee4 2f a9 e4 80 ff                      lda.t #$ff80e4        ; InvalidValue
ff0ee9 2f 8d 00 d7                         sta.t $00d700
ff0eed 4f 20 8e 06 ff                      jsr.a24 $ff068e       ; PrintError
ff0ef2 4f 60                               rts.a24
ff0ef4                 IFff0ed4_end:
ff0ef4 c9 31                               cmp #$31
ff0ef6                                 ;; IF == {
ff0ef6 d0 0e                               bne +14               ; IFff0ef6_end [ff0f06]
ff0ef8 a0 01                               ldy #$1
ff0efa 4f ab                               lda.a24 XY
ff0efc                                 ;; IF == {
ff0efc d0 08                               bne +8                ; IFff0efc_end [ff0f06]
ff0efe ad 54 c0                            lda $c054             ; TXTPAGE1
ff0f01 9c fd 03                            stz $03fd             ; DISPMODE
ff0f04 4f 60                               rts.a24
ff0f06                 IFff0efc_end:
ff0f06                 IFff0ef6_end:
ff0f06 c9 32                               cmp #$32
ff0f08                                 ;; IF == {
ff0f08 d0 10                               bne +16               ; IFff0f08_end [ff0f1a]
ff0f0a a0 01                               ldy #$1
ff0f0c 4f ab                               lda.a24 XY
ff0f0e                                 ;; IF == {
ff0f0e d0 0a                               bne +10               ; IFff0f0e_end [ff0f1a]
ff0f10 ad 55 c0                            lda $c055             ; TXTPAGE2
ff0f13 a9 01                               lda #$1               ; DISP_TEXT_2
ff0f15 8d fd 03                            sta $03fd             ; DISPMODE
ff0f18 4f 60                               rts.a24
ff0f1a                 IFff0f0e_end:
ff0f1a                 IFff0f08_end:
ff0f1a 2f a9 e4 80 ff                      lda.t #$ff80e4        ; InvalidValue
ff0f1f 2f 8d 00 d7                         sta.t $00d700
ff0f23 4f 20 8e 06 ff                      jsr.a24 $ff068e       ; PrintError
ff0f28 4f 60                               rts.a24

ff0f2a ; SUB Do2Plus:
00d000          ; VAR @ARGN
ff0f2a 8d 82 c0                            sta $c082             ; LANGCLR
ff0f2d fc                                  sws
ff0f2e a2 ff                               ldx #$ff
ff0f30 9a                                  txs
ff0f31 a9 00                               lda #$0
ff0f33 8d f4 03                            sta $03f4             ; PWREDUP
ff0f36 6c fc ff                            jmp ($fffc)           ; RSTVECTOR

; 28871 BYTES of FILLER

ff8000 ; DATA TextScreenBase:
ff8000 00 04
ff8002 80 04
ff8004 00 05
ff8006 80 05
ff8008 00 06
ff800a 80 06
ff800c 00 07
ff800e 80 07
ff8010 28 04
ff8012 a8 04
ff8014 28 05
ff8016 a8 05
ff8018 28 06
ff801a a8 06
ff801c 28 07
ff801e a8 07
ff8020 50 04
ff8022 d0 04
ff8024 50 05
ff8026 d0 05
ff8028 50 06
ff802a d0 06
ff802c 50 07
ff802e d0 07

ff8030 ; DATA Hello:
ff8030 41 70 70 6c 65 20 5d 5b 34 00

ff803a ; DATA CommandListStr:
ff803a 43 4f 4d 4d 41 4e 44 53 3a 00

ff8044 ; DATA ASCIIHeaderStr:
ff8044 20 20 30 31 32 33 34 35 36 37 38 39 41 42 43 44 45 46 00

ff8057 ; DATA ASCIIDashesStr:
ff8057 20 20 2d 2d 2d 2d 2d 2d 2d 2d 2d 2d 2d 2d 2d 2d 2d 2d 00

ff806a ; DATA CatalogHeaderStr:
ff806a 43 41 54 41 4c 4f 47 20 66 6f 72 20 00

ff8077 ; DATA NoFilenameErrStr:
ff8077 2a 2a 2a 20 46 49 4c 45 4e 41 4d 45 20 6d 75 73 74 20 62 65 20 73 70 65 63 69 66 69 65 64 00

ff8096 ; DATA NoAddressErrStr:
ff8096 2a 2a 2a 20 41 44 44 52 45 53 53 20 6d 75 73 74 20 62 65 20 73 70 65 63 69 66 69 65 64 00

ff80b4 ; DATA NoValueErrStr:
ff80b4 2a 2a 2a 20 56 41 4c 55 45 20 6d 75 73 74 20 62 65 20 73 70 65 63 69 66 69 65 64 00

ff80d0 ; DATA LoadedStr:
ff80d0 4c 4f 41 44 45 44 20 00

ff80d8 ; DATA LoadedBytesToStr:
ff80d8 20 62 79 74 65 73 20 74 6f 20 24 00

ff80e4 ; DATA InvalidValue:
ff80e4 2a 2a 2a 20 49 4e 56 41 4c 49 44 20 56 41 4c 55 45 00

ff80f6 ; DATA Disk4ErrorStr:
ff80f6 2a 2a 2a 20 44 49 53 4b 34 20 45 52 52 4f 52 00

ff8106 ; DATA Disk4ErrorNotFoundStr:
ff8106 2a 2a 2a 20 44 49 53 4b 34 3a 20 46 49 4c 45 20 4e 4f 54 20 46 4f 55 4e 44 00

ff8120 ; DATA Disk4ErrorReadStr:
ff8120 2a 2a 2a 20 44 49 53 4b 34 3a 20 52 45 41 44 20 45 52 52 4f 52 00

ff8136 ; DATA BeepTimes:
ff8136 dc
ff8137 dc
ff8138 dc
ff8139 3c
ff813a 3c
ff813b 3c
ff813c 3c
ff813d 3c

ff813e ; DATA CMD_Help:
ff813e 3f 00

ff8140 ; DATA CMD_Ascii:
ff8140 61 73 63 69 69 00

ff8146 ; DATA CMD_Beep:
ff8146 62 65 65 70 00

ff814b ; DATA CMD_Catalog:
ff814b 63 61 74 61 6c 6f 67 00

ff8153 ; DATA CMD_Clear:
ff8153 63 6c 65 61 72 00

ff8159 ; DATA CMD_Echo:
ff8159 65 63 68 6f 00

ff815e ; DATA CMD_Load:
ff815e 6c 6f 61 64 00

ff8163 ; DATA CMD_Peek:
ff8163 70 65 65 6b 00

ff8168 ; DATA CMD_Poke:
ff8168 70 6f 6b 65 00

ff816d ; DATA CMD_Reset:
ff816d 72 65 73 65 74 00

ff8173 ; DATA CMD_Text:
ff8173 74 65 78 74 00

ff8178 ; DATA CMD_Wait:
ff8178 77 61 69 74 00

ff817d ; DATA CMD_View:
ff817d 76 69 65 77 00

ff8182 ; DATA CMD_2Plus:
ff8182 32 2b 00

ff8185 ; DATA CommandList:
ff8185 3e 81 ff
ff8188 2a 09 ff
ff818b 40 81 ff
ff818e cb 09 ff
ff8191 4b 81 ff
ff8194 3f 0a ff
ff8197 46 81 ff
ff819a e8 06 ff
ff819d 53 81 ff
ff81a0 d9 0a ff
ff81a3 59 81 ff
ff81a6 fe 0a ff
ff81a9 5e 81 ff
ff81ac 12 0b ff
ff81af 63 81 ff
ff81b2 ec 0c ff
ff81b5 68 81 ff
ff81b8 24 0e ff
ff81bb 6d 81 ff
ff81be b7 0e ff
ff81c1 73 81 ff
ff81c4 bd 0e ff
ff81c7 7d 81 ff
ff81ca 05 0c ff
ff81cd 78 81 ff
ff81d0 05 07 ff
ff81d3 82 81 ff
ff81d6 2a 0f ff

; 32286 BYTES of FILLER

fffff7 ; DATA Vectors:
fffff7 00 00 00
fffffa 00 00 ff
fffffd 00 00 00

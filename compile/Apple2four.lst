000000          ; GLOBAL @R0
000001          ; GLOBAL @R1
000002          ; GLOBAL @R2
000003          ; GLOBAL @R3
000004          ; GLOBAL @R4
000005          ; GLOBAL @R5
000006          ; GLOBAL @R6
000007          ; GLOBAL @R7
000008          ; GLOBAL @R8
000009          ; GLOBAL @R9
00000a          ; GLOBAL @R10
00000b          ; GLOBAL @R11
00000c          ; GLOBAL @R12
00000d          ; GLOBAL @R13
00000e          ; GLOBAL @R14
00000f          ; GLOBAL @R15
000010          ; GLOBAL @R16
000011          ; GLOBAL @R17
000012          ; GLOBAL @R18
000013          ; GLOBAL @R19
000014          ; GLOBAL @R20
000015          ; GLOBAL @R21
000016          ; GLOBAL @R22
000017          ; GLOBAL @R23
000018          ; GLOBAL @R24
000019          ; GLOBAL @R25
00001a          ; GLOBAL @R26
00001b          ; GLOBAL @R27
00001c          ; GLOBAL @R28
00001d          ; GLOBAL @R29
00001e          ; GLOBAL @R30
00001f          ; GLOBAL @R31
000020          ; GLOBAL @ARG0
000021          ; GLOBAL @ARG1
000022          ; GLOBAL @ARG2
000023          ; GLOBAL @ARG3
000024          ; GLOBAL @ARG4
000025          ; GLOBAL @ARG5
000026          ; GLOBAL @ARG6
000027          ; GLOBAL @ARG7
000020-000021   ; GLOBAL @ARGW0
000022-000023   ; GLOBAL @ARGW1
000024-000025   ; GLOBAL @ARGW2
000026-000027   ; GLOBAL @ARGW3
000027-000028   ; GLOBAL @ARGW4
000029-00002a   ; GLOBAL @ARGW5
00002b-00002c   ; GLOBAL @ARGW6
00002d-00002e   ; GLOBAL @ARGW7
000020-000022   ; GLOBAL @ARGT0
000023-000024   ; GLOBAL @ARGT1
000026-000027   ; GLOBAL @ARGT2
000029-00002a   ; GLOBAL @ARGT3
00002c-00002d   ; GLOBAL @ARGT4
00002f-000030   ; GLOBAL @ARGT5
000031-000032   ; GLOBAL @ARGT6
000034-000035   ; GLOBAL @ARGT7
000007          ; GLOBAL @ARGN
0000fe          ; GLOBAL @TXTPTR
0003ff          ; GLOBAL @TXTROW
0003fe          ; GLOBAL @TXTPOS
000200          ; GLOBAL @TXTBUFFER
000280          ; GLOBAL @TXTBUFFER2
0003fd          ; GLOBAL @DISPMODE

ff0000 ; SUB Start:
ff0000 4f 4c 00 02 ff                      jmp.a24 $ff0200       ; Reset

ff0005 ; DATA ROMVectors:
ff0005 dd 06 ff
ff0008 4d 07 ff
ff000b 78 07 ff
ff000e a1 07 ff
ff0011 88 06 ff
ff0014 96 06 ff
ff0017 54 06 ff
ff001a c0 06 ff
ff001d a8 04 ff
ff0020 56 08 ff

; 477 BYTES of FILLER

ff0200 ; SUB Reset:
ff0200 a5 00                               lda $00
ff0202 1f a5 00                            lda.w $00
ff0205 2f a5 00                            lda.t $00
ff0208 a5 01                               lda $01
ff020a a5 10                               lda $10
ff020c a5 20                               lda $20
ff020e a5 80                               lda $80
ff0210 a5 ff                               lda $ff
ff0212 a5 ee                               lda $ee
ff0214 ad 00 01                            lda $0100
ff0217 ad 01 01                            lda $0101
ff021a ad ff ff                            lda $ffff
ff021d 4f ad 40 42 0f                      lda.a24 $0f4240
ff0222 d8                                  cld
ff0223 8d 83 c0                            sta $c083             ; LANGSET
ff0226 8d 83 c0                            sta $c083             ; LANGSET
ff0229 1f                                  r16
ff022a fc                                  sws
ff022b 1f a2 ff fe                         ldx.w #$feff          ; TOP_OF_STACK
ff022f 1f 9a                               txs.w
ff0231 ad 51 c0                            lda $c051             ; TXTSET
ff0234 ad 54 c0                            lda $c054             ; TXTPAGE1
ff0237 ad 58 c0                            lda $c058             ; SETAN0
ff023a ad 5a c0                            lda $c05a             ; SETAN1
ff023d ad 5d c0                            lda $c05d             ; CLRAN2
ff0240 ad 5f c0                            lda $c05f             ; CLRAN3
ff0243 ad ff cf                            lda $cfff             ; CLRROM
ff0246 2c 10 c0                            bit $c010             ; KBDSTRB
ff0249 a9 02                               lda #$2
ff024b 8d ff 03                            sta $03ff             ; TXTROW
ff024e 9c fe 03                            stz $03fe             ; TXTPOS
ff0251 a2 00                               ldx #$0
ff0253 a9 01                               lda #$1               ; DISP_TEXT_2
ff0255 8d fd 03                            sta $03fd             ; DISPMODE
ff0258 4f 20 4d 07 ff                      jsr.a24 $ff074d       ; ClearScreen
ff025d 9c fd 03                            stz $03fd             ; DISPMODE
ff0260 a2 00                               ldx #$0
ff0262 4f 20 4d 07 ff                      jsr.a24 $ff074d       ; ClearScreen
ff0267 4f 20 56 08 ff                      jsr.a24 $ff0856       ; AppleII4

ff026c ; SUB EchoKeys:
ff026c 4f 20 dc 07 ff                      jsr.a24 $ff07dc       ; ClearInputBuffers
ff0271                 LOOPff0271_start:
ff0271                                 ;; LOOP {
ff0271                 LOOPff0271_loop:
ff0271 4f 20 9a 04 ff                      jsr.a24 $ff049a       ; ScreenBase
ff0276 ad fe 03                            lda $03fe             ; TXTPOS
ff0279                                 ;; IF == {
ff0279 d0 0c                               bne +12               ; IFff0279_end [ff0287]
ff027b a9 ba                               lda #$ba
ff027d 4f 20 88 06 ff                      jsr.a24 $ff0688       ; PrintChar
ff0282 4f 20 a6 06 ff                      jsr.a24 $ff06a6       ; PrintCursor
ff0287                 IFff0279_end:
ff0287                 LOOPff0287_start:
ff0287                                 ;; LOOP {
ff0287                 LOOPff0287_loop:
ff0287 2c 00 c0                            bit $c000             ; KBD
ff028a                                 ;; IF - {
ff028a 10 04                               bpl +4                ; IFff028a_end [ff0290]
ff028c                                 ;; BREAK
ff028c 4f 80 02 00                         bra.a24 +2            ; loopff0287_end [ff0292]
ff0290                 IFff028a_end:
ff0290 80 f5                               bra -11               ; LOOPff0287_loop [ff0287]
ff0292                 LOOPff0287_end:
ff0292 ad 00 c0                            lda $c000             ; KBD
ff0295 2c 10 c0                            bit $c010             ; KBDSTRB
ff0298                                 ;; IF == 141 {
ff0298 c9 8d                               cmp #$8d
ff029a d0 1b                               bne +27               ; IFff0298_end [ff02b7]
ff029c 4f 20 b3 06 ff                      jsr.a24 $ff06b3       ; ClearCursor
ff02a1 4f 20 78 07 ff                      jsr.a24 $ff0778       ; NextLine
ff02a6 4f 20 07 08 ff                      jsr.a24 $ff0807       ; CurrentToPrevInputBuffer
ff02ab 4f 20 4c 03 ff                      jsr.a24 $ff034c       ; CommandLine
ff02b0 4f 20 ea 07 ff                      jsr.a24 $ff07ea       ; ClearCurrentInputBuffer
ff02b5                                 ;; CONTINUE
ff02b5 80 ba                               bra -70               ; loopff0271_start [ff0271]
ff02b7                 IFff0298_end:
ff02b7                                 ;; IF == 136 {
ff02b7 c9 88                               cmp #$88
ff02b9 d0 23                               bne +35               ; IFff02b7_end [ff02de]
ff02bb                                 ;; IF > 1 {
ff02bb c9 01                               cmp #$1
ff02bd f0 1d                               beq +29               ; IFff02bb_end [ff02dc]
ff02bf 90 1b                               bcc +27               ; IFff02bb_end [ff02dc]
ff02c1 4f 20 b3 06 ff                      jsr.a24 $ff06b3       ; ClearCursor
ff02c6 a9 a0                               lda #$a0
ff02c8 ac fe 03                            ldy $03fe             ; TXTPOS
ff02cb 88                                  dey
ff02cc 91 fe                               sta ($fe),Y           ; TXTPTR
ff02ce 88                                  dey
ff02cf a9 00                               lda #$0
ff02d1 99 00 02                            sta $0200,Y           ; TXTBUFFER
ff02d4 ce fe 03                            dec $03fe             ; TXTPOS
ff02d7 4f 20 a6 06 ff                      jsr.a24 $ff06a6       ; PrintCursor
ff02dc                 IFff02bb_end:
ff02dc                                 ;; CONTINUE
ff02dc 80 93                               bra -109              ; loopff0271_start [ff0271]
ff02de                 IFff02b7_end:
ff02de                                 ;; IF == 149 {
ff02de c9 95                               cmp #$95
ff02e0 d0 0d                               bne +13               ; IFff02de_end [ff02ef]
ff02e2                                 ;; IF > 1 {
ff02e2 c9 01                               cmp #$1
ff02e4 f0 07                               beq +7                ; IFff02e2_end [ff02ed]
ff02e6 90 05                               bcc +5                ; IFff02e2_end [ff02ed]
ff02e8 4f 20 39 04 ff                      jsr.a24 $ff0439       ; CompleteCommand
ff02ed                 IFff02e2_end:
ff02ed                                 ;; CONTINUE
ff02ed 80 82                               bra -126              ; loopff0271_start [ff0271]
ff02ef                 IFff02de_end:
ff02ef                                 ;; IF == 139 {
ff02ef c9 8b                               cmp #$8b
ff02f1 d0 13                               bne +19               ; IFff02ef_end [ff0306]
ff02f3 4f 20 f8 07 ff                      jsr.a24 $ff07f8       ; PrevToCurrentInputBuffer
ff02f8 4f 20 16 08 ff                      jsr.a24 $ff0816       ; InputBufferToTextScreen
ff02fd 4f 20 a6 06 ff                      jsr.a24 $ff06a6       ; PrintCursor
ff0302                                 ;; CONTINUE
ff0302 4f 80 6b ff                         bra.a24 -149          ; loopff0271_start [ff0271]
ff0306                 IFff02ef_end:
ff0306                                 ;; IF == 155 {
ff0306 c9 9b                               cmp #$9b
ff0308 d0 21                               bne +33               ; IFff0306_end [ff032b]
ff030a ae ff 03                            ldx $03ff             ; TXTROW
ff030d 4f 20 37 07 ff                      jsr.a24 $ff0737       ; ClearRow
ff0312 4f 20 ea 07 ff                      jsr.a24 $ff07ea       ; ClearCurrentInputBuffer
ff0317 a9 00                               lda #$0
ff0319 8d fe 03                            sta $03fe             ; TXTPOS
ff031c ad fd 03                            lda $03fd             ; DISPMODE
ff031f                                 ;; IF != {
ff031f f0 06                               beq +6                ; IFff031f_end [ff0327]
ff0321 ad 54 c0                            lda $c054             ; TXTPAGE1
ff0324 9c fd 03                            stz $03fd             ; DISPMODE
ff0327                 IFff031f_end:
ff0327                                 ;; CONTINUE
ff0327 4f 80 46 ff                         bra.a24 -186          ; loopff0271_start [ff0271]
ff032b                 IFff0306_end:
ff032b                                 ;; IF > 159 {
ff032b c9 9f                               cmp #$9f
ff032d f0 19                               beq +25               ; IFff032b_end [ff0348]
ff032f 90 17                               bcc +23               ; IFff032b_end [ff0348]
ff0331 ac fe 03                            ldy $03fe             ; TXTPOS
ff0334 4f 20 88 06 ff                      jsr.a24 $ff0688       ; PrintChar
ff0339 c0 28                               cpy #$28
ff033b                                 ;; IF < {
ff033b b0 0b                               bcs +11               ; IFff033b_end [ff0348]
ff033d 29 7f                               and #$7f
ff033f 88                                  dey
ff0340 99 00 02                            sta $0200,Y           ; TXTBUFFER
ff0343 4f 20 a6 06 ff                      jsr.a24 $ff06a6       ; PrintCursor
ff0348                 IFff033b_end:
ff0348                 IFff032b_end:
ff0348 4f 80 25 ff                         bra.a24 -219          ; LOOPff0271_loop [ff0271]
ff034c                 LOOPff0271_end:

ff034c ; SUB CommandLine:
000004          ; VAR @I
000005          ; VAR @I6
ff034c 1f a9 00 02                         lda.w #$200           ; TXTBUFFER
ff0350 2f 85 20                            sta.t $20             ; ARGT0
ff0353 a9 00                               lda #$0
ff0355 85 07                               sta $07               ; ARGN
ff0357 a0 03                               ldy #$3
ff0359 a2 00                               ldx #$0
ff035b                 LOOPff035b_start:
ff035b                                 ;; LOOP {
ff035b                 LOOPff035b_loop:
ff035b bd 00 02                            lda $0200,X           ; TXTBUFFER
ff035e                                 ;; IF == 0 {
ff035e c9 00                               cmp #$0
ff0360 d0 04                               bne +4                ; IFff035e_end [ff0366]
ff0362                                 ;; BREAK
ff0362 4f 80 3f 00                         bra.a24 +63           ; loopff035b_end [ff03a5]
ff0366                 IFff035e_end:
ff0366 c9 20                               cmp #$20
ff0368                                 ;; IF == {
ff0368 d0 30                               bne +48               ; IFff0368_end [ff039a]
ff036a                 LOOPff036a_start:
ff036a                                 ;; LOOP {
ff036a                 LOOPff036a_loop:
ff036a bd 00 02                            lda $0200,X           ; TXTBUFFER
ff036d                                 ;; IF == 0 {
ff036d c9 00                               cmp #$0
ff036f d0 04                               bne +4                ; IFff036d_end [ff0375]
ff0371                                 ;; BREAK
ff0371 4f 80 10 00                         bra.a24 +16           ; loopff036a_end [ff0385]
ff0375                 IFff036d_end:
ff0375 c9 20                               cmp #$20
ff0377                                 ;; IF == {
ff0377 d0 06                               bne +6                ; IFff0377_end [ff037f]
ff0379 a9 00                               lda #$0
ff037b 9d 00 02                            sta $0200,X           ; TXTBUFFER
ff037e e8                                  inx
ff037f                 IFff0377_end:
ff037f                                 ;; BREAK
ff037f 4f 80 02 00                         bra.a24 +2            ; loopff036a_end [ff0385]
ff0383 80 e5                               bra -27               ; LOOPff036a_loop [ff036a]
ff0385                 LOOPff036a_end:
ff0385 1f a9 00 02                         lda.w #$200           ; TXTBUFFER
ff0389 18                                  clc
ff038a 1f db                               adx.w
ff038c 2f 99 20 00                         sta.t $20,Y           ; ARGT0
ff0390 c8                                  iny
ff0391 c8                                  iny
ff0392 c8                                  iny
ff0393 e6 07                               inc $07               ; ARGN
ff0395 e8                                  inx
ff0396                                 ;; BREAK
ff0396 4f 80 0b 00                         bra.a24 +11           ; loopff035b_end [ff03a5]
ff039a                 IFff0368_end:
ff039a e8                                  inx
ff039b e0 7f                               cpx #$7f
ff039d                                 ;; IF >= {
ff039d 90 04                               bcc +4                ; IFff039d_end [ff03a3]
ff039f                                 ;; BREAK
ff039f 4f 80 02 00                         bra.a24 +2            ; loopff035b_end [ff03a5]
ff03a3                 IFff039d_end:
ff03a3 80 b6                               bra -74               ; LOOPff035b_loop [ff035b]
ff03a5                 LOOPff035b_end:
ff03a5                 LOOPff03a5_start:
ff03a5                                 ;; LOOP {
ff03a5                 LOOPff03a5_loop:
ff03a5 bd 00 02                            lda $0200,X           ; TXTBUFFER
ff03a8                                 ;; IF == 0 {
ff03a8 c9 00                               cmp #$0
ff03aa d0 04                               bne +4                ; IFff03a8_end [ff03b0]
ff03ac                                 ;; BREAK
ff03ac 4f 80 40 00                         bra.a24 +64           ; loopff03a5_end [ff03f0]
ff03b0                 IFff03a8_end:
ff03b0 c9 2c                               cmp #$2c
ff03b2                                 ;; IF == {
ff03b2 d0 31                               bne +49               ; IFff03b2_end [ff03e5]
ff03b4 a9 00                               lda #$0
ff03b6 9d 00 02                            sta $0200,X           ; TXTBUFFER
ff03b9 e8                                  inx
ff03ba                 LOOPff03ba_start:
ff03ba                                 ;; LOOP {
ff03ba                 LOOPff03ba_loop:
ff03ba bd 00 02                            lda $0200,X           ; TXTBUFFER
ff03bd                                 ;; IF == 0 {
ff03bd c9 00                               cmp #$0
ff03bf d0 04                               bne +4                ; IFff03bd_end [ff03c5]
ff03c1                                 ;; BREAK
ff03c1 4f 80 10 00                         bra.a24 +16           ; loopff03ba_end [ff03d5]
ff03c5                 IFff03bd_end:
ff03c5 c9 20                               cmp #$20
ff03c7                                 ;; IF == {
ff03c7 d0 06                               bne +6                ; IFff03c7_end [ff03cf]
ff03c9 a9 00                               lda #$0
ff03cb 9d 00 02                            sta $0200,X           ; TXTBUFFER
ff03ce e8                                  inx
ff03cf                 IFff03c7_end:
ff03cf                                 ;; BREAK
ff03cf 4f 80 02 00                         bra.a24 +2            ; loopff03ba_end [ff03d5]
ff03d3 80 e5                               bra -27               ; LOOPff03ba_loop [ff03ba]
ff03d5                 LOOPff03ba_end:
ff03d5 1f a9 00 02                         lda.w #$200           ; TXTBUFFER
ff03d9 18                                  clc
ff03da 1f db                               adx.w
ff03dc 2f 99 20 00                         sta.t $20,Y           ; ARGT0
ff03e0 c8                                  iny
ff03e1 c8                                  iny
ff03e2 c8                                  iny
ff03e3 e6 07                               inc $07               ; ARGN
ff03e5                 IFff03b2_end:
ff03e5 e8                                  inx
ff03e6 e0 7f                               cpx #$7f
ff03e8                                 ;; IF >= {
ff03e8 90 04                               bcc +4                ; IFff03e8_end [ff03ee]
ff03ea                                 ;; BREAK
ff03ea 4f 80 02 00                         bra.a24 +2            ; loopff03a5_end [ff03f0]
ff03ee                 IFff03e8_end:
ff03ee 80 b5                               bra -75               ; LOOPff03a5_loop [ff03a5]
ff03f0                 LOOPff03a5_end:
ff03f0 2f a5 23                            lda.t $23             ; ARGT1
ff03f3 2f 85 1d                            sta.t $1d             ; R29
ff03f6                 FORff03f6_start:
ff03f6                                 ;; FOR @I = 0 TO 13 {
ff03f6 a2 00                               ldx #$0
ff03f8 86 04                               stx $04
ff03fa                 FORff03f6_loop:
ff03fa a5 04                               lda $04               ; I
ff03fc                       ;; A <<= 2 
ff03fc 0a                                  asl
ff03fd 0a                                  asl
ff03fe 85 05                               sta $05               ; I6
ff0400 a5 04                               lda $04               ; I
ff0402                       ;; A <<= 1 
ff0402 0a                                  asl
ff0403 18                                  clc
ff0404 65 05                               adc $05               ; I6
ff0406 85 05                               sta $05               ; I6
ff0408 aa                                  tax
ff0409 6f bd 89 81 ff                      lda.t.a24 $ff8189,X   ; CommandList
ff040e 2f 85 23                            sta.t $23             ; ARGT1
ff0411 4f 20 a8 04 ff                      jsr.a24 $ff04a8       ; CompareText
ff0416                                 ;; IF - {
ff0416 10 17                               bpl +23               ; IFff0416_end [ff042f]
ff0418 2f a5 1d                            lda.t $1d             ; R29
ff041b 2f 85 23                            sta.t $23             ; ARGT1
ff041e a6 05                               ldx $05               ; I6
ff0420 6f bd 8c 81 ff                      lda.t.a24 $ff818c,X   ; CommandList
ff0425 2f 85 00                            sta.t $00             ; R0
ff0428 4f 5c 00 00 00                      jsr.a24 ($00)         ; R0
ff042d 4f 60                               rts.a24
ff042f                 IFff0416_end:
ff042f e6 04                               inc $04
ff0431 a6 04                               ldx $04
ff0433 e0 0e                               cpx #$e
ff0435 d0 c3                               bne -61               ; FORff03f6_loop [ff03fa]
ff0437                 FORff03f6_end:
ff0437 4f 60                               rts.a24

ff0439 ; SUB CompleteCommand:
000004          ; VAR @I
000005          ; VAR @I6
ff0439 1f a9 00 02                         lda.w #$200           ; TXTBUFFER
ff043d 2f 85 20                            sta.t $20             ; ARGT0
ff0440                 FORff0440_start:
ff0440                                 ;; FOR @I = 0 TO 13 {
ff0440 a2 00                               ldx #$0
ff0442 86 04                               stx $04
ff0444                 FORff0440_loop:
ff0444 a5 04                               lda $04               ; I
ff0446                       ;; A <<= 2 
ff0446 0a                                  asl
ff0447 0a                                  asl
ff0448 85 05                               sta $05               ; I6
ff044a a5 04                               lda $04               ; I
ff044c                       ;; A <<= 1 
ff044c 0a                                  asl
ff044d 18                                  clc
ff044e 65 05                               adc $05               ; I6
ff0450 85 05                               sta $05               ; I6
ff0452 aa                                  tax
ff0453 6f bd 89 81 ff                      lda.t.a24 $ff8189,X   ; CommandList
ff0458 2f 85 23                            sta.t $23             ; ARGT1
ff045b 4f 20 d2 04 ff                      jsr.a24 $ff04d2       ; CompareStartOfText
ff0460                                 ;; IF - {
ff0460 10 2e                               bpl +46               ; IFff0460_end [ff0490]
ff0462 a6 05                               ldx $05               ; I6
ff0464 6f bd 89 81 ff                      lda.t.a24 $ff8189,X   ; CommandList
ff0469 2f 85 20                            sta.t $20             ; ARGT0
ff046c 1f a9 00 02                         lda.w #$200           ; TXTBUFFER
ff0470 2f 85 23                            sta.t $23             ; ARGT1
ff0473 4f 20 f1 04 ff                      jsr.a24 $ff04f1       ; CopyString
ff0478 1f a5 fe                            lda.w $fe             ; TXTPTR
ff047b 1f 1a                               inc.w
ff047d 2f 85 23                            sta.t $23             ; ARGT1
ff0480 4f 20 04 05 ff                      jsr.a24 $ff0504       ; CopyStringHigh
ff0485 c8                                  iny
ff0486 8c fe 03                            sty $03fe             ; TXTPOS
ff0489 4f 20 a6 06 ff                      jsr.a24 $ff06a6       ; PrintCursor
ff048e 4f 60                               rts.a24
ff0490                 IFff0460_end:
ff0490 e6 04                               inc $04
ff0492 a6 04                               ldx $04
ff0494 e0 0e                               cpx #$e
ff0496 d0 ac                               bne -84               ; FORff0440_loop [ff0444]
ff0498                 FORff0440_end:
ff0498 4f 60                               rts.a24

ff049a ; SUB ScreenBase:
ff049a                       ;; X = M@$3ff 
ff049a ae ff 03                            ldx $03ff
ff049d 2b                                  xsl
ff049e 5f bd 00 80 ff                      lda.w.a24 $ff8000,X   ; TextScreenBase
ff04a3 1f 85 fe                            sta.w $fe             ; TXTPTR
ff04a6 4f 60                               rts.a24

ff04a8 ; SUB CompareText:
ff04a8                 FORff04a8_start:
ff04a8                                 ;; FOR Y = 0 TO 127 {
ff04a8 a0 00                               ldy #$0
ff04aa                 FORff04a8_loop:
ff04aa 4f b1 20                            lda.a24 ($20),Y       ; ARGT0
ff04ad 4f d1 23                            cmp.a24 ($23),Y       ; ARGT1
ff04b0                                 ;; IF != {
ff04b0 f0 04                               beq +4                ; IFff04b0_end [ff04b6]
ff04b2 a9 00                               lda #$0
ff04b4 4f 60                               rts.a24
ff04b6                 IFff04b0_end:
ff04b6                                 ;; IF == 0 {
ff04b6 c9 00                               cmp #$0
ff04b8 d0 0f                               bne +15               ; IFff04b6_end [ff04c9]
ff04ba 4f b1 23                            lda.a24 ($23),Y       ; ARGT1
ff04bd                                 ;; IF == 0 {
ff04bd c9 00                               cmp #$0
ff04bf d0 04                               bne +4                ; IFff04bd_end [ff04c5]
ff04c1 a9 ff                               lda #$ff
ff04c3 4f 60                               rts.a24
ff04c5                 IFff04bd_end:
ff04c5 a9 00                               lda #$0
ff04c7 4f 60                               rts.a24
ff04c9                 IFff04b6_end:
ff04c9 c8                                  iny
ff04ca c0 80                               cpy #$80
ff04cc d0 dc                               bne -36               ; FORff04a8_loop [ff04aa]
ff04ce                 FORff04a8_end:
ff04ce a9 00                               lda #$0
ff04d0 4f 60                               rts.a24

ff04d2 ; SUB CompareStartOfText:
ff04d2                 FORff04d2_start:
ff04d2                                 ;; FOR Y = 0 TO 127 {
ff04d2 a0 00                               ldy #$0
ff04d4                 FORff04d2_loop:
ff04d4 4f b1 20                            lda.a24 ($20),Y       ; ARGT0
ff04d7                                 ;; IF == 0 {
ff04d7 c9 00                               cmp #$0
ff04d9 d0 04                               bne +4                ; IFff04d7_end [ff04df]
ff04db a9 ff                               lda #$ff
ff04dd 4f 60                               rts.a24
ff04df                 IFff04d7_end:
ff04df 4f d1 23                            cmp.a24 ($23),Y       ; ARGT1
ff04e2                                 ;; IF != {
ff04e2 f0 04                               beq +4                ; IFff04e2_end [ff04e8]
ff04e4 a9 00                               lda #$0
ff04e6 4f 60                               rts.a24
ff04e8                 IFff04e2_end:
ff04e8 c8                                  iny
ff04e9 c0 80                               cpy #$80
ff04eb d0 e7                               bne -25               ; FORff04d2_loop [ff04d4]
ff04ed                 FORff04d2_end:
ff04ed a9 00                               lda #$0
ff04ef 4f 60                               rts.a24

ff04f1 ; SUB CopyString:
ff04f1                 FORff04f1_start:
ff04f1                                 ;; FOR Y = 0 TO 127 {
ff04f1 a0 00                               ldy #$0
ff04f3                 FORff04f1_loop:
ff04f3 4f b1 20                            lda.a24 ($20),Y       ; ARGT0
ff04f6                                 ;; IF == {
ff04f6 d0 02                               bne +2                ; IFff04f6_end [ff04fa]
ff04f8 4f 60                               rts.a24
ff04fa                 IFff04f6_end:
ff04fa 4f 91 23                            sta.a24 ($23),Y       ; ARGT1
ff04fd c8                                  iny
ff04fe c0 80                               cpy #$80
ff0500 d0 f1                               bne -15               ; FORff04f1_loop [ff04f3]
ff0502                 FORff04f1_end:
ff0502 4f 60                               rts.a24

ff0504 ; SUB CopyStringHigh:
ff0504                 FORff0504_start:
ff0504                                 ;; FOR Y = 0 TO 127 {
ff0504 a0 00                               ldy #$0
ff0506                 FORff0504_loop:
ff0506 4f b1 20                            lda.a24 ($20),Y       ; ARGT0
ff0509                                 ;; IF == {
ff0509 d0 02                               bne +2                ; IFff0509_end [ff050d]
ff050b 4f 60                               rts.a24
ff050d                 IFff0509_end:
ff050d 09 80                               ora #$80
ff050f 4f 91 23                            sta.a24 ($23),Y       ; ARGT1
ff0512 c8                                  iny
ff0513 c0 80                               cpy #$80
ff0515 d0 ef                               bne -17               ; FORff0504_loop [ff0506]
ff0517                 FORff0504_end:
ff0517 4f 60                               rts.a24

ff0519 ; SUB PrintHex24:
ff0519 2f 48                               pha.t
ff051b 2f 48                               pha.t
ff051d 2f 1b                               sr8.t
ff051f 2f 1b                               sr8.t
ff0521 4f 20 4a 05 ff                      jsr.a24 $ff054a       ; PrintHexByte
ff0526 2f 68                               pla.t
ff0528 1f 1b                               sr8.w
ff052a 4f 20 4a 05 ff                      jsr.a24 $ff054a       ; PrintHexByte
ff052f 2f 68                               pla.t
ff0531 4f 20 4a 05 ff                      jsr.a24 $ff054a       ; PrintHexByte
ff0536 4f 60                               rts.a24

ff0538 ; SUB PrintHexWord:
ff0538 1f 48                               pha.w
ff053a 1f 1b                               sr8.w
ff053c 4f 20 4a 05 ff                      jsr.a24 $ff054a       ; PrintHexByte
ff0541 1f 68                               pla.w
ff0543 4f 20 4a 05 ff                      jsr.a24 $ff054a       ; PrintHexByte
ff0548 4f 60                               rts.a24

ff054a ; SUB PrintHexByte:
ff054a 48                                  pha
ff054b 4a                                  lsr
ff054c 4a                                  lsr
ff054d 4a                                  lsr
ff054e 4a                                  lsr
ff054f 4f 20 5e 05 ff                      jsr.a24 $ff055e       ; PrintHexDigit
ff0554 68                                  pla
ff0555 29 0f                               and #$f
ff0557 4f 20 5e 05 ff                      jsr.a24 $ff055e       ; PrintHexDigit
ff055c 4f 60                               rts.a24

ff055e ; SUB PrintHexDigit:
ff055e c9 0a                               cmp #$a
ff0560 90 05                               bcc +5                ; print_hex_digit_09 [ff0567]
ff0562 18                                  clc
ff0563 69 b7                               adc #$b7
ff0565 80 02                               bra +2                ; print_hex_digit [ff0569]
ff0567                 print_hex_digit_09:
ff0567 69 b0                               adc #$b0
ff0569                 print_hex_digit:
ff0569 ac fe 03                            ldy $03fe             ; TXTPOS
ff056c 91 fe                               sta ($fe),Y           ; TXTPTR
ff056e ee fe 03                            inc $03fe             ; TXTPOS
ff0571 4f 60                               rts.a24

ff0573 ; SUB ParseNumber:
ff0573 4f b2 20                            lda.a24 ($20)         ; ARGT0
ff0576 c9 24                               cmp #$24
ff0578                                 ;; IF == {
ff0578 d0 07                               bne +7                ; IFff0578_else [ff0581]
ff057a 4f 4c 86 05 ff                      jmp.a24 $ff0586       ; ParseHexNumber
ff057f 80 05                               bra +5                ; IFff0578_end [ff0586]
ff0581                 IFff0578_else:
ff0581                                 ;; ELSE
ff0581 4f 4c f5 05 ff                      jmp.a24 $ff05f5       ; ParseDecimalNumber
ff0586                 IFff0578_end:

ff0586 ; SUB ParseHexNumber:
000000-000002   ; VAR @VAL
ff0586 2f 64 00                            stz.t $00             ; VAL
ff0589 a0 01                               ldy #$1
ff058b                 LOOPff058b_start:
ff058b                                 ;; LOOP {
ff058b                 LOOPff058b_loop:
ff058b 4f b1 20                            lda.a24 ($20),Y       ; ARGT0
ff058e                                 ;; IF == {
ff058e d0 04                               bne +4                ; IFff058e_end [ff0594]
ff0590                                 ;; BREAK
ff0590 4f 80 5c 00                         bra.a24 +92           ; loopff058b_end [ff05f0]
ff0594                 IFff058e_end:
ff0594 2f a5 00                            lda.t $00             ; VAL
ff0597 2f 0a                               asl.t
ff0599 2f 0a                               asl.t
ff059b 2f 0a                               asl.t
ff059d 2f 0a                               asl.t
ff059f 2f 85 00                            sta.t $00             ; VAL
ff05a2 4f b1 20                            lda.a24 ($20),Y       ; ARGT0
ff05a5 c9 30                               cmp #$30
ff05a7                                 ;; IF >= {
ff05a7 90 41                               bcc +65               ; IFff05a7_end [ff05ea]
ff05a9 c9 39                               cmp #$39
ff05ab                                 ;; IF <= {
ff05ab f0 02                               beq +2                ; IFff05ab_end_eq [ff05af]
ff05ad b0 0d                               bcs +13               ; IFff05ab_end [ff05bc]
ff05af                 IFff05ab_end_eq:
ff05af 38                                  sec
ff05b0 e9 30                               sbc #$30
ff05b2 18                                  clc
ff05b3 2f 65 00                            adc.t $00             ; VAL
ff05b6 2f 85 00                            sta.t $00             ; VAL
ff05b9 c8                                  iny
ff05ba                                 ;; CONTINUE
ff05ba 80 cf                               bra -49               ; loopff058b_start [ff058b]
ff05bc                 IFff05ab_end:
ff05bc c9 41                               cmp #$41
ff05be                                 ;; IF >= {
ff05be 90 2a                               bcc +42               ; IFff05be_end [ff05ea]
ff05c0 c9 47                               cmp #$47
ff05c2                                 ;; IF <= {
ff05c2 f0 02                               beq +2                ; IFff05c2_end_eq [ff05c6]
ff05c4 b0 0d                               bcs +13               ; IFff05c2_end [ff05d3]
ff05c6                 IFff05c2_end_eq:
ff05c6 38                                  sec
ff05c7 e9 37                               sbc #$37
ff05c9 18                                  clc
ff05ca 2f 65 00                            adc.t $00             ; VAL
ff05cd 2f 85 00                            sta.t $00             ; VAL
ff05d0 c8                                  iny
ff05d1                                 ;; CONTINUE
ff05d1 80 b8                               bra -72               ; loopff058b_start [ff058b]
ff05d3                 IFff05c2_end:
ff05d3 c9 61                               cmp #$61
ff05d5                                 ;; IF >= {
ff05d5 90 13                               bcc +19               ; IFff05d5_end [ff05ea]
ff05d7 c9 67                               cmp #$67
ff05d9                                 ;; IF <= {
ff05d9 f0 02                               beq +2                ; IFff05d9_end_eq [ff05dd]
ff05db b0 0d                               bcs +13               ; IFff05d9_end [ff05ea]
ff05dd                 IFff05d9_end_eq:
ff05dd 38                                  sec
ff05de e9 57                               sbc #$57
ff05e0 18                                  clc
ff05e1 2f 65 00                            adc.t $00             ; VAL
ff05e4 2f 85 00                            sta.t $00             ; VAL
ff05e7 c8                                  iny
ff05e8                                 ;; CONTINUE
ff05e8 80 a1                               bra -95               ; loopff058b_start [ff058b]
ff05ea                 IFff05d9_end:
ff05ea                 IFff05d5_end:
ff05ea                 IFff05be_end:
ff05ea                 IFff05a7_end:
ff05ea                                 ;; BREAK
ff05ea 4f 80 02 00                         bra.a24 +2            ; loopff058b_end [ff05f0]
ff05ee 80 9b                               bra -101              ; LOOPff058b_loop [ff058b]
ff05f0                 LOOPff058b_end:
ff05f0 2f a5 00                            lda.t $00             ; VAL
ff05f3 4f 60                               rts.a24

ff05f5 ; SUB ParseDecimalNumber:
000000-000002   ; VAR @VAL
ff05f5 2f 64 00                            stz.t $00             ; VAL
ff05f8 a0 00                               ldy #$0
ff05fa                 LOOPff05fa_start:
ff05fa                                 ;; LOOP {
ff05fa                 LOOPff05fa_loop:
ff05fa 4f b1 20                            lda.a24 ($20),Y       ; ARGT0
ff05fd                                 ;; IF == {
ff05fd d0 04                               bne +4                ; IFff05fd_end [ff0603]
ff05ff                                 ;; BREAK
ff05ff 4f 80 2b 00                         bra.a24 +43           ; loopff05fa_end [ff062e]
ff0603                 IFff05fd_end:
ff0603 2f a5 00                            lda.t $00             ; VAL
ff0606 4f 20 33 06 ff                      jsr.a24 $ff0633       ; Times10
ff060b 2f 85 00                            sta.t $00             ; VAL
ff060e 4f b1 20                            lda.a24 ($20),Y       ; ARGT0
ff0611 c9 30                               cmp #$30
ff0613                                 ;; IF >= {
ff0613 90 17                               bcc +23               ; IFff0613_end [ff062c]
ff0615 c9 39                               cmp #$39
ff0617                                 ;; IF <= {
ff0617 f0 02                               beq +2                ; IFff0617_end_eq [ff061b]
ff0619 b0 0d                               bcs +13               ; IFff0617_end [ff0628]
ff061b                 IFff0617_end_eq:
ff061b 38                                  sec
ff061c e9 30                               sbc #$30
ff061e 18                                  clc
ff061f 2f 65 00                            adc.t $00             ; VAL
ff0622 2f 85 00                            sta.t $00             ; VAL
ff0625 c8                                  iny
ff0626                                 ;; CONTINUE
ff0626 80 d2                               bra -46               ; loopff05fa_start [ff05fa]
ff0628                 IFff0617_end:
ff0628                                 ;; BREAK
ff0628 4f 80 02 00                         bra.a24 +2            ; loopff05fa_end [ff062e]
ff062c                 IFff0613_end:
ff062c 80 cc                               bra -52               ; LOOPff05fa_loop [ff05fa]
ff062e                 LOOPff05fa_end:
ff062e 2f a5 00                            lda.t $00             ; VAL
ff0631 4f 60                               rts.a24

ff0633 ; SUB Times10:
ff0633 2f 0a                               asl.t
ff0635 2f aa                               tax.t
ff0637 2f 0a                               asl.t
ff0639 2f 0a                               asl.t
ff063b 18                                  clc
ff063c 2f db                               adx.t
ff063e 4f 60                               rts.a24

ff0640 ; SUB Modulo:
00000c-00000e   ; VAR @MODULO
ff0640 2f 86 0c                            stx.t $0c             ; MODULO
ff0643 a0 00                               ldy #$0
ff0645                 LOOPff0645_start:
ff0645                                 ;; LOOP {
ff0645                 LOOPff0645_loop:
ff0645 38                                  sec
ff0646 2f e5 0c                            sbc.t $0c             ; MODULO
ff0649                                 ;; IF - {
ff0649 10 06                               bpl +6                ; IFff0649_end [ff0651]
ff064b 18                                  clc
ff064c 2f 65 0c                            adc.t $0c             ; MODULO
ff064f 4f 60                               rts.a24
ff0651                 IFff0649_end:
ff0651 c8                                  iny
ff0652 80 f1                               bra -15               ; LOOPff0645_loop [ff0645]
ff0654                 LOOPff0645_end:

ff0654 ; SUB PrintString:
ff0654                 FORff0654_start:
ff0654                                 ;; FOR X = 0 TO 39 {
ff0654 a2 00                               ldx #$0
ff0656                 FORff0654_loop:
ff0656 8a                                  txa
ff0657 a8                                  tay
ff0658 4f b1 20                            lda.a24 ($20),Y       ; ARGT0
ff065b f0 13                               beq +19               ; forff0654_end [ff0670]
ff065d 09 80                               ora #$80
ff065f ac fe 03                            ldy $03fe             ; TXTPOS
ff0662 c0 28                               cpy #$28
ff0664                                 ;; IF < {
ff0664 b0 05                               bcs +5                ; IFff0664_end [ff066b]
ff0666 91 fe                               sta ($fe),Y           ; TXTPTR
ff0668 ee fe 03                            inc $03fe             ; TXTPOS
ff066b                 IFff0664_end:
ff066b e8                                  inx
ff066c e0 28                               cpx #$28
ff066e d0 e6                               bne -26               ; FORff0654_loop [ff0656]
ff0670                 FORff0654_end:
ff0670 4f 60                               rts.a24

ff0672 ; SUB PrintError:
ff0672 4f 20 78 07 ff                      jsr.a24 $ff0778       ; NextLine
ff0677 4f 20 54 06 ff                      jsr.a24 $ff0654       ; PrintString
ff067c 4f 20 78 07 ff                      jsr.a24 $ff0778       ; NextLine
ff0681 4f 20 78 07 ff                      jsr.a24 $ff0778       ; NextLine
ff0686 4f 60                               rts.a24

ff0688 ; SUB PrintChar:
ff0688 ac fe 03                            ldy $03fe             ; TXTPOS
ff068b c0 28                               cpy #$28
ff068d                                 ;; IF < {
ff068d b0 05                               bcs +5                ; IFff068d_end [ff0694]
ff068f 91 fe                               sta ($fe),Y           ; TXTPTR
ff0691 ee fe 03                            inc $03fe             ; TXTPOS
ff0694                 IFff068d_end:
ff0694 4f 60                               rts.a24

ff0696 ; SUB PrintSpace:
ff0696 a9 a0                               lda #$a0
ff0698 ac fe 03                            ldy $03fe             ; TXTPOS
ff069b c0 28                               cpy #$28
ff069d                                 ;; IF < {
ff069d b0 05                               bcs +5                ; IFff069d_end [ff06a4]
ff069f 91 fe                               sta ($fe),Y           ; TXTPTR
ff06a1 ee fe 03                            inc $03fe             ; TXTPOS
ff06a4                 IFff069d_end:
ff06a4 4f 60                               rts.a24

ff06a6 ; SUB PrintCursor:
ff06a6 ac fe 03                            ldy $03fe             ; TXTPOS
ff06a9 c0 28                               cpy #$28
ff06ab                                 ;; IF < {
ff06ab b0 04                               bcs +4                ; IFff06ab_end [ff06b1]
ff06ad a9 df                               lda #$df
ff06af 91 fe                               sta ($fe),Y           ; TXTPTR
ff06b1                 IFff06ab_end:
ff06b1 4f 60                               rts.a24

ff06b3 ; SUB ClearCursor:
ff06b3 ac fe 03                            ldy $03fe             ; TXTPOS
ff06b6 c0 28                               cpy #$28
ff06b8                                 ;; IF < {
ff06b8 b0 04                               bcs +4                ; IFff06b8_end [ff06be]
ff06ba a9 a0                               lda #$a0
ff06bc 91 fe                               sta ($fe),Y           ; TXTPTR
ff06be                 IFff06b8_end:
ff06be 4f 60                               rts.a24

ff06c0 ; SUB PlayBeep:
ff06c0                 FORff06c0_start:
ff06c0                                 ;; FOR X = 0 TO 8 {
ff06c0 a2 00                               ldx #$0
ff06c2                 FORff06c0_loop:
ff06c2 4f bd 36 81 ff                      lda.a24 $ff8136,X     ; BeepTimes
ff06c7                 FORff06c7_start:
ff06c7                                 ;; FOR Y = 0 TO 16 {
ff06c7 a0 00                               ldy #$0
ff06c9                 FORff06c7_loop:
ff06c9 4f 20 dd 06 ff                      jsr.a24 $ff06dd       ; Wait
ff06ce 2c 30 c0                            bit $c030             ; SPKR
ff06d1 c8                                  iny
ff06d2 c0 11                               cpy #$11
ff06d4 d0 f3                               bne -13               ; FORff06c7_loop [ff06c9]
ff06d6                 FORff06c7_end:
ff06d6 e8                                  inx
ff06d7 e0 09                               cpx #$9
ff06d9 d0 e7                               bne -25               ; FORff06c0_loop [ff06c2]
ff06db                 FORff06c0_end:
ff06db 4f 60                               rts.a24

ff06dd ; SUB Wait:
ff06dd 2f da                               phx.t
ff06df 2f 48                               pha.t
ff06e1                 FORff06e1_start:
ff06e1                                 ;; FOR X = 1 TO 3 {
ff06e1 a2 01                               ldx #$1
ff06e3                 FORff06e1_loop:
ff06e3 2f 68                               pla.t
ff06e5 2f 48                               pha.t
ff06e7                 DOff06e7_start:
ff06e7                                 ;; DO {
ff06e7                 DOff06e7_loop:
ff06e7 2f 3a                               dec.t
ff06e9 2f c9 00 00 00                      cmp.t #$0
ff06ee                                 ;; WHILE !=
ff06ee f0 02                               beq +2                ; DOff06e7_end [ff06f2]
ff06f0 80 f5                               bra -11               ; DOff06e7_loop [ff06e7]
ff06f2                 DOff06e7_end:
ff06f2 e8                                  inx
ff06f3 e0 04                               cpx #$4
ff06f5 d0 ec                               bne -20               ; FORff06e1_loop [ff06e3]
ff06f7                 FORff06e1_end:
ff06f7 2f 68                               pla.t
ff06f9 2f fa                               plx.t
ff06fb 4f 60                               rts.a24

ff06fd ; SUB PrintDebugValue:
ff06fd 48                                  pha
ff06fe 48                                  pha
ff06ff                       ;; A >>= 4 
ff06ff 4a                                  lsr
ff0700 4a                                  lsr
ff0701 4a                                  lsr
ff0702 4a                                  lsr
ff0703                                 ;; IF >= 10 {
ff0703 c9 0a                               cmp #$a
ff0705 90 05                               bcc +5                ; IFff0703_else [ff070c]
ff0707                       ;; A += 183 
ff0707 18                                  clc
ff0708 69 b7                               adc #$b7
ff070a 80 03                               bra +3                ; IFff0703_end [ff070f]
ff070c                 IFff0703_else:
ff070c                                 ;; ELSE
ff070c                       ;; A += 176 
ff070c 18                                  clc
ff070d 69 b0                               adc #$b0
ff070f                 IFff0703_end:
ff070f 8d 26 04                            sta $0426
ff0712 68                                  pla
ff0713                       ;; A &= 15 
ff0713 29 0f                               and #$f
ff0715                                 ;; IF >= 10 {
ff0715 c9 0a                               cmp #$a
ff0717 90 05                               bcc +5                ; IFff0715_else [ff071e]
ff0719                       ;; A += 183 
ff0719 18                                  clc
ff071a 69 b7                               adc #$b7
ff071c 80 03                               bra +3                ; IFff0715_end [ff0721]
ff071e                 IFff0715_else:
ff071e                                 ;; ELSE
ff071e                       ;; A += 176 
ff071e 18                                  clc
ff071f 69 b0                               adc #$b0
ff0721                 IFff0715_end:
ff0721 8d 27 04                            sta $0427
ff0724 68                                  pla
ff0725 4f 60                               rts.a24

ff0727 ; SUB PrintDebugChar:
ff0727 8d 27 04                            sta $0427
ff072a a9 a0                               lda #$a0
ff072c 8d 26 04                            sta $0426
ff072f 4f 60                               rts.a24

ff0731 ; SUB PrintDebug2Chars:
ff0731 1f 8d 26 04                         sta.w $000426
ff0735 4f 60                               rts.a24

ff0737 ; SUB ClearRow:
ff0737 2b                                  xsl
ff0738 5f bd 00 80 ff                      lda.w.a24 $ff8000,X   ; TextScreenBase
ff073d 1f 85 fe                            sta.w $fe             ; TXTPTR
ff0740 a9 a0                               lda #$a0
ff0742 a0 00                               ldy #$0
ff0744                 loop_clear_char:
ff0744 91 fe                               sta ($fe),Y           ; TXTPTR
ff0746 c8                                  iny
ff0747 c0 28                               cpy #$28
ff0749 d0 f9                               bne -7                ; loop_clear_char [ff0744]
ff074b 4f 60                               rts.a24

ff074d ; SUB ClearScreen:
000000-000002   ; VAR @ROWPTR
ff074d 2b                                  xsl
ff074e                 DOff074e_start:
ff074e                                 ;; DO {
ff074e                 DOff074e_loop:
ff074e 6f bd 00 80 ff                      lda.t.a24 $ff8000,X   ; TextScreenBase
ff0753 ac fd 03                            ldy $03fd             ; DISPMODE
ff0756 c0 01                               cpy #$1               ; DISP_TEXT_2
ff0758                                 ;; IF == {
ff0758 d0 06                               bne +6                ; IFff0758_end [ff0760]
ff075a 18                                  clc
ff075b 2f 69 00 04 00                      adc.t #$400
ff0760                 IFff0758_end:
ff0760 1f 85 00                            sta.w $00             ; ROWPTR
ff0763 a9 a0                               lda #$a0
ff0765                 FORff0765_start:
ff0765                                 ;; FOR Y = 0 TO 39 {
ff0765 a0 00                               ldy #$0
ff0767                 FORff0765_loop:
ff0767 91 00                               sta ($00),Y           ; ROWPTR
ff0769 c8                                  iny
ff076a c0 28                               cpy #$28
ff076c d0 f9                               bne -7                ; FORff0765_loop [ff0767]
ff076e                 FORff0765_end:
ff076e e8                                  inx
ff076f e8                                  inx
ff0770 e0 30                               cpx #$30
ff0772                                 ;; WHILE !=
ff0772 f0 02                               beq +2                ; DOff074e_end [ff0776]
ff0774 80 d8                               bra -40               ; DOff074e_loop [ff074e]
ff0776                 DOff074e_end:
ff0776 4f 60                               rts.a24

ff0778 ; SUB NextLine:
ff0778 ad ff 03                            lda $03ff             ; TXTROW
ff077b c9 17                               cmp #$17
ff077d                                 ;; IF < {
ff077d b0 0f                               bcs +15               ; IFff077d_else [ff078e]
ff077f ee ff 03                            inc $03ff             ; TXTROW
ff0782 4f 20 9a 04 ff                      jsr.a24 $ff049a       ; ScreenBase
ff0787 a9 00                               lda #$0
ff0789 8d fe 03                            sta $03fe             ; TXTPOS
ff078c 80 11                               bra +17               ; IFff077d_end [ff079f]
ff078e                 IFff077d_else:
ff078e                                 ;; ELSE
ff078e a2 02                               ldx #$2
ff0790 4f 20 a1 07 ff                      jsr.a24 $ff07a1       ; ScrollScreen
ff0795 a9 17                               lda #$17
ff0797 8d ff 03                            sta $03ff             ; TXTROW
ff079a a9 00                               lda #$0
ff079c 8d fe 03                            sta $03fe             ; TXTPOS
ff079f                 IFff077d_end:
ff079f 4f 60                               rts.a24

ff07a1 ; SUB ScrollScreen:
ff07a1 2b                                  xsl
ff07a2                 loop_scroll_line:
ff07a2 5f bd 00 80 ff                      lda.w.a24 $ff8000,X   ; TextScreenBase
ff07a7 1f 85 fe                            sta.w $fe             ; TXTPTR
ff07aa 5f bd 02 80 ff                      lda.w.a24 $ff8002,X   ; TextScreenBase
ff07af 1f 85 00                            sta.w $00
ff07b2 a0 00                               ldy #$0
ff07b4                 loop_scroll_char:
ff07b4 b1 00                               lda ($00),Y
ff07b6 91 fe                               sta ($fe),Y           ; TXTPTR
ff07b8 c8                                  iny
ff07b9 c0 28                               cpy #$28
ff07bb d0 f7                               bne -9                ; loop_scroll_char [ff07b4]
ff07bd e8                                  inx
ff07be e8                                  inx
ff07bf e0 2e                               cpx #$2e
ff07c1 d0 df                               bne -33               ; loop_scroll_line [ff07a2]
ff07c3                 scroll_clear_last_line:
ff07c3 5f bd 00 80 ff                      lda.w.a24 $ff8000,X   ; TextScreenBase
ff07c8 1f 85 fe                            sta.w $fe             ; TXTPTR
ff07cb 1f a9 a0 a0                         lda.w #$a0a0
ff07cf a0 00                               ldy #$0
ff07d1                 loop_scroll_clear_line:
ff07d1 1f 91 fe                            sta.w ($fe),Y         ; TXTPTR
ff07d4 c8                                  iny
ff07d5 c8                                  iny
ff07d6 c0 28                               cpy #$28
ff07d8 d0 f7                               bne -9                ; loop_scroll_clear_line [ff07d1]
ff07da                 done_with_scroll:
ff07da 4f 60                               rts.a24

ff07dc ; SUB ClearInputBuffers:
ff07dc a9 00                               lda #$0
ff07de                 FORff07de_start:
ff07de                                 ;; FOR X = 0 TO 255 {
ff07de a2 00                               ldx #$0
ff07e0                 FORff07de_loop:
ff07e0 9d 00 02                            sta $0200,X           ; TXTBUFFER
ff07e3 e8                                  inx
ff07e4 e0 00                               cpx #$100
ff07e6 d0 f8                               bne -8                ; FORff07de_loop [ff07e0]
ff07e8                 FORff07de_end:
ff07e8 4f 60                               rts.a24

ff07ea ; SUB ClearCurrentInputBuffer:
ff07ea a9 00                               lda #$0
ff07ec                 FORff07ec_start:
ff07ec                                 ;; FOR X = 0 TO 127 {
ff07ec a2 00                               ldx #$0
ff07ee                 FORff07ec_loop:
ff07ee 9d 00 02                            sta $0200,X           ; TXTBUFFER
ff07f1 e8                                  inx
ff07f2 e0 80                               cpx #$80
ff07f4 d0 f8                               bne -8                ; FORff07ec_loop [ff07ee]
ff07f6                 FORff07ec_end:
ff07f6 4f 60                               rts.a24

ff07f8 ; SUB PrevToCurrentInputBuffer:
ff07f8                 FORff07f8_start:
ff07f8                                 ;; FOR X = 0 TO 127 {
ff07f8 a2 00                               ldx #$0
ff07fa                 FORff07f8_loop:
ff07fa bd 80 02                            lda $0280,X           ; TXTBUFFER2
ff07fd 9d 00 02                            sta $0200,X           ; TXTBUFFER
ff0800 e8                                  inx
ff0801 e0 80                               cpx #$80
ff0803 d0 f5                               bne -11               ; FORff07f8_loop [ff07fa]
ff0805                 FORff07f8_end:
ff0805 4f 60                               rts.a24

ff0807 ; SUB CurrentToPrevInputBuffer:
ff0807                 FORff0807_start:
ff0807                                 ;; FOR X = 0 TO 127 {
ff0807 a2 00                               ldx #$0
ff0809                 FORff0807_loop:
ff0809 bd 00 02                            lda $0200,X           ; TXTBUFFER
ff080c 9d 80 02                            sta $0280,X           ; TXTBUFFER2
ff080f e8                                  inx
ff0810 e0 80                               cpx #$80
ff0812 d0 f5                               bne -11               ; FORff0807_loop [ff0809]
ff0814                 FORff0807_end:
ff0814 4f 60                               rts.a24

ff0816 ; SUB InputBufferToTextScreen:
ff0816 a0 01                               ldy #$1
ff0818                 FORff0818_start:
ff0818                                 ;; FOR X = 0 TO 39 {
ff0818 a2 00                               ldx #$0
ff081a                 FORff0818_loop:
ff081a bd 00 02                            lda $0200,X           ; TXTBUFFER
ff081d                                 ;; IF == 0 {
ff081d c9 00                               cmp #$0
ff081f d0 07                               bne +7                ; IFff081d_end [ff0828]
ff0821 8c fe 03                            sty $03fe             ; TXTPOS
ff0824                                 ;; BREAK
ff0824 4f 80 0a 00                         bra.a24 +10           ; forff0818_end [ff0832]
ff0828                 IFff081d_end:
ff0828 09 80                               ora #$80
ff082a 91 fe                               sta ($fe),Y           ; TXTPTR
ff082c c8                                  iny
ff082d e8                                  inx
ff082e e0 28                               cpx #$28
ff0830 d0 e8                               bne -24               ; FORff0818_loop [ff081a]
ff0832                 FORff0818_end:
ff0832 a9 a0                               lda #$a0
ff0834                 LOOPff0834_start:
ff0834                                 ;; LOOP {
ff0834                 LOOPff0834_loop:
ff0834 c0 28                               cpy #$28
ff0836                                 ;; IF == {
ff0836 d0 04                               bne +4                ; IFff0836_end [ff083c]
ff0838                                 ;; BREAK
ff0838 4f 80 05 00                         bra.a24 +5            ; loopff0834_end [ff0841]
ff083c                 IFff0836_end:
ff083c 91 fe                               sta ($fe),Y           ; TXTPTR
ff083e c8                                  iny
ff083f 80 f3                               bra -13               ; LOOPff0834_loop [ff0834]
ff0841                 LOOPff0834_end:
ff0841 4f 60                               rts.a24

ff0843 ; SUB GetChar:
ff0843                 LOOPff0843_start:
ff0843                                 ;; LOOP {
ff0843                 LOOPff0843_loop:
ff0843 2c 00 c0                            bit $c000             ; KBD
ff0846                                 ;; IF - {
ff0846 10 04                               bpl +4                ; IFff0846_end [ff084c]
ff0848                                 ;; BREAK
ff0848 4f 80 02 00                         bra.a24 +2            ; loopff0843_end [ff084e]
ff084c                 IFff0846_end:
ff084c 80 f5                               bra -11               ; LOOPff0843_loop [ff0843]
ff084e                 LOOPff0843_end:
ff084e ad 00 c0                            lda $c000             ; KBD
ff0851 2c 10 c0                            bit $c010             ; KBDSTRB
ff0854 4f 60                               rts.a24

ff0856 ; SUB AppleII4:
ff0856                 FORff0856_start:
ff0856                                 ;; FOR X = 0 TO 39 {
ff0856 a2 00                               ldx #$0
ff0858                 FORff0856_loop:
ff0858 4f bd 30 80 ff                      lda.a24 $ff8030,X     ; Hello
ff085d f0 0a                               beq +10               ; forff0856_end [ff0869]
ff085f 09 80                               ora #$80
ff0861 9d 00 04                            sta $0400,X
ff0864 e8                                  inx
ff0865 e0 28                               cpx #$28
ff0867 d0 ef                               bne -17               ; FORff0856_loop [ff0858]
ff0869                 FORff0856_end:
ff0869 4f 60                               rts.a24

ff086b ; SUB Disk4Name:
ff086b a9 00                               lda #$0               ; DISK4_VOLUME_NAME
ff086d 8d f0 c0                            sta $c0f0             ; DISK4_CMD
ff0870 ad ff c0                            lda $c0ff             ; DISK4_GO
ff0873 85 00                               sta $00               ; R0
ff0875 ad 00 c7                            lda $c700             ; SLOT_7_ROM
ff0878 1f a9 00 c8                         lda.w #$c800          ; PR_RAM
ff087c 2f 85 20                            sta.t $20             ; ARGT0
ff087f a5 00                               lda $00               ; R0
ff0881 4f 60                               rts.a24

ff0883 ; SUB Disk4CatalogStart:
ff0883 a9 01                               lda #$1               ; DISK4_CATALOG
ff0885 8d f0 c0                            sta $c0f0             ; DISK4_CMD
ff0888 ad ff c0                            lda $c0ff             ; DISK4_GO
ff088b 4f 60                               rts.a24

ff088d ; SUB Disk4CatalogNext:
ff088d a9 02                               lda #$2               ; DISK4_CATALOG_NEXT
ff088f 8d f0 c0                            sta $c0f0             ; DISK4_CMD
ff0892 ad ff c0                            lda $c0ff             ; DISK4_GO
ff0895 85 00                               sta $00               ; R0
ff0897 ad 00 c7                            lda $c700             ; SLOT_7_ROM
ff089a 1f a9 06 c8                         lda.w #$c806          ; PR_RAM
ff089e 2f 85 20                            sta.t $20             ; ARGT0
ff08a1 a5 00                               lda $00               ; R0
ff08a3 4f 60                               rts.a24

ff08a5 ; SUB Disk4Open:
ff08a5 ad 00 c7                            lda $c700             ; SLOT_7_ROM
ff08a8                 FORff08a8_start:
ff08a8                                 ;; FOR Y = 0 TO 16 {
ff08a8 a0 00                               ldy #$0
ff08aa                 FORff08a8_loop:
ff08aa 4f b1 20                            lda.a24 ($20),Y       ; ARG0
ff08ad 99 00 c8                            sta $c800,Y           ; PR_RAM
ff08b0                                 ;; IF == {
ff08b0 d0 04                               bne +4                ; IFff08b0_end [ff08b6]
ff08b2                                 ;; BREAK
ff08b2 4f 80 05 00                         bra.a24 +5            ; forff08a8_end [ff08bb]
ff08b6                 IFff08b0_end:
ff08b6 c8                                  iny
ff08b7 c0 11                               cpy #$11
ff08b9 d0 ef                               bne -17               ; FORff08a8_loop [ff08aa]
ff08bb                 FORff08a8_end:
ff08bb a9 05                               lda #$5               ; DISK4_OPEN
ff08bd 8d f0 c0                            sta $c0f0             ; DISK4_CMD
ff08c0 ad ff c0                            lda $c0ff             ; DISK4_GO
ff08c3 ae f7 c0                            ldx $c0f7             ; DISK4_RET0
ff08c6 4f 60                               rts.a24

ff08c8 ; SUB Disk4Close:
ff08c8 8d f1 c0                            sta $c0f1             ; DISK4_ARG0
ff08cb a9 0a                               lda #$a               ; DISK4_CLOSE
ff08cd 8d f0 c0                            sta $c0f0             ; DISK4_CMD
ff08d0 ad ff c0                            lda $c0ff             ; DISK4_GO
ff08d3 4f 60                               rts.a24

ff08d5 ; SUB Disk4Read:
ff08d5 a9 06                               lda #$6               ; DISK4_READ
ff08d7 8d f0 c0                            sta $c0f0             ; DISK4_CMD
ff08da ad ff c0                            lda $c0ff             ; DISK4_GO
ff08dd                                 ;; IF != {
ff08dd f0 02                               beq +2                ; IFff08dd_end [ff08e1]
ff08df 4f 60                               rts.a24
ff08e1                 IFff08dd_end:
ff08e1 2f ad f7 c0                         lda.t $00c0f7         ; DISK4_RET0
ff08e5 2f 85 00                            sta.t $00             ; R0
ff08e8 ad 00 c7                            lda $c700             ; SLOT_7_ROM
ff08eb                 FORff08eb_start:
ff08eb                                 ;; FOR Y = 0 TO 1048576 {
ff08eb 2f a0 00 00 00                      ldy.t #$0
ff08f0                 FORff08eb_loop:
ff08f0 2f a5 00                            lda.t $00             ; R0
ff08f3 2f 98                               tya.t
ff08f5 2f c5 00                            cmp.t $00             ; R0
ff08f8 2f c4 00                            cpy.t $00             ; R0
ff08fb                                 ;; IF == {
ff08fb d0 04                               bne +4                ; IFff08fb_end [ff0901]
ff08fd                                 ;; BREAK
ff08fd 4f 80 16 00                         bra.a24 +22           ; forff08eb_end [ff0917]
ff0901                 IFff08fb_end:
ff0901 6f b9 00 c8 00                      lda.t.a24 $00c800,Y   ; PR_RAM
ff0906 6f 91 20                            sta.t.a24 ($20),Y     ; ARG0
ff0909 6f 99 00 80 00                      sta.t.a24 $008000,Y
ff090e 2f c8                               iny.t
ff0910 2f c0 01 00 10                      cpy.t #$100001
ff0915 d0 d9                               bne -39               ; FORff08eb_loop [ff08f0]
ff0917                 FORff08eb_end:
ff0917 4f 60                               rts.a24

ff0919 ; SUB Disk4PrintError:
ff0919                                 ;; IF == 3 {
ff0919 c9 03                               cmp #$3
ff091b d0 07                               bne +7                ; IFff0919_else [ff0924]
ff091d 2f a9 06 81 ff                      lda.t #$ff8106        ; Disk4ErrorNotFoundStr
ff0922 80 05                               bra +5                ; IFff0919_end [ff0929]
ff0924                 IFff0919_else:
ff0924                                 ;; ELSE
ff0924 2f a9 f6 80 ff                      lda.t #$ff80f6        ; Disk4ErrorStr
ff0929                 IFff0919_end:
ff0929 2f 85 20                            sta.t $20             ; ARGT0
ff092c 4f 20 72 06 ff                      jsr.a24 $ff0672       ; PrintError
ff0931 4f 60                               rts.a24

ff0933 ; SUB DoHelp:
000004          ; VAR @I
000005          ; VAR @I6
000006          ; VAR @COL
ff0933 4f 20 78 07 ff                      jsr.a24 $ff0778       ; NextLine
ff0938 2f a9 3a 80 ff                      lda.t #$ff803a        ; CommandListStr
ff093d 2f 85 20                            sta.t $20             ; ARGT0
ff0940 4f 20 54 06 ff                      jsr.a24 $ff0654       ; PrintString
ff0945 4f 20 78 07 ff                      jsr.a24 $ff0778       ; NextLine
ff094a                       ;; M@$4 = 1 
ff094a 2f 85 00                            sta.t $00
ff094d a9 01                               lda #$1
ff094f 85 04                               sta $04
ff0951 2f a5 00                            lda.t $00
ff0954                       ;; M@$6 = 0 
ff0954 2f 85 00                            sta.t $00
ff0957 a9 00                               lda #$0
ff0959 85 06                               sta $06
ff095b 2f a5 00                            lda.t $00
ff095e                 DOff095e_start:
ff095e                                 ;; DO {
ff095e                 DOff095e_loop:
ff095e 4f 20 96 06 ff                      jsr.a24 $ff0696       ; PrintSpace
ff0963 a5 04                               lda $04               ; I
ff0965                       ;; A <<= 2 
ff0965 0a                                  asl
ff0966 0a                                  asl
ff0967 85 05                               sta $05               ; I6
ff0969 a5 04                               lda $04               ; I
ff096b                       ;; A <<= 1 
ff096b 0a                                  asl
ff096c 18                                  clc
ff096d 65 05                               adc $05               ; I6
ff096f 85 05                               sta $05               ; I6
ff0971 aa                                  tax
ff0972 6f bd 89 81 ff                      lda.t.a24 $ff8189,X   ; CommandList
ff0977 2f 85 20                            sta.t $20             ; ARGT0
ff097a 4f 20 54 06 ff                      jsr.a24 $ff0654       ; PrintString
ff097f a5 06                               lda $06               ; COL
ff0981                                 ;; IF == {
ff0981 d0 13                               bne +19               ; IFff0981_else [ff0996]
ff0983                       ;; M@$6 = 1 
ff0983 85 00                               sta $00
ff0985 a9 01                               lda #$1
ff0987 85 06                               sta $06
ff0989 a5 00                               lda $00
ff098b                       ;; M@$3fe = 12 
ff098b 85 00                               sta $00
ff098d a9 0c                               lda #$c
ff098f 8d fe 03                            sta $03fe
ff0992 a5 00                               lda $00
ff0994 80 26                               bra +38               ; IFff0981_end [ff09bc]
ff0996                 IFff0981_else:
ff0996                                 ;; ELSE
ff0996                                 ;; IF == 1 {
ff0996 c9 01                               cmp #$1
ff0998 d0 11                               bne +17               ; IFff0996_end [ff09ab]
ff099a                       ;; M@$6 = 2 
ff099a 85 00                               sta $00
ff099c a9 02                               lda #$2
ff099e 85 06                               sta $06
ff09a0 a5 00                               lda $00
ff09a2                       ;; M@$3fe = 24 
ff09a2 85 00                               sta $00
ff09a4 a9 18                               lda #$18
ff09a6 8d fe 03                            sta $03fe
ff09a9 a5 00                               lda $00
ff09ab                 IFff0996_end:
ff09ab                                 ;; IF == 2 {
ff09ab c9 02                               cmp #$2
ff09ad d0 0d                               bne +13               ; IFff09ab_end [ff09bc]
ff09af                       ;; M@$6 = 0 
ff09af 85 00                               sta $00
ff09b1 a9 00                               lda #$0
ff09b3 85 06                               sta $06
ff09b5 a5 00                               lda $00
ff09b7 4f 20 78 07 ff                      jsr.a24 $ff0778       ; NextLine
ff09bc                 IFff09ab_end:
ff09bc                 IFff0981_end:
ff09bc e6 04                               inc $04               ; I
ff09be a5 04                               lda $04               ; I
ff09c0                                 ;; WHILE < 14
ff09c0 c9 0e                               cmp #$e
ff09c2 b0 02                               bcs +2                ; DOff095e_end [ff09c6]
ff09c4 80 98                               bra -104              ; DOff095e_loop [ff095e]
ff09c6                 DOff095e_end:
ff09c6 4f 20 78 07 ff                      jsr.a24 $ff0778       ; NextLine
ff09cb 4f 20 78 07 ff                      jsr.a24 $ff0778       ; NextLine
ff09d0 4f 60                               rts.a24

ff09d2 ; SUB DoAscii:
000004          ; VAR @I
000005          ; VAR @J
000003          ; VAR @C
ff09d2 4f 20 78 07 ff                      jsr.a24 $ff0778       ; NextLine
ff09d7 2f a9 44 80 ff                      lda.t #$ff8044        ; ASCIIHeaderStr
ff09dc 2f 85 20                            sta.t $20             ; ARGT0
ff09df 4f 20 54 06 ff                      jsr.a24 $ff0654       ; PrintString
ff09e4 4f 20 78 07 ff                      jsr.a24 $ff0778       ; NextLine
ff09e9 2f a9 57 80 ff                      lda.t #$ff8057        ; ASCIIDashesStr
ff09ee 2f 85 20                            sta.t $20             ; ARGT0
ff09f1 4f 20 54 06 ff                      jsr.a24 $ff0654       ; PrintString
ff09f6 4f 20 78 07 ff                      jsr.a24 $ff0778       ; NextLine
ff09fb                 FORff09fb_start:
ff09fb                                 ;; FOR @I = 0 TO 15 {
ff09fb a2 00                               ldx #$0
ff09fd 86 04                               stx $04
ff09ff                 FORff09fb_loop:
ff09ff a5 04                               lda $04               ; I
ff0a01 4f 20 5e 05 ff                      jsr.a24 $ff055e       ; PrintHexDigit
ff0a06 a9 ad                               lda #$ad
ff0a08 4f 20 88 06 ff                      jsr.a24 $ff0688       ; PrintChar
ff0a0d                 FORff0a0d_start:
ff0a0d                                 ;; FOR @J = 0 TO 15 {
ff0a0d a2 00                               ldx #$0
ff0a0f 86 05                               stx $05
ff0a11                 FORff0a0d_loop:
ff0a11 a5 03                               lda $03               ; C
ff0a13 4f 20 88 06 ff                      jsr.a24 $ff0688       ; PrintChar
ff0a18 e6 03                               inc $03               ; C
ff0a1a e6 05                               inc $05
ff0a1c a6 05                               ldx $05
ff0a1e e0 10                               cpx #$10
ff0a20 d0 ef                               bne -17               ; FORff0a0d_loop [ff0a11]
ff0a22                 FORff0a0d_end:
ff0a22 4f 20 78 07 ff                      jsr.a24 $ff0778       ; NextLine
ff0a27 e6 04                               inc $04
ff0a29 a6 04                               ldx $04
ff0a2b e0 10                               cpx #$10
ff0a2d d0 d0                               bne -48               ; FORff09fb_loop [ff09ff]
ff0a2f                 FORff09fb_end:
ff0a2f 2f a9 57 80 ff                      lda.t #$ff8057        ; ASCIIDashesStr
ff0a34 2f 85 20                            sta.t $20             ; ARGT0
ff0a37 4f 20 54 06 ff                      jsr.a24 $ff0654       ; PrintString
ff0a3c 4f 20 78 07 ff                      jsr.a24 $ff0778       ; NextLine
ff0a41 4f 60                               rts.a24

ff0a43 ; SUB DoCatalog:
ff0a43 4f 20 78 07 ff                      jsr.a24 $ff0778       ; NextLine
ff0a48 2f a9 6a 80 ff                      lda.t #$ff806a        ; CatalogHeaderStr
ff0a4d 2f 85 20                            sta.t $20             ; ARGT0
ff0a50 4f 20 54 06 ff                      jsr.a24 $ff0654       ; PrintString
ff0a55 4f 20 6b 08 ff                      jsr.a24 $ff086b       ; Disk4Name
ff0a5a 4f 20 54 06 ff                      jsr.a24 $ff0654       ; PrintString
ff0a5f 4f 20 78 07 ff                      jsr.a24 $ff0778       ; NextLine
ff0a64 4f 20 83 08 ff                      jsr.a24 $ff0883       ; Disk4CatalogStart
ff0a69                                 ;; IF != {
ff0a69 f0 07                               beq +7                ; IFff0a69_end [ff0a72]
ff0a6b 4f 20 19 09 ff                      jsr.a24 $ff0919       ; Disk4PrintError
ff0a70 4f 60                               rts.a24
ff0a72                 IFff0a69_end:
ff0a72 4f 20 78 07 ff                      jsr.a24 $ff0778       ; NextLine
ff0a77                 LOOPff0a77_start:
ff0a77                                 ;; LOOP {
ff0a77                 LOOPff0a77_loop:
ff0a77 4f 20 8d 08 ff                      jsr.a24 $ff088d       ; Disk4CatalogNext
ff0a7c                                 ;; IF != {
ff0a7c f0 04                               beq +4                ; IFff0a7c_end [ff0a82]
ff0a7e                                 ;; BREAK
ff0a7e 4f 80 4b 00                         bra.a24 +75           ; loopff0a77_end [ff0acd]
ff0a82                 IFff0a7c_end:
ff0a82 a9 02                               lda #$2
ff0a84 8d fe 03                            sta $03fe             ; TXTPOS
ff0a87 ad 00 c8                            lda $c800             ; DISK4_RAM
ff0a8a 4f 20 88 06 ff                      jsr.a24 $ff0688       ; PrintChar
ff0a8f ad 01 c8                            lda $c801             ; DISK4_RAM
ff0a92 4f 20 88 06 ff                      jsr.a24 $ff0688       ; PrintChar
ff0a97 ad 02 c8                            lda $c802             ; DISK4_RAM
ff0a9a 4f 20 88 06 ff                      jsr.a24 $ff0688       ; PrintChar
ff0a9f a9 06                               lda #$6
ff0aa1 8d fe 03                            sta $03fe             ; TXTPOS
ff0aa4 ad 03 c8                            lda $c803             ; DISK4_RAM
ff0aa7 4f 20 88 06 ff                      jsr.a24 $ff0688       ; PrintChar
ff0aac ad 04 c8                            lda $c804             ; DISK4_RAM
ff0aaf 4f 20 88 06 ff                      jsr.a24 $ff0688       ; PrintChar
ff0ab4 ad 05 c8                            lda $c805             ; DISK4_RAM
ff0ab7 4f 20 88 06 ff                      jsr.a24 $ff0688       ; PrintChar
ff0abc a9 0a                               lda #$a
ff0abe 8d fe 03                            sta $03fe             ; TXTPOS
ff0ac1 4f 20 54 06 ff                      jsr.a24 $ff0654       ; PrintString
ff0ac6 4f 20 78 07 ff                      jsr.a24 $ff0778       ; NextLine
ff0acb 80 aa                               bra -86               ; LOOPff0a77_loop [ff0a77]
ff0acd                 LOOPff0a77_end:
ff0acd 4f 20 78 07 ff                      jsr.a24 $ff0778       ; NextLine
ff0ad2 4f 60                               rts.a24

ff0ad4 ; SUB DoClear:
ff0ad4 ad fd 03                            lda $03fd             ; DISPMODE
ff0ad7                                 ;; IF == {
ff0ad7 d0 13                               bne +19               ; IFff0ad7_end [ff0aec]
ff0ad9 a2 02                               ldx #$2
ff0adb 4f 20 4d 07 ff                      jsr.a24 $ff074d       ; ClearScreen
ff0ae0 a9 02                               lda #$2
ff0ae2 8d ff 03                            sta $03ff             ; TXTROW
ff0ae5 a9 00                               lda #$0
ff0ae7 8d fe 03                            sta $03fe             ; TXTPOS
ff0aea 4f 60                               rts.a24
ff0aec                 IFff0ad7_end:
ff0aec                                 ;; IF == 1 {
ff0aec c9 01                               cmp #$1
ff0aee d0 07                               bne +7                ; IFff0aec_end [ff0af7]
ff0af0 a2 00                               ldx #$0
ff0af2 4f 20 4d 07 ff                      jsr.a24 $ff074d       ; ClearScreen
ff0af7                 IFff0aec_end:
ff0af7 4f 60                               rts.a24

ff0af9 ; SUB DoEcho:
ff0af9 1f a9 00 02                         lda.w #$200
ff0afd 2f 85 20                            sta.t $20             ; ARGT0
ff0b00 4f 20 54 06 ff                      jsr.a24 $ff0654       ; PrintString
ff0b05 4f 20 78 07 ff                      jsr.a24 $ff0778       ; NextLine
ff0b0a 4f 60                               rts.a24

ff0b0c ; SUB DoLoad:
000009          ; VAR @FN
000003-000005   ; VAR @IDX
000006-000008   ; VAR @ACTUAL
ff0b0c 4f 20 78 07 ff                      jsr.a24 $ff0778       ; NextLine
ff0b11 2f a5 07                            lda.t $07             ; ARGN
ff0b14                                 ;; IF < 1 {
ff0b14 c9 01                               cmp #$1
ff0b16 b0 0f                               bcs +15               ; IFff0b14_end [ff0b27]
ff0b18 2f a9 77 80 ff                      lda.t #$ff8077        ; NoFilenameErrStr
ff0b1d 2f 85 20                            sta.t $20             ; ARGT0
ff0b20 4f 20 72 06 ff                      jsr.a24 $ff0672       ; PrintError
ff0b25 4f 60                               rts.a24
ff0b27                 IFff0b14_end:
ff0b27 2f a5 07                            lda.t $07             ; ARGN
ff0b2a                                 ;; IF < 2 {
ff0b2a c9 02                               cmp #$2
ff0b2c b0 0f                               bcs +15               ; IFff0b2a_end [ff0b3d]
ff0b2e 2f a9 96 80 ff                      lda.t #$ff8096        ; NoAddressErrStr
ff0b33 2f 85 20                            sta.t $20             ; ARGT0
ff0b36 4f 20 72 06 ff                      jsr.a24 $ff0672       ; PrintError
ff0b3b 4f 60                               rts.a24
ff0b3d                 IFff0b2a_end:
ff0b3d 2f a5 26                            lda.t $26             ; ARGT2
ff0b40 2f 85 20                            sta.t $20             ; ARGT0
ff0b43 4f 20 73 05 ff                      jsr.a24 $ff0573       ; ParseNumber
ff0b48 2f 85 26                            sta.t $26             ; ARGT2
ff0b4b 2f a5 23                            lda.t $23             ; ARGT1
ff0b4e 2f 85 20                            sta.t $20             ; ARGT0
ff0b51                                 ;; IF == {
ff0b51 d0 0c                               bne +12               ; IFff0b51_end [ff0b5f]
ff0b53 2f a9                               lda.t #$ff8077        ; NoFilenameErrStr
ff0b55 2f 85 20                            sta.t $20             ; ARGT0
ff0b58 4f 20 72 06 ff                      jsr.a24 $ff0672       ; PrintError
ff0b5d 4f 60                               rts.a24
ff0b5f                 IFff0b51_end:
ff0b5f 4f 20 a5 08 ff                      jsr.a24 $ff08a5       ; Disk4Open
ff0b64                                 ;; IF != {
ff0b64 f0 07                               beq +7                ; IFff0b64_end [ff0b6d]
ff0b66 4f 20 19 09 ff                      jsr.a24 $ff0919       ; Disk4PrintError
ff0b6b 4f 60                               rts.a24
ff0b6d                 IFff0b64_end:
ff0b6d 86 09                               stx $09               ; FN
ff0b6f 1f a9 00 60                         lda.w #$6000
ff0b73 2f 85 20                            sta.t $20             ; ARGT0
ff0b76 2f 64 03                            stz.t $03             ; IDX
ff0b79                 LOOPff0b79_start:
ff0b79                                 ;; LOOP {
ff0b79                 LOOPff0b79_loop:
ff0b79 4f 20 d5 08 ff                      jsr.a24 $ff08d5       ; Disk4Read
ff0b7e                                 ;; IF == 2 {
ff0b7e c9 02                               cmp #$2
ff0b80 d0 04                               bne +4                ; IFff0b7e_end [ff0b86]
ff0b82                                 ;; BREAK
ff0b82 4f 80 2e 00                         bra.a24 +46           ; loopff0b79_end [ff0bb4]
ff0b86                 IFff0b7e_end:
ff0b86 2f ad f7 c0                         lda.t $00c0f7         ; DISK4_RET0
ff0b8a                                 ;; IF == {
ff0b8a d0 04                               bne +4                ; IFff0b8a_end [ff0b90]
ff0b8c                                 ;; BREAK
ff0b8c 4f 80 24 00                         bra.a24 +36           ; loopff0b79_end [ff0bb4]
ff0b90                 IFff0b8a_end:
ff0b90 2f 85 06                            sta.t $06             ; ACTUAL
ff0b93 a2 00                               ldx #$0
ff0b95                 LOOPff0b95_start:
ff0b95                                 ;; LOOP {
ff0b95                 LOOPff0b95_loop:
ff0b95 2f 8a                               txa.t
ff0b97 2f a8                               tay.t
ff0b99 4f b1 20                            lda.a24 ($20),Y       ; ARGT0
ff0b9c 2f a4 03                            ldy.t $03             ; IDX
ff0b9f 4f 91 26                            sta.a24 ($26),Y       ; ARGT2
ff0ba2 2f e6 03                            inc.t $03             ; IDX
ff0ba5 2f e8                               inx.t
ff0ba7 1f e4 06                            cpx.w $06             ; ACTUAL
ff0baa                                 ;; IF == {
ff0baa d0 04                               bne +4                ; IFff0baa_end [ff0bb0]
ff0bac                                 ;; BREAK
ff0bac 4f 80 02 00                         bra.a24 +2            ; loopff0b95_end [ff0bb2]
ff0bb0                 IFff0baa_end:
ff0bb0 80 e3                               bra -29               ; LOOPff0b95_loop [ff0b95]
ff0bb2                 LOOPff0b95_end:
ff0bb2 80 c5                               bra -59               ; LOOPff0b79_loop [ff0b79]
ff0bb4                 LOOPff0b79_end:
ff0bb4 a5 09                               lda $09               ; FN
ff0bb6 4f 20 c8 08 ff                      jsr.a24 $ff08c8       ; Disk4Close
ff0bbb 2f a9 d0 80 ff                      lda.t #$ff80d0        ; LoadedStr
ff0bc0 2f 85 20                            sta.t $20             ; ARGT0
ff0bc3 4f 20 54 06 ff                      jsr.a24 $ff0654       ; PrintString
ff0bc8 2f a5 06                            lda.t $06             ; ACTUAL
ff0bcb 4f 20 19 05 ff                      jsr.a24 $ff0519       ; PrintHex24
ff0bd0 2f a9 d8 80 ff                      lda.t #$ff80d8        ; LoadedBytesToStr
ff0bd5 2f 85 20                            sta.t $20             ; ARGT0
ff0bd8 4f 20 54 06 ff                      jsr.a24 $ff0654       ; PrintString
ff0bdd 2f a5 26                            lda.t $26             ; ARGT2
ff0be0 4f 20 19 05 ff                      jsr.a24 $ff0519       ; PrintHex24
ff0be5 4f 20 78 07 ff                      jsr.a24 $ff0778       ; NextLine
ff0bea 4f 20 78 07 ff                      jsr.a24 $ff0778       ; NextLine
ff0bef 4f 60                               rts.a24

ff0bf1 ; SUB DoView:
00000b          ; VAR @FN
000003-000005   ; VAR @IDX
000006-000008   ; VAR @ACTUAL
000009          ; VAR @LINENUM
00000a          ; VAR @STOP
ff0bf1 4f 20 78 07 ff                      jsr.a24 $ff0778       ; NextLine
ff0bf6 2f a5 07                            lda.t $07             ; ARGN
ff0bf9                                 ;; IF < 1 {
ff0bf9 c9 01                               cmp #$1
ff0bfb b0 0f                               bcs +15               ; IFff0bf9_end [ff0c0c]
ff0bfd 2f a9 77 80 ff                      lda.t #$ff8077        ; NoFilenameErrStr
ff0c02 2f 85 20                            sta.t $20             ; ARGT0
ff0c05 4f 20 72 06 ff                      jsr.a24 $ff0672       ; PrintError
ff0c0a 4f 60                               rts.a24
ff0c0c                 IFff0bf9_end:
ff0c0c 2f a5 23                            lda.t $23             ; ARGT1
ff0c0f 2f 85 20                            sta.t $20             ; ARGT0
ff0c12                                 ;; IF == {
ff0c12 d0 0c                               bne +12               ; IFff0c12_end [ff0c20]
ff0c14 2f a9                               lda.t #$ff8077        ; NoFilenameErrStr
ff0c16 2f 85 20                            sta.t $20             ; ARGT0
ff0c19 4f 20 72 06 ff                      jsr.a24 $ff0672       ; PrintError
ff0c1e 4f 60                               rts.a24
ff0c20                 IFff0c12_end:
ff0c20 4f 20 a5 08 ff                      jsr.a24 $ff08a5       ; Disk4Open
ff0c25                                 ;; IF != {
ff0c25 f0 07                               beq +7                ; IFff0c25_end [ff0c2e]
ff0c27 4f 20 19 09 ff                      jsr.a24 $ff0919       ; Disk4PrintError
ff0c2c 4f 60                               rts.a24
ff0c2e                 IFff0c25_end:
ff0c2e 86 0b                               stx $0b               ; FN
ff0c30 1f a9 00 60                         lda.w #$6000
ff0c34 2f 85 20                            sta.t $20             ; ARGT0
ff0c37 64 09                               stz $09               ; LINENUM
ff0c39 64 0a                               stz $0a               ; STOP
ff0c3b                 LOOPff0c3b_start:
ff0c3b                                 ;; LOOP {
ff0c3b                 LOOPff0c3b_loop:
ff0c3b 4f 20 d5 08 ff                      jsr.a24 $ff08d5       ; Disk4Read
ff0c40                                 ;; IF == 2 {
ff0c40 c9 02                               cmp #$2
ff0c42 d0 04                               bne +4                ; IFff0c40_end [ff0c48]
ff0c44                                 ;; BREAK
ff0c44 4f 80 51 00                         bra.a24 +81           ; loopff0c3b_end [ff0c99]
ff0c48                 IFff0c40_end:
ff0c48 2f ad f7 c0                         lda.t $00c0f7         ; DISK4_RET0
ff0c4c                                 ;; IF == {
ff0c4c d0 04                               bne +4                ; IFff0c4c_end [ff0c52]
ff0c4e                                 ;; BREAK
ff0c4e 4f 80 47 00                         bra.a24 +71           ; loopff0c3b_end [ff0c99]
ff0c52                 IFff0c4c_end:
ff0c52 2f 85 06                            sta.t $06             ; ACTUAL
ff0c55 2f 64 03                            stz.t $03             ; IDX
ff0c58                 LOOPff0c58_start:
ff0c58                                 ;; LOOP {
ff0c58                 LOOPff0c58_loop:
ff0c58 2f a4 03                            ldy.t $03             ; IDX
ff0c5b 4f b1 20                            lda.a24 ($20),Y       ; ARGT0
ff0c5e                                 ;; IF == 10 {
ff0c5e c9 0a                               cmp #$a
ff0c60 d0 05                               bne +5                ; IFff0c5e_end [ff0c67]
ff0c62 4f 20 b2 0c ff                      jsr.a24 $ff0cb2       ; View_Paginate
ff0c67                 IFff0c5e_end:
ff0c67                                 ;; IF >= 32 {
ff0c67 c9 20                               cmp #$20
ff0c69 90 1b                               bcc +27               ; IFff0c67_end [ff0c86]
ff0c6b ac fe 03                            ldy $03fe             ; TXTPOS
ff0c6e 09 80                               ora #$80
ff0c70 91 fe                               sta ($fe),Y           ; TXTPTR
ff0c72 ee fe 03                            inc $03fe             ; TXTPOS
ff0c75 c0 27                               cpy #$27
ff0c77                                 ;; IF >= {
ff0c77 90 0d                               bcc +13               ; IFff0c77_end [ff0c86]
ff0c79 4f 20 b2 0c ff                      jsr.a24 $ff0cb2       ; View_Paginate
ff0c7e                                 ;; IF != {
ff0c7e f0 00                               beq +0                ; IFff0c7e_end [ff0c80]
ff0c80                 IFff0c7e_end:
ff0c80 2f a4 03                            ldy.t $03             ; IDX
ff0c83 4f b1 20                            lda.a24 ($20),Y       ; ARGT0
ff0c86                 IFff0c77_end:
ff0c86                 IFff0c67_end:
ff0c86 2f e6 03                            inc.t $03             ; IDX
ff0c89 2f a5 03                            lda.t $03             ; IDX
ff0c8c 2f c5 06                            cmp.t $06             ; ACTUAL
ff0c8f                                 ;; IF == {
ff0c8f d0 04                               bne +4                ; IFff0c8f_end [ff0c95]
ff0c91                                 ;; BREAK
ff0c91 4f 80 02 00                         bra.a24 +2            ; loopff0c58_end [ff0c97]
ff0c95                 IFff0c8f_end:
ff0c95 80 c1                               bra -63               ; LOOPff0c58_loop [ff0c58]
ff0c97                 LOOPff0c58_end:
ff0c97 80 a2                               bra -94               ; LOOPff0c3b_loop [ff0c3b]
ff0c99                 LOOPff0c3b_end:
ff0c99 a5 0b                               lda $0b               ; FN
ff0c9b 4f 20 c8 08 ff                      jsr.a24 $ff08c8       ; Disk4Close
ff0ca0 a5 09                               lda $09               ; LINENUM
ff0ca2                                 ;; IF == 21 {
ff0ca2 c9 15                               cmp #$15
ff0ca4 d0 05                               bne +5                ; IFff0ca2_end [ff0cab]
ff0ca6 4f 20 43 08 ff                      jsr.a24 $ff0843       ; GetChar
ff0cab                 IFff0ca2_end:
ff0cab 4f 20 78 07 ff                      jsr.a24 $ff0778       ; NextLine
ff0cb0 4f 60                               rts.a24

ff0cb2 ; SUB View_Paginate:
000009          ; VAR @LINENUM
00000b          ; VAR @STOP
ff0cb2 e6 09                               inc $09               ; LINENUM
ff0cb4 a5 09                               lda $09               ; LINENUM
ff0cb6                                 ;; IF == 22 {
ff0cb6 c9 16                               cmp #$16
ff0cb8 d0 17                               bne +23               ; IFff0cb6_end [ff0cd1]
ff0cba 4f 20 43 08 ff                      jsr.a24 $ff0843       ; GetChar
ff0cbf                                 ;; IF == 131 {
ff0cbf c9 83                               cmp #$83
ff0cc1 d0 04                               bne +4                ; IFff0cbf_end [ff0cc7]
ff0cc3 a9 01                               lda #$1
ff0cc5 85 0b                               sta $0b               ; STOP
ff0cc7                 IFff0cbf_end:
ff0cc7                                 ;; IF == 155 {
ff0cc7 c9 9b                               cmp #$9b
ff0cc9 d0 04                               bne +4                ; IFff0cc7_end [ff0ccf]
ff0ccb a9 01                               lda #$1
ff0ccd 85 0b                               sta $0b               ; STOP
ff0ccf                 IFff0cc7_end:
ff0ccf 64 09                               stz $09               ; LINENUM
ff0cd1                 IFff0cb6_end:
ff0cd1 4f 20 78 07 ff                      jsr.a24 $ff0778       ; NextLine
ff0cd6 9c fe 03                            stz $03fe             ; TXTPOS
ff0cd9 ac fe 03                            ldy $03fe             ; TXTPOS
ff0cdc 4f 60                               rts.a24
ff0cde                       ;; M@$b 0 
ff0cde ea                                  nop

ff0cdf ; SUB DoPeek:
00ff03-00ff05   ; VAR @START_ADDR
00ff06-00ff08   ; VAR @END_ADDR
000009          ; VAR @LINENUM
00000a          ; VAR @STOP
00000b-00000d   ; VAR @CUR_ADDR
ff0cdf 2f a5 07                            lda.t $07             ; ARGN
ff0ce2                                 ;; IF < 1 {
ff0ce2 c9 01                               cmp #$1
ff0ce4 b0 0f                               bcs +15               ; IFff0ce2_end [ff0cf5]
ff0ce6 2f a9 96 80 ff                      lda.t #$ff8096        ; NoAddressErrStr
ff0ceb 2f 85 20                            sta.t $20             ; ARGT0
ff0cee 4f 20 72 06 ff                      jsr.a24 $ff0672       ; PrintError
ff0cf3 4f 60                               rts.a24
ff0cf5                 IFff0ce2_end:
ff0cf5 2f a5 23                            lda.t $23             ; ARGT1
ff0cf8 2f 85 20                            sta.t $20             ; ARGT0
ff0cfb 4f 20 73 05 ff                      jsr.a24 $ff0573       ; ParseNumber
ff0d00 2f 29 f0 ff ff                      and.t #$fffff0
ff0d05 2f 8d 03 ff                         sta.t $00ff03         ; START_ADDR
ff0d09 2f a5 07                            lda.t $07             ; ARGN
ff0d0c                                 ;; IF >= 2 {
ff0d0c c9 02                               cmp #$2
ff0d0e 90 33                               bcc +51               ; IFff0d0c_else [ff0d43]
ff0d10 b2 26                               lda ($26)             ; ARGT2
ff0d12 c9 2b                               cmp #$2b
ff0d14                                 ;; IF == {
ff0d14 d0 1c                               bne +28               ; IFff0d14_else [ff0d32]
ff0d16 2f a5 26                            lda.t $26             ; ARGT2
ff0d19 2f 85 20                            sta.t $20             ; ARGT0
ff0d1c 2f e6 20                            inc.t $20             ; ARGT0
ff0d1f 4f 20 73 05 ff                      jsr.a24 $ff0573       ; ParseNumber
ff0d24 2f aa                               tax.t
ff0d26 2f ad 03 ff                         lda.t $00ff03         ; START_ADDR
ff0d2a 2f db                               adx.t
ff0d2c 2f 8d 06 ff                         sta.t $00ff06         ; END_ADDR
ff0d30 80 0f                               bra +15               ; IFff0d14_end [ff0d41]
ff0d32                 IFff0d14_else:
ff0d32                                 ;; ELSE
ff0d32 2f a5 26                            lda.t $26             ; ARGT2
ff0d35 2f 85 20                            sta.t $20             ; ARGT0
ff0d38 4f 20 73 05 ff                      jsr.a24 $ff0573       ; ParseNumber
ff0d3d 2f 8d 06 ff                         sta.t $00ff06         ; END_ADDR
ff0d41                 IFff0d14_end:
ff0d41 80 0e                               bra +14               ; IFff0d0c_end [ff0d51]
ff0d43                 IFff0d0c_else:
ff0d43                                 ;; ELSE
ff0d43 2f ad 03 ff                         lda.t $00ff03         ; START_ADDR
ff0d47 18                                  clc
ff0d48 2f 69 40 00 00                      adc.t #$40
ff0d4d 2f 8d 06 ff                         sta.t $00ff06         ; END_ADDR
ff0d51                 IFff0d0c_end:
ff0d51 4f 20 78 07 ff                      jsr.a24 $ff0778       ; NextLine
ff0d56 64 09                               stz $09               ; LINENUM
ff0d58 64 0a                               stz $0a               ; STOP
ff0d5a 2f ad 03 ff                         lda.t $00ff03         ; START_ADDR
ff0d5e 2f 85 0b                            sta.t $0b             ; CUR_ADDR
ff0d61                 LOOPff0d61_start:
ff0d61                                 ;; LOOP {
ff0d61                 LOOPff0d61_loop:
ff0d61 4f 20 85 0d ff                      jsr.a24 $ff0d85       ; Draw_Peek_Line
ff0d66 4f 20 d1 0d ff                      jsr.a24 $ff0dd1       ; Loop_Paginate
ff0d6b 2f a5 0b                            lda.t $0b             ; CUR_ADDR
ff0d6e 18                                  clc
ff0d6f 2f 69 08 00 00                      adc.t #$8
ff0d74 2f 85 0b                            sta.t $0b             ; CUR_ADDR
ff0d77 2f cd 06 ff                         cmp.t $00ff06         ; END_ADDR
ff0d7b                                 ;; IF >= {
ff0d7b 90 04                               bcc +4                ; IFff0d7b_end [ff0d81]
ff0d7d                                 ;; BREAK
ff0d7d 4f 80 02 00                         bra.a24 +2            ; loopff0d61_end [ff0d83]
ff0d81                 IFff0d7b_end:
ff0d81 80 de                               bra -34               ; LOOPff0d61_loop [ff0d61]
ff0d83                 LOOPff0d61_end:
ff0d83 4f 60                               rts.a24

ff0d85 ; SUB Draw_Peek_Line:
00000b-00000d   ; VAR @ADDR
ff0d85 a9 a4                               lda #$a4
ff0d87 4f 20 88 06 ff                      jsr.a24 $ff0688       ; PrintChar
ff0d8c 2f a5 0b                            lda.t $0b             ; ADDR
ff0d8f 4f 20 19 05 ff                      jsr.a24 $ff0519       ; PrintHex24
ff0d94 a9 ad                               lda #$ad
ff0d96 4f 20 88 06 ff                      jsr.a24 $ff0688       ; PrintChar
ff0d9b                 FORff0d9b_start:
ff0d9b                                 ;; FOR X = 0 TO 7 {
ff0d9b a2 00                               ldx #$0
ff0d9d                 FORff0d9b_loop:
ff0d9d 8a                                  txa
ff0d9e a8                                  tay
ff0d9f b1 0b                               lda ($0b),Y           ; ADDR
ff0da1 4f 20 4a 05 ff                      jsr.a24 $ff054a       ; PrintHexByte
ff0da6 4f 20 96 06 ff                      jsr.a24 $ff0696       ; PrintSpace
ff0dab e8                                  inx
ff0dac e0 08                               cpx #$8
ff0dae d0 ed                               bne -19               ; FORff0d9b_loop [ff0d9d]
ff0db0                 FORff0d9b_end:
ff0db0                 FORff0db0_start:
ff0db0                                 ;; FOR X = 0 TO 7 {
ff0db0 a2 00                               ldx #$0
ff0db2                 FORff0db0_loop:
ff0db2 8a                                  txa
ff0db3 a8                                  tay
ff0db4 b1 0b                               lda ($0b),Y           ; ADDR
ff0db6                                 ;; IF < 128 {
ff0db6 c9 80                               cmp #$80
ff0db8 b0 0b                               bcs +11               ; IFff0db6_end [ff0dc5]
ff0dba                                 ;; IF == 0 {
ff0dba c9 00                               cmp #$0
ff0dbc d0 04                               bne +4                ; IFff0dba_else [ff0dc2]
ff0dbe a9 ae                               lda #$ae
ff0dc0 80 03                               bra +3                ; IFff0dba_end [ff0dc5]
ff0dc2                 IFff0dba_else:
ff0dc2                                 ;; ELSE
ff0dc2 18                                  clc
ff0dc3 69 80                               adc #$80
ff0dc5                 IFff0dba_end:
ff0dc5                 IFff0db6_end:
ff0dc5 4f 20 88 06 ff                      jsr.a24 $ff0688       ; PrintChar
ff0dca e8                                  inx
ff0dcb e0 08                               cpx #$8
ff0dcd d0 e3                               bne -29               ; FORff0db0_loop [ff0db2]
ff0dcf                 FORff0db0_end:
ff0dcf 4f 60                               rts.a24

ff0dd1 ; SUB Loop_Paginate:
000009          ; VAR @LINENUM
00000a          ; VAR @STOP
ff0dd1 e6 09                               inc $09               ; LINENUM
ff0dd3 a5 09                               lda $09               ; LINENUM
ff0dd5                                 ;; IF == 22 {
ff0dd5 c9 16                               cmp #$16
ff0dd7 d0 17                               bne +23               ; IFff0dd5_end [ff0df0]
ff0dd9 4f 20 43 08 ff                      jsr.a24 $ff0843       ; GetChar
ff0dde                                 ;; IF == 131 {
ff0dde c9 83                               cmp #$83
ff0de0 d0 04                               bne +4                ; IFff0dde_end [ff0de6]
ff0de2 a9 01                               lda #$1
ff0de4 85 0a                               sta $0a               ; STOP
ff0de6                 IFff0dde_end:
ff0de6                                 ;; IF == 155 {
ff0de6 c9 9b                               cmp #$9b
ff0de8 d0 04                               bne +4                ; IFff0de6_end [ff0dee]
ff0dea a9 01                               lda #$1
ff0dec 85 0a                               sta $0a               ; STOP
ff0dee                 IFff0de6_end:
ff0dee 64 09                               stz $09               ; LINENUM
ff0df0                 IFff0dd5_end:
ff0df0 4f 20 78 07 ff                      jsr.a24 $ff0778       ; NextLine
ff0df5 9c fe 03                            stz $03fe             ; TXTPOS
ff0df8 4f 60                               rts.a24

ff0dfa ; SUB DoPoke:
00000b-00000d   ; VAR @ADDR
000000          ; VAR @VALUE
ff0dfa 2f a5 07                            lda.t $07             ; ARGN
ff0dfd                                 ;; IF < 1 {
ff0dfd c9 01                               cmp #$1
ff0dff b0 0f                               bcs +15               ; IFff0dfd_end [ff0e10]
ff0e01 2f a9 96 80 ff                      lda.t #$ff8096        ; NoAddressErrStr
ff0e06 2f 85 20                            sta.t $20             ; ARGT0
ff0e09 4f 20 72 06 ff                      jsr.a24 $ff0672       ; PrintError
ff0e0e 4f 60                               rts.a24
ff0e10                 IFff0dfd_end:
ff0e10 2f a5 23                            lda.t $23             ; ARGT1
ff0e13 2f 85 20                            sta.t $20             ; ARGT0
ff0e16 4f 20 73 05 ff                      jsr.a24 $ff0573       ; ParseNumber
ff0e1b 2f 29 f0 ff ff                      and.t #$fffff0
ff0e20 2f 85 0b                            sta.t $0b             ; ADDR
ff0e23 2f a5 07                            lda.t $07             ; ARGN
ff0e26                                 ;; IF < 2 {
ff0e26 c9 02                               cmp #$2
ff0e28 b0 0f                               bcs +15               ; IFff0e26_end [ff0e39]
ff0e2a 2f a9 b4 80 ff                      lda.t #$ff80b4        ; NoValueErrStr
ff0e2f 2f 85 20                            sta.t $20             ; ARGT0
ff0e32 4f 20 72 06 ff                      jsr.a24 $ff0672       ; PrintError
ff0e37 4f 60                               rts.a24
ff0e39                 IFff0e26_end:
ff0e39 2f a5 26                            lda.t $26             ; ARGT2
ff0e3c 2f 85 20                            sta.t $20             ; ARGT0
ff0e3f 4f 20 73 05 ff                      jsr.a24 $ff0573       ; ParseNumber
ff0e44 2f 29 f0 ff ff                      and.t #$fffff0
ff0e49 2f 85 00                            sta.t $00             ; VALUE
ff0e4c 4f 20 78 07 ff                      jsr.a24 $ff0778       ; NextLine
ff0e51 2f a5 00                            lda.t $00             ; VALUE
ff0e54                                 ;; IF < 255 {
ff0e54 c9 ff                               cmp #$ff
ff0e56 b0 04                               bcs +4                ; IFff0e54_end [ff0e5c]
ff0e58 85 0b                               sta $0b               ; ADDR
ff0e5a 80 0e                               bra +14               ; skip [ff0e6a]
ff0e5c                 IFff0e54_end:
ff0e5c                                 ;; IF < 65535 {
ff0e5c 1f c9 ff ff                         cmp.w #$ffff
ff0e60 b0 05                               bcs +5                ; IFff0e5c_else [ff0e67]
ff0e62 1f 85 0b                            sta.w $0b             ; ADDR
ff0e65 80 03                               bra +3                ; IFff0e5c_end [ff0e6a]
ff0e67                 IFff0e5c_else:
ff0e67                                 ;; ELSE
ff0e67 2f 85 0b                            sta.t $0b             ; ADDR
ff0e6a                 IFff0e5c_end:
ff0e6a                 skip:
ff0e6a 2f a5 0b                            lda.t $0b             ; ADDR
ff0e6d 2f 29 f0 ff ff                      and.t #$fffff0
ff0e72 2f 85 0b                            sta.t $0b             ; ADDR
ff0e75 4f 20 85 0d ff                      jsr.a24 $ff0d85       ; Draw_Peek_Line
ff0e7a 4f 20 78 07 ff                      jsr.a24 $ff0778       ; NextLine
ff0e7f 4f 20 78 07 ff                      jsr.a24 $ff0778       ; NextLine
ff0e84 4f 60                               rts.a24

ff0e86 ; SUB DoReset:
ff0e86 ea                                  nop
ff0e87 4f 4c 00 02 ff                      jmp.a24 $ff0200       ; Reset

ff0e8c ; SUB DoText:
ff0e8c 2f a5 07                            lda.t $07             ; ARGN
ff0e8f                                 ;; IF < 1 {
ff0e8f c9 01                               cmp #$1
ff0e91 b0 08                               bcs +8                ; IFff0e8f_end [ff0e9b]
ff0e93 ad 54 c0                            lda $c054             ; TXTPAGE1
ff0e96 9c fd 03                            stz $03fd             ; DISPMODE
ff0e99 4f 60                               rts.a24
ff0e9b                 IFff0e8f_end:
ff0e9b a0 00                               ldy #$0
ff0e9d 4f b1 23                            lda.a24 ($23),Y       ; ARGT1
ff0ea0 c9 38                               cmp #$38
ff0ea2                                 ;; IF == {
ff0ea2 d0 1f                               bne +31               ; IFff0ea2_end [ff0ec3]
ff0ea4 a0 01                               ldy #$1
ff0ea6 4f b1 23                            lda.a24 ($23),Y       ; ARGT1
ff0ea9 c9 30                               cmp #$30
ff0eab                                 ;; IF == {
ff0eab d0 07                               bne +7                ; IFff0eab_end [ff0eb4]
ff0ead a0 02                               ldy #$2
ff0eaf 4f b1 23                            lda.a24 ($23),Y       ; ARGT1
ff0eb2                                 ;; IF == {
ff0eb2 d0 00                               bne +0                ; IFff0eb2_end [ff0eb4]
ff0eb4                 IFff0eb2_end:
ff0eb4                 IFff0eab_end:
ff0eb4 2f a9 e4 80 ff                      lda.t #$ff80e4        ; InvalidValue
ff0eb9 2f 85 20                            sta.t $20             ; ARG0
ff0ebc 4f 20 72 06 ff                      jsr.a24 $ff0672       ; PrintError
ff0ec1 4f 60                               rts.a24
ff0ec3                 IFff0ea2_end:
ff0ec3 c9 31                               cmp #$31
ff0ec5                                 ;; IF == {
ff0ec5 d0 0f                               bne +15               ; IFff0ec5_end [ff0ed6]
ff0ec7 a0 01                               ldy #$1
ff0ec9 4f b1 23                            lda.a24 ($23),Y       ; ARGT1
ff0ecc                                 ;; IF == {
ff0ecc d0 08                               bne +8                ; IFff0ecc_end [ff0ed6]
ff0ece ad 54 c0                            lda $c054             ; TXTPAGE1
ff0ed1 9c fd 03                            stz $03fd             ; DISPMODE
ff0ed4 4f 60                               rts.a24
ff0ed6                 IFff0ecc_end:
ff0ed6                 IFff0ec5_end:
ff0ed6 c9 32                               cmp #$32
ff0ed8                                 ;; IF == {
ff0ed8 d0 11                               bne +17               ; IFff0ed8_end [ff0eeb]
ff0eda a0 01                               ldy #$1
ff0edc 4f b1 23                            lda.a24 ($23),Y       ; ARGT1
ff0edf                                 ;; IF == {
ff0edf d0 0a                               bne +10               ; IFff0edf_end [ff0eeb]
ff0ee1 ad 55 c0                            lda $c055             ; TXTPAGE2
ff0ee4 a9 01                               lda #$1               ; DISP_TEXT_2
ff0ee6 8d fd 03                            sta $03fd             ; DISPMODE
ff0ee9 4f 60                               rts.a24
ff0eeb                 IFff0edf_end:
ff0eeb                 IFff0ed8_end:
ff0eeb 2f a9 e4 80 ff                      lda.t #$ff80e4        ; InvalidValue
ff0ef0 2f 85 20                            sta.t $20             ; ARG0
ff0ef3 4f 20 72 06 ff                      jsr.a24 $ff0672       ; PrintError
ff0ef8 4f 60                               rts.a24

ff0efa ; SUB Do2Plus:
ff0efa 8d 82 c0                            sta $c082             ; LANGCLR
ff0efd fc                                  sws
ff0efe a2 ff                               ldx #$ff
ff0f00 9a                                  txs
ff0f01 a9 00                               lda #$0
ff0f03 8d f4 03                            sta $03f4             ; PWREDUP
ff0f06 6c fc ff                            jmp ($fffc)           ; RSTVECTOR

ff0f09 ; SUB DoZzz:
ff0f09 2f a9 a0 86 01                      lda.t #$186a0
ff0f0e 4f 20 38 05 ff                      jsr.a24 $ff0538       ; PrintHexWord
ff0f13 4f 20 96 06 ff                      jsr.a24 $ff0696       ; PrintSpace
ff0f18 2f a9 a0 86 01                      lda.t #$186a0
ff0f1d 4f 20 dd 06 ff                      jsr.a24 $ff06dd       ; Wait
ff0f22 4f 20 4a 05 ff                      jsr.a24 $ff054a       ; PrintHexByte
ff0f27 4f 20 96 06 ff                      jsr.a24 $ff0696       ; PrintSpace
ff0f2c 4f 20 96 06 ff                      jsr.a24 $ff0696       ; PrintSpace
ff0f31 2f a9 40 0d 03                      lda.t #$30d40
ff0f36 4f 20 19 05 ff                      jsr.a24 $ff0519       ; PrintHex24
ff0f3b 4f 20 96 06 ff                      jsr.a24 $ff0696       ; PrintSpace
ff0f40 2f a9 40 0d 03                      lda.t #$30d40
ff0f45 4f 20 dd 06 ff                      jsr.a24 $ff06dd       ; Wait
ff0f4a 4f 20 4a 05 ff                      jsr.a24 $ff054a       ; PrintHexByte
ff0f4f 4f 20 96 06 ff                      jsr.a24 $ff0696       ; PrintSpace
ff0f54 4f 20 96 06 ff                      jsr.a24 $ff0696       ; PrintSpace
ff0f59 2f a9 00 35 0c                      lda.t #$c3500
ff0f5e 4f 20 19 05 ff                      jsr.a24 $ff0519       ; PrintHex24
ff0f63 4f 20 96 06 ff                      jsr.a24 $ff0696       ; PrintSpace
ff0f68 2f a9 00 35 0c                      lda.t #$c3500
ff0f6d 4f 20 dd 06 ff                      jsr.a24 $ff06dd       ; Wait
ff0f72 4f 20 4a 05 ff                      jsr.a24 $ff054a       ; PrintHexByte
ff0f77 4f 20 96 06 ff                      jsr.a24 $ff0696       ; PrintSpace
ff0f7c 4f 20 96 06 ff                      jsr.a24 $ff0696       ; PrintSpace
ff0f81 4f 20 78 07 ff                      jsr.a24 $ff0778       ; NextLine
ff0f86 4f 60                               rts.a24

; 28792 BYTES of FILLER

ff8000 ; DATA TextScreenBase:
ff8000 00 04
ff8002 80 04
ff8004 00 05
ff8006 80 05
ff8008 00 06
ff800a 80 06
ff800c 00 07
ff800e 80 07
ff8010 28 04
ff8012 a8 04
ff8014 28 05
ff8016 a8 05
ff8018 28 06
ff801a a8 06
ff801c 28 07
ff801e a8 07
ff8020 50 04
ff8022 d0 04
ff8024 50 05
ff8026 d0 05
ff8028 50 06
ff802a d0 06
ff802c 50 07
ff802e d0 07

ff8030 ; DATA Hello:
ff8030 41 70 70 6c 65 20 5d 5b 34 00

ff803a ; DATA CommandListStr:
ff803a 43 4f 4d 4d 41 4e 44 53 3a 00

ff8044 ; DATA ASCIIHeaderStr:
ff8044 20 20 30 31 32 33 34 35 36 37 38 39 41 42 43 44 45 46 00

ff8057 ; DATA ASCIIDashesStr:
ff8057 20 20 2d 2d 2d 2d 2d 2d 2d 2d 2d 2d 2d 2d 2d 2d 2d 2d 00

ff806a ; DATA CatalogHeaderStr:
ff806a 43 41 54 41 4c 4f 47 20 66 6f 72 20 00

ff8077 ; DATA NoFilenameErrStr:
ff8077 2a 2a 2a 20 46 49 4c 45 4e 41 4d 45 20 6d 75 73 74 20 62 65 20 73 70 65 63 69 66 69 65 64 00

ff8096 ; DATA NoAddressErrStr:
ff8096 2a 2a 2a 20 41 44 44 52 45 53 53 20 6d 75 73 74 20 62 65 20 73 70 65 63 69 66 69 65 64 00

ff80b4 ; DATA NoValueErrStr:
ff80b4 2a 2a 2a 20 56 41 4c 55 45 20 6d 75 73 74 20 62 65 20 73 70 65 63 69 66 69 65 64 00

ff80d0 ; DATA LoadedStr:
ff80d0 4c 4f 41 44 45 44 20 00

ff80d8 ; DATA LoadedBytesToStr:
ff80d8 20 62 79 74 65 73 20 74 6f 20 24 00

ff80e4 ; DATA InvalidValue:
ff80e4 2a 2a 2a 20 49 4e 56 41 4c 49 44 20 56 41 4c 55 45 00

ff80f6 ; DATA Disk4ErrorStr:
ff80f6 2a 2a 2a 20 44 49 53 4b 34 20 45 52 52 4f 52 00

ff8106 ; DATA Disk4ErrorNotFoundStr:
ff8106 2a 2a 2a 20 44 49 53 4b 34 3a 20 46 49 4c 45 20 4e 4f 54 20 46 4f 55 4e 44 00

ff8120 ; DATA Disk4ErrorReadStr:
ff8120 2a 2a 2a 20 44 49 53 4b 34 3a 20 52 45 41 44 20 45 52 52 4f 52 00

ff8136 ; DATA BeepTimes:
ff8136 dc
ff8137 dc
ff8138 dc
ff8139 3c
ff813a 3c
ff813b 3c
ff813c 3c
ff813d 3c

ff813e ; DATA CMD_Help:
ff813e 3f 00

ff8140 ; DATA CMD_Ascii:
ff8140 61 73 63 69 69 00

ff8146 ; DATA CMD_Beep:
ff8146 62 65 65 70 00

ff814b ; DATA CMD_Catalog:
ff814b 63 61 74 61 6c 6f 67 00

ff8153 ; DATA CMD_Clear:
ff8153 63 6c 65 61 72 00

ff8159 ; DATA CMD_Echo:
ff8159 65 63 68 6f 00

ff815e ; DATA CMD_Load:
ff815e 6c 6f 61 64 00

ff8163 ; DATA CMD_Peek:
ff8163 70 65 65 6b 00

ff8168 ; DATA CMD_Poke:
ff8168 70 6f 6b 65 00

ff816d ; DATA CMD_Reset:
ff816d 72 65 73 65 74 00

ff8173 ; DATA CMD_Text:
ff8173 74 65 78 74 00

ff8178 ; DATA CMD_Wait:
ff8178 77 61 69 74 00

ff817d ; DATA CMD_View:
ff817d 76 69 65 77 00

ff8182 ; DATA CMD_2Plus:
ff8182 32 2b 00

ff8185 ; DATA CMD_Zzz:
ff8185 7a 7a 7a 00

ff8189 ; DATA CommandList:
ff8189 3e 81 ff
ff818c 33 09 ff
ff818f 40 81 ff
ff8192 d2 09 ff
ff8195 4b 81 ff
ff8198 43 0a ff
ff819b 46 81 ff
ff819e c0 06 ff
ff81a1 53 81 ff
ff81a4 d4 0a ff
ff81a7 59 81 ff
ff81aa f9 0a ff
ff81ad 5e 81 ff
ff81b0 0c 0b ff
ff81b3 63 81 ff
ff81b6 df 0c ff
ff81b9 68 81 ff
ff81bc fa 0d ff
ff81bf 6d 81 ff
ff81c2 86 0e ff
ff81c5 73 81 ff
ff81c8 8c 0e ff
ff81cb 7d 81 ff
ff81ce f1 0b ff
ff81d1 78 81 ff
ff81d4 dd 06 ff
ff81d7 82 81 ff
ff81da fa 0e ff
ff81dd 85 81 ff
ff81e0 09 0f ff

ff81e3 ; DATA TestStr1:
ff81e3 31 00

ff81e5 ; DATA TestStr2:
ff81e5 31 30 00

ff81e8 ; DATA TestStr3:
ff81e8 31 30 30 00

ff81ec ; DATA TestStr4:
ff81ec 31 32 00

ff81ef ; DATA TestStr5:
ff81ef 31 32 33 00

ff81f3 ; DATA TestStr6:
ff81f3 35 34 33 32 31 00

ff81f9 ; DATA TestStr7:
ff81f9 37 36 35 34 33 32 31 00

; 32246 BYTES of FILLER

fffff7 ; DATA Vectors:
fffff7 00 00 00
fffffa 00 00 ff
fffffd 00 00 00
